

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Oct 08 17:03:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 2.05
    55                           ; Generated 20/12/2018 GMT
    56                           ; 
    57                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F25K83 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	smallconst
    90  000800                     __psmallconst:
    91                           	opt callstack 0
    92  000800  00                 	db	0
    93  000801  6C3C               	dw	27708
    94  000803  3636               	dw	13878
    95  000805                     __end_of_S4:
    96                           	opt callstack 0
    97  000805  07CF               	dw	1999
    98  000807  B950               	dw	47440
    99  000809                     __end_of_S3:
   100                           	opt callstack 0
   101  000809  8884               	dw	34948
   102  00080B  3C08               	dw	15368
   103  00080D                     __end_of_S2:
   104                           	opt callstack 0
   105  00080D  AAAB               	dw	43691
   106  00080F  BE2A               	dw	48682
   107  000811                     __end_of_S1:
   108                           	opt callstack 0
   109  000811  85A3               	dw	34211
   110  000813  3288               	dw	12936
   111  000815                     __end_of_pio2_1t:
   112                           	opt callstack 0
   113  000815  0FDA               	dw	4058
   114  000817  3FC9               	dw	16329
   115  000819                     __end_of_pio2_1:
   116                           	opt callstack 0
   117  000819  F983               	dw	63875
   118  00081B  3F22               	dw	16162
   119  00081D                     __end_of_invpio2:
   120                           	opt callstack 0
   121  00081D  0000               	dw	0
   122  00081F  3F00               	dw	16128
   123  000821                     __end_of_half:
   124                           	opt callstack 0
   125  000821  0000               	dw	0
   126  000823  4B40               	dw	19264
   127  000825                     __end_of_toint:
   128                           	opt callstack 0
   129  000825  9A17               	dw	39447
   130  000827  37CC               	dw	14284
   131  000829                     __end_of_C3:
   132                           	opt callstack 0
   133  000829  043F               	dw	1087
   134  00082B  BAB6               	dw	47798
   135  00082D                     __end_of_C2:
   136                           	opt callstack 0
   137  00082D  AA9F               	dw	43679
   138  00082F  3D2A               	dw	15658
   139  000831                     __end_of_C1:
   140                           	opt callstack 0
   141  000831  0000               	dw	0
   142  000833  BF00               	dw	48896
   143  000835                     __end_of_C0:
   144                           	opt callstack 0
   145  000835  0FDB               	dw	4059
   146  000837  40C9               	dw	16585
   147  000839                     __end_of_s4pio2:
   148                           	opt callstack 0
   149  000839  CBE4               	dw	52196
   150  00083B  4096               	dw	16534
   151  00083D                     __end_of_s3pio2:
   152                           	opt callstack 0
   153  00083D  0FDB               	dw	4059
   154  00083F  4049               	dw	16457
   155  000841                     __end_of_s2pio2:
   156                           	opt callstack 0
   157  000841  0FDB               	dw	4059
   158  000843  3FC9               	dw	16329
   159  000845                     __end_of_s1pio2:
   160                           	opt callstack 0
   161  000845  0FDB               	dw	4059
   162  000847  40C9               	dw	16585
   163  000849                     __end_of_c4pio2:
   164                           	opt callstack 0
   165  000849  CBE4               	dw	52196
   166  00084B  4096               	dw	16534
   167  00084D                     __end_of_c3pio2:
   168                           	opt callstack 0
   169  00084D  0FDB               	dw	4059
   170  00084F  4049               	dw	16457
   171  000851                     __end_of_c2pio2:
   172                           	opt callstack 0
   173  000851  0FDB               	dw	4059
   174  000853  3FC9               	dw	16329
   175  000855                     __end_of_c1pio2:
   176                           	opt callstack 0
   177  000855                     STR_2:
   178                           
   179                           ; BSR set to: 57
   180  000855  C4                 	db	-60
   181  000856  E3                 	db	-29
   182  000857  BA                 	db	-70
   183  000858  C3                 	db	-61
   184  000859  C4                 	db	-60
   185  00085A  FA                 	db	-6
   186  00085B  BA                 	db	-70
   187  00085C  C3                 	db	-61
   188  00085D  00                 	db	0
   189  00085E                     STR_1:
   190                           
   191                           ; BSR set to: 57
   192  00085E  64                 	db	100	;'d'
   193  00085F  64                 	db	100	;'d'
   194  000860  64                 	db	100	;'d'
   195  000861  64                 	db	100	;'d'
   196  000862  64                 	db	100	;'d'
   197  000863  64                 	db	100	;'d'
   198  000864  00                 	db	0
   199                           
   200                           ; #config settings
   201  000865  00                 	db	0	; dummy byte at the end
   202  0000                     
   203                           	psect	nvCOMRAM
   204  000037                     __pnvCOMRAM:
   205                           	opt callstack 0
   206  000037                     _INT2_InterruptHandler:
   207                           	opt callstack 0
   208  000037                     	ds	2
   209  000039                     _INT1_InterruptHandler:
   210                           	opt callstack 0
   211  000039                     	ds	2
   212  00003B                     _INT0_InterruptHandler:
   213                           	opt callstack 0
   214  00003B                     	ds	2
   215  0000                     _RXB1D7	set	14333
   216  0000                     _RXB1D6	set	14332
   217  0000                     _RXB1D5	set	14331
   218  0000                     _RXB1D4	set	14330
   219  0000                     _RXB1D3	set	14329
   220  0000                     _RXB1D2	set	14328
   221  0000                     _RXB1D1	set	14327
   222  0000                     _RXB1D0	set	14326
   223  0000                     _RXB1DLC	set	14325
   224  0000                     _RXB1SIDH	set	14321
   225  0000                     _RXB1EIDL	set	14324
   226  0000                     _RXB1EIDH	set	14323
   227  0000                     _RXB1SIDL	set	14322
   228  0000                     _RXB1CONbits	set	14320
   229  0000                     _TXB2D7	set	14285
   230  0000                     _TXB2D6	set	14284
   231  0000                     _TXB2D5	set	14283
   232  0000                     _TXB2D4	set	14282
   233  0000                     _TXB2D3	set	14281
   234  0000                     _TXB2D2	set	14280
   235  0000                     _TXB2D1	set	14279
   236  0000                     _TXB2D0	set	14278
   237  0000                     _TXB2DLC	set	14277
   238  0000                     _TXB2SIDL	set	14274
   239  0000                     _TXB2SIDH	set	14273
   240  0000                     _TXB2EIDL	set	14276
   241  0000                     _TXB2EIDH	set	14275
   242  0000                     _TXB2CONbits	set	14272
   243  0000                     _TXB1D7	set	14301
   244  0000                     _TXB1D6	set	14300
   245  0000                     _TXB1D5	set	14299
   246  0000                     _TXB1D4	set	14298
   247  0000                     _TXB1D3	set	14297
   248  0000                     _TXB1D2	set	14296
   249  0000                     _TXB1D1	set	14295
   250  0000                     _TXB1D0	set	14294
   251  0000                     _TXB1DLC	set	14293
   252  0000                     _TXB1SIDL	set	14290
   253  0000                     _TXB1SIDH	set	14289
   254  0000                     _TXB1EIDL	set	14292
   255  0000                     _TXB1EIDH	set	14291
   256  0000                     _TXB1CONbits	set	14288
   257  0000                     _TXB0D7	set	14317
   258  0000                     _TXB0D6	set	14316
   259  0000                     _TXB0D5	set	14315
   260  0000                     _TXB0D4	set	14314
   261  0000                     _TXB0D3	set	14313
   262  0000                     _TXB0D2	set	14312
   263  0000                     _TXB0D1	set	14311
   264  0000                     _TXB0D0	set	14310
   265  0000                     _TXB0DLC	set	14309
   266  0000                     _TXB0SIDL	set	14306
   267  0000                     _TXB0SIDH	set	14305
   268  0000                     _TXB0EIDL	set	14308
   269  0000                     _TXB0EIDH	set	14307
   270  0000                     _TXB0CONbits	set	14304
   271  0000                     _BRGCON3	set	14085
   272  0000                     _BRGCON2	set	14084
   273  0000                     _BRGCON1	set	14083
   274  0000                     _RXF5SIDL	set	14261
   275  0000                     _RXF5SIDH	set	14260
   276  0000                     _RXF5EIDL	set	14263
   277  0000                     _RXF5EIDH	set	14262
   278  0000                     _RXF4SIDL	set	14257
   279  0000                     _RXF4SIDH	set	14256
   280  0000                     _RXF4EIDL	set	14259
   281  0000                     _RXF4EIDH	set	14258
   282  0000                     _RXF3SIDL	set	14253
   283  0000                     _RXF3SIDH	set	14252
   284  0000                     _RXF3EIDL	set	14255
   285  0000                     _RXF3EIDH	set	14254
   286  0000                     _RXF2SIDL	set	14249
   287  0000                     _RXF2SIDH	set	14248
   288  0000                     _RXF2EIDL	set	14251
   289  0000                     _RXF2EIDH	set	14250
   290  0000                     _RXF1SIDL	set	14245
   291  0000                     _RXF1SIDH	set	14244
   292  0000                     _RXF1EIDL	set	14247
   293  0000                     _RXF1EIDH	set	14246
   294  0000                     _RXF0SIDL	set	14241
   295  0000                     _RXF0SIDH	set	14240
   296  0000                     _RXF0EIDL	set	14243
   297  0000                     _RXF0EIDH	set	14242
   298  0000                     _RXM1SIDL	set	14269
   299  0000                     _RXM1SIDH	set	14268
   300  0000                     _RXM1EIDL	set	14271
   301  0000                     _RXM1EIDH	set	14270
   302  0000                     _RXM0SIDL	set	14265
   303  0000                     _RXM0SIDH	set	14264
   304  0000                     _RXM0EIDL	set	14267
   305  0000                     _RXM0EIDH	set	14266
   306  0000                     _CIOCON	set	14080
   307  0000                     _PMD7	set	14791
   308  0000                     _PMD6	set	14790
   309  0000                     _PMD5	set	14789
   310  0000                     _PMD4	set	14788
   311  0000                     _PMD3	set	14787
   312  0000                     _PMD2	set	14786
   313  0000                     _PMD1	set	14785
   314  0000                     _PMD0	set	14784
   315  0000                     _OSCTUNE	set	14814
   316  0000                     _OSCFRQ	set	14815
   317  0000                     _OSCEN	set	14813
   318  0000                     _OSCCON3	set	14811
   319  0000                     _OSCCON1	set	14809
   320  0000                     _PIE8bits	set	14744
   321  0000                     _PIE4bits	set	14740
   322  0000                     _PIE1bits	set	14737
   323  0000                     _PIR8bits	set	14760
   324  0000                     _PIR4bits	set	14756
   325  0000                     _PIR1bits	set	14753
   326  0000                     _PIE5bits	set	14741
   327  0000                     _PIR5bits	set	14757
   328  0000                     _I2C1SCLPPS	set	15075
   329  0000                     _INT1PPS	set	15041
   330  0000                     _INT2PPS	set	15042
   331  0000                     _RB4PPS	set	14860
   332  0000                     _CANRXPPS	set	15085
   333  0000                     _RC1PPS	set	14865
   334  0000                     _INT0PPS	set	15040
   335  0000                     _I2C1SDAPPS	set	15076
   336  0000                     _RC0PPS	set	14864
   337  0000                     _INLVLE	set	14980
   338  0000                     _INLVLC	set	14948
   339  0000                     _INLVLB	set	14932
   340  0000                     _INLVLA	set	14916
   341  0000                     _SLRCONC	set	14947
   342  0000                     _SLRCONB	set	14931
   343  0000                     _SLRCONA	set	14915
   344  0000                     _ODCONC	set	14946
   345  0000                     _ODCONB	set	14930
   346  0000                     _ODCONA	set	14914
   347  0000                     _WPUC	set	14945
   348  0000                     _WPUA	set	14913
   349  0000                     _WPUB	set	14929
   350  0000                     _WPUE	set	14977
   351  0000                     _ANSELA	set	14912
   352  0000                     _ANSELB	set	14928
   353  0000                     _ANSELC	set	14944
   354  0000                     _I2C1ADB1	set	15726
   355  0000                     _I2C1CNT	set	15724
   356  0000                     _I2C1PIRbits	set	15737
   357  0000                     _I2C1RXB	set	15722
   358  0000                     _I2C1TXB	set	15723
   359  0000                     _I2C1STAT1bits	set	15736
   360  0000                     _I2C1STAT0bits	set	15735
   361  0000                     _I2C1ERR	set	15734
   362  0000                     _I2C1PIR	set	15737
   363  0000                     _I2C1CON0	set	15731
   364  0000                     _I2C1CLK	set	15739
   365  0000                     _I2C1CON2	set	15733
   366  0000                     _I2C1CON1	set	15732
   367  0000                     _I2C1CON0bits	set	15731
   368  0000                     _PORTCbits	set	16332
   369  0000                     _TRISCbits	set	16324
   370  0000                     _LATCbits	set	16316
   371  0000                     _LATAbits	set	16314
   372  0000                     _LATBbits	set	16315
   373  0000                     _TRISC	set	16324
   374  0000                     _TRISB	set	16323
   375  0000                     _TRISA	set	16322
   376  0000                     _LATC	set	16316
   377  0000                     _LATB	set	16315
   378  0000                     _LATA	set	16314
   379  0000                     _INTCON0bits	set	16338
   380  0000                     _COMSTATbits	set	16272
   381  0000                     _RXB0D7	set	16269
   382  0000                     _RXB0D6	set	16268
   383  0000                     _RXB0D5	set	16267
   384  0000                     _RXB0D4	set	16266
   385  0000                     _RXB0D3	set	16265
   386  0000                     _RXB0D2	set	16264
   387  0000                     _RXB0D1	set	16263
   388  0000                     _RXB0D0	set	16262
   389  0000                     _RXB0DLC	set	16261
   390  0000                     _RXB0SIDH	set	16257
   391  0000                     _RXB0EIDL	set	16260
   392  0000                     _RXB0EIDH	set	16259
   393  0000                     _RXB0SIDL	set	16258
   394  0000                     _RXB0CONbits	set	16256
   395  0000                     _ECANCON	set	16273
   396  0000                     _CANSTAT	set	16270
   397  0000                     _CANCON	set	16271
   398                           
   399                           	psect	cinit
   400  001182                     __pcinit:
   401                           	opt callstack 0
   402  001182                     start_initialization:
   403                           	opt callstack 0
   404  001182                     __initialization:
   405                           	opt callstack 0
   406                           
   407                           ; Clear objects allocated to COMRAM (9 bytes)
   408  001182  EE00  F02E         	lfsr	0,__pbssCOMRAM
   409  001186  0E09               	movlw	9
   410  001188                     clear_0:
   411  001188  6AEE               	clrf	postinc0,c
   412  00118A  06E8               	decf	wreg,f,c
   413  00118C  E1FD               	bnz	clear_0
   414                           
   415                           ;
   416                           ; Setup IVTBASE
   417                           ;
   418  00118E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   419  001190  6ED5               	movwf	213,c
   420  001192  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   421  001194  6ED6               	movwf	214,c
   422  001196  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   423  001198  6ED7               	movwf	215,c
   424  00119A                     end_of_initialization:
   425                           	opt callstack 0
   426  00119A                     __end_of__initialization:
   427                           	opt callstack 0
   428  00119A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   429  00119C  6EF8               	movwf	tblptru,c
   430  00119E  0100               	movlb	0
   431  0011A0  EF1F  F006         	goto	_main	;jump to C main() function
   432                           
   433                           	psect	bssCOMRAM
   434  00002E                     __pbssCOMRAM:
   435                           	opt callstack 0
   436  00002E                     	ds	4
   437  000032                     	ds	4
   438  000036                     _lastError:
   439                           	opt callstack 0
   440  000036                     	ds	1
   441                           
   442                           	psect	cstackCOMRAM
   443  000001                     __pcstackCOMRAM:
   444                           	opt callstack 0
   445  000001                     ??_ECAN_Initialize:
   446  000001                     ?_abs:
   447                           	opt callstack 0
   448  000001                     Spi8b@dat:
   449                           	opt callstack 0
   450  000001                     Readspi@i:
   451                           	opt callstack 0
   452  000001                     INT0_SetInterruptHandler@InterruptHandler:
   453                           	opt callstack 0
   454  000001                     INT1_SetInterruptHandler@InterruptHandler:
   455                           	opt callstack 0
   456  000001                     INT2_SetInterruptHandler@InterruptHandler:
   457                           	opt callstack 0
   458  000001                     abs@a:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x0
   462  000001                     	ds	1
   463  000002                     Spi8b@i:
   464                           	opt callstack 0
   465  000002                     Readspi@dat:
   466                           	opt callstack 0
   467                           
   468                           ; 1 bytes @ 0x1
   469  000002                     	ds	1
   470  000003                     ??_sendCom:
   471  000003                     ??_sendDat:
   472  000003                     ??_abs:
   473  000003                     ??_LCD_read_arm:
   474                           
   475                           ; 1 bytes @ 0x2
   476  000003                     	ds	1
   477  000004                     sendCom@comh:
   478                           	opt callstack 0
   479  000004                     sendDat@dath:
   480                           	opt callstack 0
   481  000004                     LCD_read_arm@a1:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0x3
   485  000004                     	ds	1
   486  000005                     sendCom@coml:
   487                           	opt callstack 0
   488  000005                     sendDat@datl:
   489                           	opt callstack 0
   490  000005                     LCD_read_arm@a2:
   491                           	opt callstack 0
   492                           
   493                           ; 1 bytes @ 0x4
   494  000005                     	ds	1
   495  000006                     sendCom@com:
   496                           	opt callstack 0
   497  000006                     sendDat@dat:
   498                           	opt callstack 0
   499  000006                     LCD_read_arm@a3:
   500                           	opt callstack 0
   501                           
   502                           ; 1 bytes @ 0x5
   503  000006                     	ds	1
   504  000007                     ??_LCDInit:
   505  000007                     GRam_Clear@b:
   506                           	opt callstack 0
   507  000007                     position@y:
   508                           	opt callstack 0
   509  000007                     Draw_point@Y:
   510                           	opt callstack 0
   511  000007                     display_char@y:
   512                           	opt callstack 0
   513  000007                     LcdString@p:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x6
   517  000007                     	ds	1
   518  000008                     GRam_Clear@a:
   519                           	opt callstack 0
   520  000008                     position@pos:
   521                           	opt callstack 0
   522  000008                     Draw_point@Color:
   523                           	opt callstack 0
   524                           
   525                           ; 1 bytes @ 0x7
   526  000008                     	ds	1
   527  000009                     ??_Draw_point:
   528  000009                     position@x:
   529                           	opt callstack 0
   530  000009                     display_char@x:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x8
   534  000009                     	ds	2
   535  00000B                     Draw_point@X:
   536                           	opt callstack 0
   537  00000B                     display_char@char_length:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0xA
   541  00000B                     	ds	1
   542  00000C                     Draw_point@Row:
   543                           	opt callstack 0
   544                           
   545                           ; 1 bytes @ 0xB
   546  00000C                     	ds	1
   547  00000D                     Draw_point@Tier:
   548                           	opt callstack 0
   549  00000D                     display_char@p:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0xC
   553  00000D                     	ds	1
   554  00000E                     Draw_point@ReadOldH:
   555                           	opt callstack 0
   556                           
   557                           ; 1 bytes @ 0xD
   558  00000E                     	ds	1
   559  00000F                     ??_display_char:
   560  00000F                     Draw_point@ReadOldL:
   561                           	opt callstack 0
   562                           
   563                           ; 1 bytes @ 0xE
   564  00000F                     	ds	1
   565  000010                     Draw_point@Tier_bit:
   566                           	opt callstack 0
   567                           
   568                           ; 1 bytes @ 0xF
   569  000010                     	ds	1
   570  000011                     v_Lcd12864DrawLineX_f@X1:
   571                           	opt callstack 0
   572  000011                     v_Lcd12864DrawLineY_f@Y0:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x10
   576  000011                     	ds	1
   577  000012                     display_char@i:
   578                           	opt callstack 0
   579  000012                     v_Lcd12864DrawLineX_f@Y:
   580                           	opt callstack 0
   581  000012                     v_Lcd12864DrawLineY_f@Y1:
   582                           	opt callstack 0
   583                           
   584                           ; 1 bytes @ 0x11
   585  000012                     	ds	1
   586  000013                     v_Lcd12864DrawLineX_f@Color:
   587                           	opt callstack 0
   588  000013                     v_Lcd12864DrawLineY_f@Color:
   589                           	opt callstack 0
   590                           
   591                           ; 1 bytes @ 0x12
   592  000013                     	ds	1
   593  000014                     v_Lcd12864DrawLineX_f@Temp:
   594                           	opt callstack 0
   595  000014                     v_Lcd12864DrawLineY_f@X:
   596                           	opt callstack 0
   597                           
   598                           ; 1 bytes @ 0x13
   599  000014                     	ds	1
   600  000015                     v_Lcd12864DrawLineX_f@X0:
   601                           	opt callstack 0
   602  000015                     v_Lcd12864DrawLineY_f@Temp:
   603                           	opt callstack 0
   604                           
   605                           ; 1 bytes @ 0x14
   606  000015                     	ds	1
   607  000016                     LCD_Draw_Two_Dot@StartY:
   608                           	opt callstack 0
   609                           
   610                           ; 1 bytes @ 0x15
   611  000016                     	ds	1
   612  000017                     LCD_Draw_Two_Dot@EndX:
   613                           	opt callstack 0
   614                           
   615                           ; 1 bytes @ 0x16
   616  000017                     	ds	1
   617  000018                     LCD_Draw_Two_Dot@EndY:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0x17
   621  000018                     	ds	1
   622  000019                     LCD_Draw_Two_Dot@Color:
   623                           	opt callstack 0
   624                           
   625                           ; 1 bytes @ 0x18
   626  000019                     	ds	1
   627  00001A                     ??_LCD_Draw_Two_Dot:
   628                           
   629                           ; 1 bytes @ 0x19
   630  00001A                     	ds	3
   631  00001D                     LCD_Draw_Two_Dot@t:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0x1C
   635  00001D                     	ds	2
   636  00001F                     LCD_Draw_Two_Dot@x:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0x1E
   640  00001F                     	ds	2
   641  000021                     LCD_Draw_Two_Dot@y:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0x20
   645  000021                     	ds	2
   646  000023                     LCD_Draw_Two_Dot@incx:
   647                           	opt callstack 0
   648                           
   649                           ; 1 bytes @ 0x22
   650  000023                     	ds	1
   651  000024                     LCD_Draw_Two_Dot@incy:
   652                           	opt callstack 0
   653                           
   654                           ; 1 bytes @ 0x23
   655  000024                     	ds	1
   656  000025                     LCD_Draw_Two_Dot@distance:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x24
   660  000025                     	ds	2
   661  000027                     LCD_Draw_Two_Dot@StartX:
   662                           	opt callstack 0
   663                           
   664                           ; 1 bytes @ 0x26
   665  000027                     	ds	1
   666  000028                     LCD_Draw_Two_Dot@delta_x:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x27
   670  000028                     	ds	2
   671  00002A                     LCD_Draw_Two_Dot@delta_y:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x29
   675  00002A                     	ds	2
   676  00002C                     ??_main:
   677                           
   678                           ; 1 bytes @ 0x2B
   679  00002C                     	ds	2
   680                           
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 57 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   700 ;;      Params:         0       0       0       0       0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0       0       0       0       0
   703 ;;      Totals:         2       0       0       0       0       0       0       0       0
   704 ;;Total ram usage:        2 bytes
   705 ;; Hardware stack levels required when called:    9
   706 ;; This function calls:
   707 ;;		_GRam_Clear
   708 ;;		_LCDInit
   709 ;;		_LCD_Draw_Two_Dot
   710 ;;		_LcdString
   711 ;;		_SYSTEM_Initialize
   712 ;;		_display_char
   713 ;;		_ledtest
   714 ;;		_position
   715 ;;		_sendDat
   716 ;; This function is called by:
   717 ;;		Startup code after reset
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text0
   722  000C3E                     __ptext0:
   723                           	opt callstack 0
   724  000C3E                     _main:
   725                           	opt callstack 22
   726                           
   727                           ;main.c: 59:     SYSTEM_Initialize();
   728                           
   729                           ;incstack = 0
   730  000C3E  EC02  F009         	call	_SYSTEM_Initialize	;wreg free
   731                           
   732                           ;main.c: 70:     LCDInit();
   733  000C42  ECE7  F006         	call	_LCDInit	;wreg free
   734  000C46  8ABB               	bsf	16315,5,c	;volatile
   735  000C48  8ABA               	bsf	16314,5,c	;volatile
   736  000C4A  88BC               	bsf	16316,4,c	;volatile
   737  000C4C  86BC               	bsf	16316,3,c	;volatile
   738  000C4E                     l3217:
   739                           
   740                           ;main.c: 82:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   741  000C4E  0E02               	movlw	2
   742  000C50  6E2D               	movwf	(??_main+1)& (0+255),c
   743  000C52  0E45               	movlw	69
   744  000C54  6E2C               	movwf	??_main& (0+255),c
   745  000C56  0EAA               	movlw	170
   746  000C58                     u1297:
   747  000C58  2EE8               	decfsz	wreg,f,c
   748  000C5A  D7FE               	bra	u1297
   749  000C5C  2E2C               	decfsz	??_main& (0+255),f,c
   750  000C5E  D7FC               	bra	u1297
   751  000C60  2E2D               	decfsz	(??_main+1)& (0+255),f,c
   752  000C62  D7FA               	bra	u1297
   753                           
   754                           ;main.c: 84:         position(1, 1);
   755  000C64  0E01               	movlw	1
   756  000C66  6E07               	movwf	position@y,c
   757  000C68  0E01               	movlw	1
   758  000C6A  EC80  F007         	call	_position
   759                           
   760                           ;main.c: 85:         LcdString("dddddd");
   761  000C6E  0E5E               	movlw	low STR_1
   762  000C70  6E07               	movwf	LcdString@p,c
   763  000C72  0E08               	movlw	high STR_1
   764  000C74  6E08               	movwf	LcdString@p+1,c
   765  000C76  EC6B  F008         	call	_LcdString	;wreg free
   766                           
   767                           ;main.c: 86:         position(2,0);
   768  000C7A  0E00               	movlw	0
   769  000C7C  6E07               	movwf	position@y,c
   770  000C7E  0E02               	movlw	2
   771  000C80  EC80  F007         	call	_position
   772                           
   773                           ;main.c: 87:         sendDat(0xa1);
   774  000C84  0EA1               	movlw	161
   775  000C86  EC11  F007         	call	_sendDat
   776                           
   777                           ;main.c: 88:         sendDat(0xF0);
   778  000C8A  0EF0               	movlw	240
   779  000C8C  EC11  F007         	call	_sendDat
   780                           
   781                           ;main.c: 89:         display_char(2,9,4,"ÄãºÃÄúºÃ");
   782  000C90  0E00               	movlw	0
   783  000C92  6E08               	movwf	display_char@y+1,c
   784  000C94  0E02               	movlw	2
   785  000C96  6E07               	movwf	display_char@y,c
   786  000C98  0E00               	movlw	0
   787  000C9A  6E0A               	movwf	display_char@x+1,c
   788  000C9C  0E09               	movlw	9
   789  000C9E  6E09               	movwf	display_char@x,c
   790  000CA0  0E00               	movlw	0
   791  000CA2  6E0C               	movwf	display_char@char_length+1,c
   792  000CA4  0E04               	movlw	4
   793  000CA6  6E0B               	movwf	display_char@char_length,c
   794  000CA8  0E55               	movlw	low STR_2
   795  000CAA  6E0D               	movwf	display_char@p,c
   796  000CAC  0E08               	movlw	high STR_2
   797  000CAE  6E0E               	movwf	display_char@p+1,c
   798  000CB0  ECB1  F006         	call	_display_char	;wreg free
   799                           
   800                           ;main.c: 90:         GRam_Clear();
   801  000CB4  EC37  F007         	call	_GRam_Clear	;wreg free
   802                           
   803                           ;main.c: 91:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   804  000CB8  0E02               	movlw	2
   805  000CBA  6E2D               	movwf	(??_main+1)& (0+255),c
   806  000CBC  0E45               	movlw	69
   807  000CBE  6E2C               	movwf	??_main& (0+255),c
   808  000CC0  0EAA               	movlw	170
   809  000CC2                     u1307:
   810  000CC2  2EE8               	decfsz	wreg,f,c
   811  000CC4  D7FE               	bra	u1307
   812  000CC6  2E2C               	decfsz	??_main& (0+255),f,c
   813  000CC8  D7FC               	bra	u1307
   814  000CCA  2E2D               	decfsz	(??_main+1)& (0+255),f,c
   815  000CCC  D7FA               	bra	u1307
   816                           
   817                           ;main.c: 92:         LCD_Draw_Two_Dot( 12, 0, 127, 63, 1 );
   818  000CCE  0E00               	movlw	0
   819  000CD0  6E16               	movwf	LCD_Draw_Two_Dot@StartY,c
   820  000CD2  0E7F               	movlw	127
   821  000CD4  6E17               	movwf	LCD_Draw_Two_Dot@EndX,c
   822  000CD6  0E3F               	movlw	63
   823  000CD8  6E18               	movwf	LCD_Draw_Two_Dot@EndY,c
   824  000CDA  0E01               	movlw	1
   825  000CDC  6E19               	movwf	LCD_Draw_Two_Dot@Color,c
   826  000CDE  0E0C               	movlw	12
   827  000CE0  EC33  F004         	call	_LCD_Draw_Two_Dot
   828                           
   829                           ;main.c: 97:         ledtest();
   830  000CE4  EC32  F009         	call	_ledtest	;wreg free
   831  000CE8  D7B2               	goto	l3217
   832  000CEA                     __end_of_main:
   833                           	opt callstack 0
   834                           
   835 ;; *************** function _position *****************
   836 ;; Defined at:
   837 ;;		line 87 in file "USER_C/lcd.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  x               1    wreg     unsigned char 
   840 ;;  y               1    6[COMRAM] unsigned char 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  x               1    8[COMRAM] unsigned char 
   843 ;;  pos             1    7[COMRAM] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   853 ;;      Params:         1       0       0       0       0       0       0       0       0
   854 ;;      Locals:         2       0       0       0       0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0
   856 ;;      Totals:         3       0       0       0       0       0       0       0       0
   857 ;;Total ram usage:        3 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    6
   860 ;; This function calls:
   861 ;;		_sendCom
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text1
   868  000F00                     __ptext1:
   869                           	opt callstack 0
   870  000F00                     _position:
   871                           	opt callstack 24
   872                           
   873                           ;incstack = 0
   874                           ;position@x stored from wreg
   875  000F00  6E09               	movwf	position@x,c
   876                           
   877                           ;USER_C/lcd.c: 88:     char pos;;USER_C/lcd.c: 89:     if (x == 1)
   878  000F02  0409               	decf	position@x,w,c
   879  000F04  A4D8               	btfss	status,2,c
   880  000F06  D003               	goto	l816
   881                           
   882                           ;USER_C/lcd.c: 90:         pos = 0x80 + y;
   883  000F08  5007               	movf	position@y,w,c
   884  000F0A  0F80               	addlw	128
   885  000F0C  6E08               	movwf	position@pos,c
   886  000F0E                     l816:
   887                           
   888                           ;USER_C/lcd.c: 91:     if (x == 2)
   889  000F0E  0E02               	movlw	2
   890  000F10  1809               	xorwf	position@x,w,c
   891  000F12  A4D8               	btfss	status,2,c
   892  000F14  D003               	goto	l817
   893                           
   894                           ;USER_C/lcd.c: 92:         pos = 0x90 + y;
   895  000F16  5007               	movf	position@y,w,c
   896  000F18  0F90               	addlw	144
   897  000F1A  6E08               	movwf	position@pos,c
   898  000F1C                     l817:
   899                           
   900                           ;USER_C/lcd.c: 93:     if (x == 3)
   901  000F1C  0E03               	movlw	3
   902  000F1E  1809               	xorwf	position@x,w,c
   903  000F20  A4D8               	btfss	status,2,c
   904  000F22  D003               	goto	l818
   905                           
   906                           ;USER_C/lcd.c: 94:         pos = 0x88 + y;
   907  000F24  5007               	movf	position@y,w,c
   908  000F26  0F88               	addlw	136
   909  000F28  6E08               	movwf	position@pos,c
   910  000F2A                     l818:
   911                           
   912                           ;USER_C/lcd.c: 95:     if (x == 4)
   913  000F2A  0E04               	movlw	4
   914  000F2C  1809               	xorwf	position@x,w,c
   915  000F2E  A4D8               	btfss	status,2,c
   916  000F30  D003               	goto	l3161
   917                           
   918                           ;USER_C/lcd.c: 96:         pos = 0x98 + y;
   919  000F32  5007               	movf	position@y,w,c
   920  000F34  0F98               	addlw	152
   921  000F36  6E08               	movwf	position@pos,c
   922  000F38                     l3161:
   923                           
   924                           ;USER_C/lcd.c: 97:     sendCom(pos);
   925  000F38  5008               	movf	position@pos,w,c
   926  000F3A  EC84  F008         	call	_sendCom
   927  000F3E  0012               	return		;funcret
   928  000F40                     __end_of_position:
   929                           	opt callstack 0
   930                           
   931 ;; *************** function _ledtest *****************
   932 ;; Defined at:
   933 ;;		line 3 in file "USER_C/led.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		None
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         0       0       0       0       0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0
   950 ;;      Totals:         0       0       0       0       0       0       0       0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    4
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text2
   962  001264                     __ptext2:
   963                           	opt callstack 0
   964  001264                     _ledtest:
   965                           	opt callstack 26
   966                           
   967                           ;incstack = 0
   968                           ;USER_C/led.c: 5:     do { LATBbits.LATB7 = 1; } while(0);
   969  001264  8EBB               	bsf	16315,7,c	;volatile
   970                           
   971                           ;USER_C/led.c: 6:     do { LATAbits.LATA1 = 1; } while(0);
   972  001266  82BA               	bsf	16314,1,c	;volatile
   973                           
   974                           ;USER_C/led.c: 7:     do { LATAbits.LATA2 = 0; } while(0);
   975  001268  94BA               	bcf	16314,2,c	;volatile
   976                           
   977                           ;USER_C/led.c: 8:     do { LATAbits.LATA0 = 1; } while(0);
   978  00126A  80BA               	bsf	16314,0,c	;volatile
   979  00126C  0012               	return		;funcret
   980  00126E                     __end_of_ledtest:
   981                           	opt callstack 0
   982                           
   983 ;; *************** function _display_char *****************
   984 ;; Defined at:
   985 ;;		line 4 in file "AP_C/AP_LCD.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  y               2    6[COMRAM] int 
   988 ;;  x               2    8[COMRAM] int 
   989 ;;  char_length     2   10[COMRAM] int 
   990 ;;  p               2   12[COMRAM] PTR unsigned char 
   991 ;;		 -> STR_2(9), 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  i               1   17[COMRAM] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1003 ;;      Params:         8       0       0       0       0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1005 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1006 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1007 ;;Total ram usage:       12 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    6
  1010 ;; This function calls:
  1011 ;;		_sendCom
  1012 ;;		_sendDat
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text3
  1019  000D62                     __ptext3:
  1020                           	opt callstack 0
  1021  000D62                     _display_char:
  1022                           	opt callstack 24
  1023                           
  1024                           ;AP_C/AP_LCD.c: 6:     sendCom(0x30);
  1025                           
  1026                           ;incstack = 0
  1027  000D62  0E30               	movlw	48
  1028  000D64  EC84  F008         	call	_sendCom
  1029                           
  1030                           ;AP_C/AP_LCD.c: 7:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1031  000D68  D000               	nop2		;2 cycle nop
  1032                           
  1033                           ;AP_C/AP_LCD.c: 9:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1034  000D6A  D000               	nop2		;2 cycle nop
  1035                           
  1036                           ;AP_C/AP_LCD.c: 10:     sendCom(0x80 + (y - 1)*(0x10)+(x - 1));
  1037  000D6C  5007               	movf	display_char@y,w,c
  1038  000D6E  0D10               	mullw	16
  1039  000D70  50F3               	movf	prodl,w,c
  1040  000D72  2409               	addwf	display_char@x,w,c
  1041  000D74  0F6F               	addlw	111
  1042  000D76  EC84  F008         	call	_sendCom
  1043                           
  1044                           ;AP_C/AP_LCD.c: 11:     for (i = 0; i < char_length; i++) {
  1045  000D7A  0E00               	movlw	0
  1046  000D7C  6E12               	movwf	display_char@i,c
  1047  000D7E  D019               	goto	l3079
  1048  000D80                     l3073:
  1049                           
  1050                           ;AP_C/AP_LCD.c: 12:         sendDat(*p);
  1051  000D80  0060  F037  FFF6   	movff	display_char@p,tblptrl
  1052  000D86  0060  F03B  FFF7   	movff	display_char@p+1,tblptrh
  1053  000D8C                     	if	0	;tblptru may be non-zero
  1054  000D8C                     	endif
  1055  000D8C                     	if	0	;tblptru may be non-zero
  1056  000D8C                     	endif
  1057  000D8C  0008               	tblrd		*
  1058  000D8E  50F5               	movf	tablat,w,c
  1059  000D90  EC11  F007         	call	_sendDat
  1060                           
  1061                           ;AP_C/AP_LCD.c: 13:         p++;
  1062  000D94  4A0D               	infsnz	display_char@p,f,c
  1063  000D96  2A0E               	incf	display_char@p+1,f,c
  1064                           
  1065                           ;AP_C/AP_LCD.c: 14:         sendDat(*p);
  1066  000D98  0060  F037  FFF6   	movff	display_char@p,tblptrl
  1067  000D9E  0060  F03B  FFF7   	movff	display_char@p+1,tblptrh
  1068  000DA4                     	if	0	;tblptru may be non-zero
  1069  000DA4                     	endif
  1070  000DA4                     	if	0	;tblptru may be non-zero
  1071  000DA4                     	endif
  1072  000DA4  0008               	tblrd		*
  1073  000DA6  50F5               	movf	tablat,w,c
  1074  000DA8  EC11  F007         	call	_sendDat
  1075                           
  1076                           ;AP_C/AP_LCD.c: 15:         p++;
  1077  000DAC  4A0D               	infsnz	display_char@p,f,c
  1078  000DAE  2A0E               	incf	display_char@p+1,f,c
  1079                           
  1080                           ;AP_C/AP_LCD.c: 16:     }
  1081  000DB0  2A12               	incf	display_char@i,f,c
  1082  000DB2                     l3079:
  1083  000DB2  5012               	movf	display_char@i,w,c
  1084  000DB4  6E0F               	movwf	??_display_char& (0+255),c
  1085  000DB6  6A10               	clrf	(??_display_char+1)& (0+255),c
  1086  000DB8  500B               	movf	display_char@char_length,w,c
  1087  000DBA  5C0F               	subwf	??_display_char,w,c
  1088  000DBC  5010               	movf	??_display_char+1,w,c
  1089  000DBE  0A80               	xorlw	128
  1090  000DC0  6E11               	movwf	(??_display_char+2)& (0+255),c
  1091  000DC2  500C               	movf	display_char@char_length+1,w,c
  1092  000DC4  0A80               	xorlw	128
  1093  000DC6  5811               	subwfb	(??_display_char+2)& (0+255),w,c
  1094  000DC8  B0D8               	btfsc	status,0,c
  1095  000DCA  0012               	return	
  1096  000DCC  D7D9               	goto	l3073
  1097  000DCE                     __end_of_display_char:
  1098                           	opt callstack 0
  1099                           
  1100 ;; *************** function _SYSTEM_Initialize *****************
  1101 ;; Defined at:
  1102 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1116 ;;      Params:         0       0       0       0       0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    6
  1123 ;; This function calls:
  1124 ;;		_ECAN_Initialize
  1125 ;;		_EXT_INT_Initialize
  1126 ;;		_I2C1_Initialize
  1127 ;;		_INTERRUPT_Initialize
  1128 ;;		_OSCILLATOR_Initialize
  1129 ;;		_PIN_MANAGER_Initialize
  1130 ;;		_PMD_Initialize
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text4
  1137  001204                     __ptext4:
  1138                           	opt callstack 0
  1139  001204                     _SYSTEM_Initialize:
  1140                           	opt callstack 24
  1141                           
  1142                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1143                           
  1144                           ;incstack = 0
  1145  001204  EC49  F009         	call	_INTERRUPT_Initialize	;wreg free
  1146                           
  1147                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1148  001208  ECAF  F008         	call	_PMD_Initialize	;wreg free
  1149                           
  1150                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1151  00120C  EC75  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  1152                           
  1153                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1154  001210  EC11  F009         	call	_OSCILLATOR_Initialize	;wreg free
  1155                           
  1156                           ;mcc_generated_files/mcc.c: 56:     EXT_INT_Initialize();
  1157  001214  ECA0  F007         	call	_EXT_INT_Initialize	;wreg free
  1158                           
  1159                           ;mcc_generated_files/mcc.c: 57:     I2C1_Initialize();
  1160  001218  EC9A  F008         	call	_I2C1_Initialize	;wreg free
  1161                           
  1162                           ;mcc_generated_files/mcc.c: 58:     ECAN_Initialize();
  1163  00121C  ECC3  F005         	call	_ECAN_Initialize	;wreg free
  1164  001220  0012               	return		;funcret
  1165  001222                     __end_of_SYSTEM_Initialize:
  1166                           	opt callstack 0
  1167                           
  1168 ;; *************** function _PMD_Initialize *****************
  1169 ;; Defined at:
  1170 ;;		line 75 in file "mcc_generated_files/mcc.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    4
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_SYSTEM_Initialize
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text5
  1199  00115E                     __ptext5:
  1200                           	opt callstack 0
  1201  00115E                     _PMD_Initialize:
  1202                           	opt callstack 25
  1203                           
  1204                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  1205                           
  1206                           ;incstack = 0
  1207  00115E  0E00               	movlw	0
  1208  001160  0139               	movlb	57	; () banked
  1209  001162  6FC0               	movwf	192,b	;volatile
  1210                           
  1211                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  1212  001164  0E00               	movlw	0
  1213  001166  6FC1               	movwf	193,b	;volatile
  1214                           
  1215                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  1216  001168  0E00               	movlw	0
  1217  00116A  6FC2               	movwf	194,b	;volatile
  1218                           
  1219                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  1220  00116C  0E00               	movlw	0
  1221  00116E  6FC3               	movwf	195,b	;volatile
  1222                           
  1223                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  1224  001170  0E00               	movlw	0
  1225  001172  6FC4               	movwf	196,b	;volatile
  1226                           
  1227                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  1228  001174  0E00               	movlw	0
  1229  001176  6FC5               	movwf	197,b	;volatile
  1230                           
  1231                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  1232  001178  0E00               	movlw	0
  1233  00117A  6FC6               	movwf	198,b	;volatile
  1234                           
  1235                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  1236  00117C  0E00               	movlw	0
  1237  00117E  6FC7               	movwf	199,b	;volatile
  1238                           
  1239                           ; BSR set to: 57
  1240  001180  0012               	return		;funcret
  1241  001182                     __end_of_PMD_Initialize:
  1242                           	opt callstack 0
  1243                           
  1244 ;; *************** function _PIN_MANAGER_Initialize *****************
  1245 ;; Defined at:
  1246 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:         0       0       0       0       0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1263 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1264 ;;Total ram usage:        0 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    4
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_SYSTEM_Initialize
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text6
  1275  000CEA                     __ptext6:
  1276                           	opt callstack 0
  1277  000CEA                     _PIN_MANAGER_Initialize:
  1278                           	opt callstack 25
  1279                           
  1280                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1281                           
  1282                           ; BSR set to: 57
  1283                           ;incstack = 0
  1284  000CEA  0E00               	movlw	0
  1285  000CEC  6EBA               	movwf	16314,c	;volatile
  1286                           
  1287                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1288  000CEE  0E00               	movlw	0
  1289  000CF0  6EBB               	movwf	16315,c	;volatile
  1290                           
  1291                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1292  000CF2  0E00               	movlw	0
  1293  000CF4  6EBC               	movwf	16316,c	;volatile
  1294                           
  1295                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xD8;
  1296  000CF6  0ED8               	movlw	216
  1297  000CF8  6EC2               	movwf	16322,c	;volatile
  1298                           
  1299                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x0F;
  1300  000CFA  0E0F               	movlw	15
  1301  000CFC  6EC3               	movwf	16323,c	;volatile
  1302                           
  1303                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x24;
  1304  000CFE  0E24               	movlw	36
  1305  000D00  6EC4               	movwf	16324,c	;volatile
  1306                           
  1307                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  1308  000D02  0E04               	movlw	4
  1309  000D04  013A               	movlb	58	; () banked
  1310  000D06  6F60               	movwf	96,b	;volatile
  1311                           
  1312                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1313  000D08  0E00               	movlw	0
  1314  000D0A  6F50               	movwf	80,b	;volatile
  1315                           
  1316                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  1317  000D0C  0E00               	movlw	0
  1318  000D0E  6F40               	movwf	64,b	;volatile
  1319                           
  1320                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1321  000D10  0E00               	movlw	0
  1322  000D12  6F81               	movwf	129,b	;volatile
  1323                           
  1324                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  1325  000D14  0E00               	movlw	0
  1326  000D16  6F51               	movwf	81,b	;volatile
  1327                           
  1328                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1329  000D18  0E00               	movlw	0
  1330  000D1A  6F41               	movwf	65,b	;volatile
  1331                           
  1332                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1333  000D1C  0E00               	movlw	0
  1334  000D1E  6F61               	movwf	97,b	;volatile
  1335                           
  1336                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  1337  000D20  0E00               	movlw	0
  1338  000D22  6F42               	movwf	66,b	;volatile
  1339                           
  1340                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  1341  000D24  0E00               	movlw	0
  1342  000D26  6F52               	movwf	82,b	;volatile
  1343                           
  1344                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x03;
  1345  000D28  0E03               	movlw	3
  1346  000D2A  6F62               	movwf	98,b	;volatile
  1347                           
  1348                           ; BSR set to: 58
  1349                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  1350  000D2C  6943               	setf	67,b	;volatile
  1351                           
  1352                           ; BSR set to: 58
  1353                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  1354  000D2E  6953               	setf	83,b	;volatile
  1355                           
  1356                           ; BSR set to: 58
  1357                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  1358  000D30  6963               	setf	99,b	;volatile
  1359                           
  1360                           ; BSR set to: 58
  1361                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  1362  000D32  6944               	setf	68,b	;volatile
  1363                           
  1364                           ; BSR set to: 58
  1365                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  1366  000D34  6954               	setf	84,b	;volatile
  1367                           
  1368                           ; BSR set to: 58
  1369                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  1370  000D36  6964               	setf	100,b	;volatile
  1371                           
  1372                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  1373  000D38  0E08               	movlw	8
  1374  000D3A  6F84               	movwf	132,b	;volatile
  1375                           
  1376                           ;mcc_generated_files/pin_manager.c: 115:     RC0PPS = 0x21;
  1377  000D3C  0E21               	movlw	33
  1378  000D3E  6F10               	movwf	16,b	;volatile
  1379                           
  1380                           ;mcc_generated_files/pin_manager.c: 116:     I2C1SDAPPS = 0x11;
  1381  000D40  0E11               	movlw	17
  1382  000D42  6FE4               	movwf	228,b	;volatile
  1383                           
  1384                           ;mcc_generated_files/pin_manager.c: 117:     INT0PPS = 0x08;
  1385  000D44  0E08               	movlw	8
  1386  000D46  6FC0               	movwf	192,b	;volatile
  1387                           
  1388                           ;mcc_generated_files/pin_manager.c: 118:     RC1PPS = 0x22;
  1389  000D48  0E22               	movlw	34
  1390  000D4A  6F11               	movwf	17,b	;volatile
  1391                           
  1392                           ;mcc_generated_files/pin_manager.c: 119:     CANRXPPS = 0x0B;
  1393  000D4C  0E0B               	movlw	11
  1394  000D4E  6FED               	movwf	237,b	;volatile
  1395                           
  1396                           ;mcc_generated_files/pin_manager.c: 120:     RB4PPS = 0x33;
  1397  000D50  0E33               	movlw	51
  1398  000D52  6F0C               	movwf	12,b	;volatile
  1399                           
  1400                           ;mcc_generated_files/pin_manager.c: 121:     INT2PPS = 0x0A;
  1401  000D54  0E0A               	movlw	10
  1402  000D56  6FC2               	movwf	194,b	;volatile
  1403                           
  1404                           ;mcc_generated_files/pin_manager.c: 122:     INT1PPS = 0x09;
  1405  000D58  0E09               	movlw	9
  1406  000D5A  6FC1               	movwf	193,b	;volatile
  1407                           
  1408                           ;mcc_generated_files/pin_manager.c: 123:     I2C1SCLPPS = 0x10;
  1409  000D5C  0E10               	movlw	16
  1410  000D5E  6FE3               	movwf	227,b	;volatile
  1411                           
  1412                           ; BSR set to: 58
  1413  000D60  0012               	return		;funcret
  1414  000D62                     __end_of_PIN_MANAGER_Initialize:
  1415                           	opt callstack 0
  1416                           
  1417 ;; *************** function _OSCILLATOR_Initialize *****************
  1418 ;; Defined at:
  1419 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1436 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1437 ;;Total ram usage:        0 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    4
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_SYSTEM_Initialize
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text7
  1448  001222                     __ptext7:
  1449                           	opt callstack 0
  1450  001222                     _OSCILLATOR_Initialize:
  1451                           	opt callstack 25
  1452                           
  1453                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x62;
  1454                           
  1455                           ; BSR set to: 58
  1456                           ;incstack = 0
  1457  001222  0E62               	movlw	98
  1458  001224  0139               	movlb	57	; () banked
  1459  001226  6FD9               	movwf	217,b	;volatile
  1460                           
  1461                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  1462  001228  0E00               	movlw	0
  1463  00122A  6FDB               	movwf	219,b	;volatile
  1464                           
  1465                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  1466  00122C  0E00               	movlw	0
  1467  00122E  6FDD               	movwf	221,b	;volatile
  1468                           
  1469                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x02;
  1470  001230  0E02               	movlw	2
  1471  001232  6FDF               	movwf	223,b	;volatile
  1472                           
  1473                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  1474  001234  0E00               	movlw	0
  1475  001236  6FDE               	movwf	222,b	;volatile
  1476                           
  1477                           ; BSR set to: 57
  1478  001238  0012               	return		;funcret
  1479  00123A                     __end_of_OSCILLATOR_Initialize:
  1480                           	opt callstack 0
  1481                           
  1482 ;; *************** function _INTERRUPT_Initialize *****************
  1483 ;; Defined at:
  1484 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		None
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1501 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    4
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_SYSTEM_Initialize
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text8
  1513  001292                     __ptext8:
  1514                           	opt callstack 0
  1515  001292                     _INTERRUPT_Initialize:
  1516                           	opt callstack 25
  1517                           
  1518                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  1519                           
  1520                           ; BSR set to: 57
  1521                           ;incstack = 0
  1522  001292  9AD2               	bcf	16338,5,c	;volatile
  1523  001294  0012               	return		;funcret
  1524  001296                     __end_of_INTERRUPT_Initialize:
  1525                           	opt callstack 0
  1526                           
  1527 ;; *************** function _I2C1_Initialize *****************
  1528 ;; Defined at:
  1529 ;;		line 57 in file "mcc_generated_files/i2c1.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    4
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_SYSTEM_Initialize
  1554 ;;		_i2c1_write1ByteRegister
  1555 ;;		_i2c1_write2ByteRegister
  1556 ;;		_i2c1_writeNBytes
  1557 ;;		_i2c1_read1ByteRegister
  1558 ;;		_i2c1_read2ByteRegister
  1559 ;;		_i2c1_readDataBlock
  1560 ;;		_i2c1_readNBytes
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text9
  1565  001134                     __ptext9:
  1566                           	opt callstack 0
  1567  001134                     _I2C1_Initialize:
  1568                           	opt callstack 25
  1569                           
  1570                           ;mcc_generated_files/i2c1.c: 59:  if(!I2C1CON0bits.EN || lastError != I2C1_GOOD)
  1571                           
  1572                           ;incstack = 0
  1573  001134  013D               	movlb	61	; () banked
  1574  001136  AF73               	btfss	115,7,b	;volatile
  1575  001138  D003               	goto	u270
  1576                           
  1577                           ; BSR set to: 61
  1578  00113A  5036               	movf	_lastError,w,c
  1579  00113C  B4D8               	btfsc	status,2,c
  1580  00113E  0012               	return	
  1581  001140                     u270:
  1582                           
  1583                           ; BSR set to: 61
  1584                           ;mcc_generated_files/i2c1.c: 60:     {;mcc_generated_files/i2c1.c: 61:   lastError = I2C
      +                          1_GOOD;
  1585  001140  0E00               	movlw	0
  1586  001142  6E36               	movwf	_lastError,c
  1587                           
  1588                           ;mcc_generated_files/i2c1.c: 63:   I2C1CON1 = 0x80;
  1589  001144  0E80               	movlw	128
  1590  001146  6F74               	movwf	116,b	;volatile
  1591                           
  1592                           ;mcc_generated_files/i2c1.c: 65:   I2C1CON2 = 0x00;
  1593  001148  0E00               	movlw	0
  1594  00114A  6F75               	movwf	117,b	;volatile
  1595                           
  1596                           ;mcc_generated_files/i2c1.c: 67:   I2C1CLK = 0x03;
  1597  00114C  0E03               	movlw	3
  1598  00114E  6F7B               	movwf	123,b	;volatile
  1599                           
  1600                           ;mcc_generated_files/i2c1.c: 69:   I2C1CON0 = 0x84;
  1601  001150  0E84               	movlw	132
  1602  001152  6F73               	movwf	115,b	;volatile
  1603                           
  1604                           ;mcc_generated_files/i2c1.c: 70:   I2C1PIR = 0;
  1605  001154  0E00               	movlw	0
  1606  001156  6F79               	movwf	121,b	;volatile
  1607                           
  1608                           ;mcc_generated_files/i2c1.c: 71:   I2C1ERR = 0;
  1609  001158  0E00               	movlw	0
  1610  00115A  6F76               	movwf	118,b	;volatile
  1611                           
  1612                           ; BSR set to: 61
  1613  00115C  0012               	return		;funcret
  1614  00115E                     __end_of_I2C1_Initialize:
  1615                           	opt callstack 0
  1616                           
  1617 ;; *************** function _EXT_INT_Initialize *****************
  1618 ;; Defined at:
  1619 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         0       0       0       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    5
  1640 ;; This function calls:
  1641 ;;		_INT0_SetInterruptHandler
  1642 ;;		_INT1_SetInterruptHandler
  1643 ;;		_INT2_SetInterruptHandler
  1644 ;; This function is called by:
  1645 ;;		_SYSTEM_Initialize
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text10
  1650  000F40                     __ptext10:
  1651                           	opt callstack 0
  1652  000F40                     _EXT_INT_Initialize:
  1653                           	opt callstack 24
  1654                           
  1655                           ;mcc_generated_files/ext_int.c: 118:     (PIR1bits.INT0IF = 0);
  1656                           
  1657                           ; BSR set to: 61
  1658                           ;incstack = 0
  1659  000F40  0139               	movlb	57	; () banked
  1660  000F42  91A1               	bcf	161,0,b	;volatile
  1661                           
  1662                           ;mcc_generated_files/ext_int.c: 119:     (INTCON0bits.INT0EDG = 0);
  1663  000F44  90D2               	bcf	16338,0,c	;volatile
  1664                           
  1665                           ; BSR set to: 57
  1666                           ;mcc_generated_files/ext_int.c: 121:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
  1667  000F46  0E9A               	movlw	low _INT0_DefaultInterruptHandler
  1668  000F48  6E01               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  1669  000F4A  0E12               	movlw	high _INT0_DefaultInterruptHandler
  1670  000F4C  6E02               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  1671  000F4E  EC2B  F009         	call	_INT0_SetInterruptHandler	;wreg free
  1672                           
  1673                           ;mcc_generated_files/ext_int.c: 122:     (PIE1bits.INT0IE = 1);
  1674  000F52  0139               	movlb	57	; () banked
  1675  000F54  8191               	bsf	145,0,b	;volatile
  1676                           
  1677                           ; BSR set to: 57
  1678                           ;mcc_generated_files/ext_int.c: 127:     (PIR4bits.INT1IF = 0);
  1679  000F56  9FA4               	bcf	164,7,b	;volatile
  1680                           
  1681                           ; BSR set to: 57
  1682                           ;mcc_generated_files/ext_int.c: 128:     (INTCON0bits.INT1EDG = 0);
  1683  000F58  92D2               	bcf	16338,1,c	;volatile
  1684                           
  1685                           ;mcc_generated_files/ext_int.c: 130:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  1686  000F5A  0E98               	movlw	low _INT1_DefaultInterruptHandler
  1687  000F5C  6E01               	movwf	INT1_SetInterruptHandler@InterruptHandler,c
  1688  000F5E  0E12               	movlw	high _INT1_DefaultInterruptHandler
  1689  000F60  6E02               	movwf	INT1_SetInterruptHandler@InterruptHandler+1,c
  1690  000F62  EC24  F009         	call	_INT1_SetInterruptHandler	;wreg free
  1691                           
  1692                           ;mcc_generated_files/ext_int.c: 131:     (PIE4bits.INT1IE = 1);
  1693  000F66  0139               	movlb	57	; () banked
  1694  000F68  8F94               	bsf	148,7,b	;volatile
  1695                           
  1696                           ; BSR set to: 57
  1697                           ;mcc_generated_files/ext_int.c: 136:     (PIR8bits.INT2IF = 0);
  1698  000F6A  9DA8               	bcf	168,6,b	;volatile
  1699                           
  1700                           ; BSR set to: 57
  1701                           ;mcc_generated_files/ext_int.c: 137:     (INTCON0bits.INT2EDG = 0);
  1702  000F6C  94D2               	bcf	16338,2,c	;volatile
  1703                           
  1704                           ;mcc_generated_files/ext_int.c: 139:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  1705  000F6E  0E96               	movlw	low _INT2_DefaultInterruptHandler
  1706  000F70  6E01               	movwf	INT2_SetInterruptHandler@InterruptHandler,c
  1707  000F72  0E12               	movlw	high _INT2_DefaultInterruptHandler
  1708  000F74  6E02               	movwf	INT2_SetInterruptHandler@InterruptHandler+1,c
  1709  000F76  EC1D  F009         	call	_INT2_SetInterruptHandler	;wreg free
  1710                           
  1711                           ;mcc_generated_files/ext_int.c: 140:     (PIE8bits.INT2IE = 1);
  1712  000F7A  0139               	movlb	57	; () banked
  1713  000F7C  8D98               	bsf	152,6,b	;volatile
  1714                           
  1715                           ; BSR set to: 57
  1716  000F7E  0012               	return		;funcret
  1717  000F80                     __end_of_EXT_INT_Initialize:
  1718                           	opt callstack 0
  1719                           
  1720 ;; *************** function _INT2_SetInterruptHandler *****************
  1721 ;; Defined at:
  1722 ;;		line 104 in file "mcc_generated_files/ext_int.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1725 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1737 ;;      Params:         2       0       0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1740 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1741 ;;Total ram usage:        2 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    4
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_EXT_INT_Initialize
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text11
  1752  00123A                     __ptext11:
  1753                           	opt callstack 0
  1754  00123A                     _INT2_SetInterruptHandler:
  1755                           	opt callstack 24
  1756                           
  1757                           ;mcc_generated_files/ext_int.c: 105:     INT2_InterruptHandler = InterruptHandler;
  1758                           
  1759                           ; BSR set to: 57
  1760                           ;incstack = 0
  1761  00123A  0060  F004  F037   	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1762  001240  0060  F008  F038   	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1763  001246  0012               	return		;funcret
  1764  001248                     __end_of_INT2_SetInterruptHandler:
  1765                           	opt callstack 0
  1766                           
  1767 ;; *************** function _INT1_SetInterruptHandler *****************
  1768 ;; Defined at:
  1769 ;;		line 78 in file "mcc_generated_files/ext_int.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1772 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1784 ;;      Params:         2       0       0       0       0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1787 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1788 ;;Total ram usage:        2 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    4
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_EXT_INT_Initialize
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text12
  1799  001248                     __ptext12:
  1800                           	opt callstack 0
  1801  001248                     _INT1_SetInterruptHandler:
  1802                           	opt callstack 24
  1803                           
  1804                           ;mcc_generated_files/ext_int.c: 79:     INT1_InterruptHandler = InterruptHandler;
  1805                           
  1806                           ;incstack = 0
  1807  001248  0060  F004  F039   	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1808  00124E  0060  F008  F03A   	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1809  001254  0012               	return		;funcret
  1810  001256                     __end_of_INT1_SetInterruptHandler:
  1811                           	opt callstack 0
  1812                           
  1813 ;; *************** function _INT0_SetInterruptHandler *****************
  1814 ;; Defined at:
  1815 ;;		line 52 in file "mcc_generated_files/ext_int.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1818 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1830 ;;      Params:         2       0       0       0       0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1833 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1834 ;;Total ram usage:        2 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    4
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_EXT_INT_Initialize
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text13
  1845  001256                     __ptext13:
  1846                           	opt callstack 0
  1847  001256                     _INT0_SetInterruptHandler:
  1848                           	opt callstack 24
  1849                           
  1850                           ;mcc_generated_files/ext_int.c: 53:     INT0_InterruptHandler = InterruptHandler;
  1851                           
  1852                           ;incstack = 0
  1853  001256  0060  F004  F03B   	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1854  00125C  0060  F008  F03C   	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1855  001262  0012               	return		;funcret
  1856  001264                     __end_of_INT0_SetInterruptHandler:
  1857                           	opt callstack 0
  1858                           
  1859 ;; *************** function _ECAN_Initialize *****************
  1860 ;; Defined at:
  1861 ;;		line 69 in file "mcc_generated_files/ecan.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1877 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1878 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    4
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_SYSTEM_Initialize
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text14
  1890  000B86                     __ptext14:
  1891                           	opt callstack 0
  1892  000B86                     _ECAN_Initialize:
  1893                           	opt callstack 25
  1894                           
  1895                           ;mcc_generated_files/ecan.c: 71:     CANCON = 0x80;
  1896                           
  1897                           ;incstack = 0
  1898  000B86  0E80               	movlw	128
  1899  000B88  6E8F               	movwf	16271,c	;volatile
  1900  000B8A                     l1923:
  1901  000B8A  508E               	movf	16270,w,c	;volatile
  1902  000B8C  0BE0               	andlw	224
  1903  000B8E  0A80               	xorlw	128
  1904  000B90  A4D8               	btfss	status,2,c
  1905  000B92  D7FB               	goto	l1923
  1906                           
  1907                           ;mcc_generated_files/ecan.c: 77:     ECANCON = 0x00;
  1908  000B94  0E00               	movlw	0
  1909  000B96  6E91               	movwf	16273,c	;volatile
  1910                           
  1911                           ;mcc_generated_files/ecan.c: 82:     CIOCON = 0x00;
  1912  000B98  0E00               	movlw	0
  1913  000B9A  0137               	movlb	55	; () banked
  1914  000B9C  6F00               	movwf	0,b	;volatile
  1915                           
  1916                           ;mcc_generated_files/ecan.c: 95:     RXM0EIDH = 0x00;
  1917  000B9E  0E00               	movlw	0
  1918  000BA0  6FBA               	movwf	186,b	;volatile
  1919                           
  1920                           ;mcc_generated_files/ecan.c: 96:     RXM0EIDL = 0x00;
  1921  000BA2  0E00               	movlw	0
  1922  000BA4  6FBB               	movwf	187,b	;volatile
  1923                           
  1924                           ;mcc_generated_files/ecan.c: 97:     RXM0SIDH = 0x00;
  1925  000BA6  0E00               	movlw	0
  1926  000BA8  6FB8               	movwf	184,b	;volatile
  1927                           
  1928                           ;mcc_generated_files/ecan.c: 98:     RXM0SIDL = 0x00;
  1929  000BAA  0E00               	movlw	0
  1930  000BAC  6FB9               	movwf	185,b	;volatile
  1931                           
  1932                           ;mcc_generated_files/ecan.c: 99:     RXM1EIDH = 0x00;
  1933  000BAE  0E00               	movlw	0
  1934  000BB0  6FBE               	movwf	190,b	;volatile
  1935                           
  1936                           ;mcc_generated_files/ecan.c: 100:     RXM1EIDL = 0x00;
  1937  000BB2  0E00               	movlw	0
  1938  000BB4  6FBF               	movwf	191,b	;volatile
  1939                           
  1940                           ;mcc_generated_files/ecan.c: 101:     RXM1SIDH = 0x00;
  1941  000BB6  0E00               	movlw	0
  1942  000BB8  6FBC               	movwf	188,b	;volatile
  1943                           
  1944                           ;mcc_generated_files/ecan.c: 102:     RXM1SIDL = 0x00;
  1945  000BBA  0E00               	movlw	0
  1946  000BBC  6FBD               	movwf	189,b	;volatile
  1947                           
  1948                           ;mcc_generated_files/ecan.c: 107:     RXF0EIDH = 0x00;
  1949  000BBE  0E00               	movlw	0
  1950  000BC0  6FA2               	movwf	162,b	;volatile
  1951                           
  1952                           ;mcc_generated_files/ecan.c: 108:     RXF0EIDL = 0x00;
  1953  000BC2  0E00               	movlw	0
  1954  000BC4  6FA3               	movwf	163,b	;volatile
  1955                           
  1956                           ;mcc_generated_files/ecan.c: 109:     RXF0SIDH = 0x00;
  1957  000BC6  0E00               	movlw	0
  1958  000BC8  6FA0               	movwf	160,b	;volatile
  1959                           
  1960                           ;mcc_generated_files/ecan.c: 110:     RXF0SIDL = 0x00;
  1961  000BCA  0E00               	movlw	0
  1962  000BCC  6FA1               	movwf	161,b	;volatile
  1963                           
  1964                           ;mcc_generated_files/ecan.c: 111:     RXF1EIDH = 0x00;
  1965  000BCE  0E00               	movlw	0
  1966  000BD0  6FA6               	movwf	166,b	;volatile
  1967                           
  1968                           ;mcc_generated_files/ecan.c: 112:     RXF1EIDL = 0x00;
  1969  000BD2  0E00               	movlw	0
  1970  000BD4  6FA7               	movwf	167,b	;volatile
  1971                           
  1972                           ;mcc_generated_files/ecan.c: 113:     RXF1SIDH = 0x00;
  1973  000BD6  0E00               	movlw	0
  1974  000BD8  6FA4               	movwf	164,b	;volatile
  1975                           
  1976                           ;mcc_generated_files/ecan.c: 114:     RXF1SIDL = 0x00;
  1977  000BDA  0E00               	movlw	0
  1978  000BDC  6FA5               	movwf	165,b	;volatile
  1979                           
  1980                           ;mcc_generated_files/ecan.c: 115:     RXF2EIDH = 0x00;
  1981  000BDE  0E00               	movlw	0
  1982  000BE0  6FAA               	movwf	170,b	;volatile
  1983                           
  1984                           ;mcc_generated_files/ecan.c: 116:     RXF2EIDL = 0x00;
  1985  000BE2  0E00               	movlw	0
  1986  000BE4  6FAB               	movwf	171,b	;volatile
  1987                           
  1988                           ;mcc_generated_files/ecan.c: 117:     RXF2SIDH = 0x00;
  1989  000BE6  0E00               	movlw	0
  1990  000BE8  6FA8               	movwf	168,b	;volatile
  1991                           
  1992                           ;mcc_generated_files/ecan.c: 118:     RXF2SIDL = 0x00;
  1993  000BEA  0E00               	movlw	0
  1994  000BEC  6FA9               	movwf	169,b	;volatile
  1995                           
  1996                           ;mcc_generated_files/ecan.c: 119:     RXF3EIDH = 0x00;
  1997  000BEE  0E00               	movlw	0
  1998  000BF0  6FAE               	movwf	174,b	;volatile
  1999                           
  2000                           ;mcc_generated_files/ecan.c: 120:     RXF3EIDL = 0x00;
  2001  000BF2  0E00               	movlw	0
  2002  000BF4  6FAF               	movwf	175,b	;volatile
  2003                           
  2004                           ;mcc_generated_files/ecan.c: 121:     RXF3SIDH = 0x00;
  2005  000BF6  0E00               	movlw	0
  2006  000BF8  6FAC               	movwf	172,b	;volatile
  2007                           
  2008                           ;mcc_generated_files/ecan.c: 122:     RXF3SIDL = 0x00;
  2009  000BFA  0E00               	movlw	0
  2010  000BFC  6FAD               	movwf	173,b	;volatile
  2011                           
  2012                           ;mcc_generated_files/ecan.c: 123:     RXF4EIDH = 0x00;
  2013  000BFE  0E00               	movlw	0
  2014  000C00  6FB2               	movwf	178,b	;volatile
  2015                           
  2016                           ;mcc_generated_files/ecan.c: 124:     RXF4EIDL = 0x00;
  2017  000C02  0E00               	movlw	0
  2018  000C04  6FB3               	movwf	179,b	;volatile
  2019                           
  2020                           ;mcc_generated_files/ecan.c: 125:     RXF4SIDH = 0x00;
  2021  000C06  0E00               	movlw	0
  2022  000C08  6FB0               	movwf	176,b	;volatile
  2023                           
  2024                           ;mcc_generated_files/ecan.c: 126:     RXF4SIDL = 0x00;
  2025  000C0A  0E00               	movlw	0
  2026  000C0C  6FB1               	movwf	177,b	;volatile
  2027                           
  2028                           ;mcc_generated_files/ecan.c: 127:     RXF5EIDH = 0x00;
  2029  000C0E  0E00               	movlw	0
  2030  000C10  6FB6               	movwf	182,b	;volatile
  2031                           
  2032                           ;mcc_generated_files/ecan.c: 128:     RXF5EIDL = 0x00;
  2033  000C12  0E00               	movlw	0
  2034  000C14  6FB7               	movwf	183,b	;volatile
  2035                           
  2036                           ;mcc_generated_files/ecan.c: 129:     RXF5SIDH = 0x00;
  2037  000C16  0E00               	movlw	0
  2038  000C18  6FB4               	movwf	180,b	;volatile
  2039                           
  2040                           ;mcc_generated_files/ecan.c: 130:     RXF5SIDL = 0x00;
  2041  000C1A  0E00               	movlw	0
  2042  000C1C  6FB5               	movwf	181,b	;volatile
  2043                           
  2044                           ;mcc_generated_files/ecan.c: 145:     BRGCON1 = 0x00;
  2045  000C1E  0E00               	movlw	0
  2046  000C20  6F03               	movwf	3,b	;volatile
  2047                           
  2048                           ;mcc_generated_files/ecan.c: 146:     BRGCON2 = 0xA8;
  2049  000C22  0EA8               	movlw	168
  2050  000C24  6F04               	movwf	4,b	;volatile
  2051                           
  2052                           ;mcc_generated_files/ecan.c: 147:     BRGCON3 = 0x01;
  2053  000C26  0E01               	movlw	1
  2054  000C28  6F05               	movwf	5,b	;volatile
  2055                           
  2056                           ;mcc_generated_files/ecan.c: 149:     CANCON = 0x00;
  2057  000C2A  0E00               	movlw	0
  2058  000C2C  6E8F               	movwf	16271,c	;volatile
  2059  000C2E                     l1927:
  2060  000C2E  006F FE38  F001    	movff	16270,??_ECAN_Initialize	;volatile
  2061  000C34  0EE0               	movlw	224
  2062  000C36  1601               	andwf	??_ECAN_Initialize,f,c
  2063  000C38  B4D8               	btfsc	status,2,c
  2064  000C3A  0012               	return	
  2065  000C3C  D7F8               	goto	l1927
  2066  000C3E                     __end_of_ECAN_Initialize:
  2067                           	opt callstack 0
  2068                           
  2069 ;; *************** function _LcdString *****************
  2070 ;; Defined at:
  2071 ;;		line 102 in file "USER_C/lcd.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  p               2    6[COMRAM] PTR unsigned char 
  2074 ;;		 -> STR_1(7), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         2       0       0       0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2089 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2090 ;;Total ram usage:        2 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    6
  2093 ;; This function calls:
  2094 ;;		_sendDat
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text15
  2101  0010D6                     __ptext15:
  2102                           	opt callstack 0
  2103  0010D6                     _LcdString:
  2104                           	opt callstack 24
  2105                           
  2106                           ;USER_C/lcd.c: 103:     while (*p != '\0') {
  2107                           
  2108                           ;incstack = 0
  2109  0010D6  D00C               	goto	l3169
  2110  0010D8                     l3165:
  2111                           
  2112                           ;USER_C/lcd.c: 104:         sendDat(*p);
  2113  0010D8  0060  F01F  FFF6   	movff	LcdString@p,tblptrl
  2114  0010DE  0060  F023  FFF7   	movff	LcdString@p+1,tblptrh
  2115  0010E4                     	if	0	;tblptru may be non-zero
  2116  0010E4                     	endif
  2117  0010E4                     	if	0	;tblptru may be non-zero
  2118  0010E4                     	endif
  2119  0010E4  0008               	tblrd		*
  2120  0010E6  50F5               	movf	tablat,w,c
  2121  0010E8  EC11  F007         	call	_sendDat
  2122                           
  2123                           ;USER_C/lcd.c: 105:         p++;
  2124  0010EC  4A07               	infsnz	LcdString@p,f,c
  2125  0010EE  2A08               	incf	LcdString@p+1,f,c
  2126  0010F0                     l3169:
  2127                           
  2128                           ;USER_C/lcd.c: 103:     while (*p != '\0') {
  2129  0010F0  0060  F01F  FFF6   	movff	LcdString@p,tblptrl
  2130  0010F6  0060  F023  FFF7   	movff	LcdString@p+1,tblptrh
  2131  0010FC                     	if	0	;tblptru may be non-zero
  2132  0010FC                     	endif
  2133  0010FC                     	if	0	;tblptru may be non-zero
  2134  0010FC                     	endif
  2135  0010FC  0008               	tblrd		*
  2136  0010FE  50F5               	movf	tablat,w,c
  2137  001100  0900               	iorlw	0
  2138  001102  B4D8               	btfsc	status,2,c
  2139  001104  0012               	return	
  2140  001106  D7E8               	goto	l3165
  2141  001108                     __end_of_LcdString:
  2142                           	opt callstack 0
  2143                           
  2144 ;; *************** function _LCD_Draw_Two_Dot *****************
  2145 ;; Defined at:
  2146 ;;		line 77 in file "AP_C/AP_LCD.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  StartX          1    wreg     unsigned char 
  2149 ;;  StartY          1   21[COMRAM] unsigned char 
  2150 ;;  EndX            1   22[COMRAM] unsigned char 
  2151 ;;  EndY            1   23[COMRAM] unsigned char 
  2152 ;;  Color           1   24[COMRAM] unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  StartX          1   38[COMRAM] unsigned char 
  2155 ;;  delta_y         2   41[COMRAM] int 
  2156 ;;  delta_x         2   39[COMRAM] int 
  2157 ;;  distance        2   36[COMRAM] int 
  2158 ;;  y               2   32[COMRAM] int 
  2159 ;;  x               2   30[COMRAM] int 
  2160 ;;  t               2   28[COMRAM] int 
  2161 ;;  incy            1   35[COMRAM] unsigned char 
  2162 ;;  incx            1   34[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2172 ;;      Params:         4       0       0       0       0       0       0       0       0
  2173 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2174 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2175 ;;      Totals:        22       0       0       0       0       0       0       0       0
  2176 ;;Total ram usage:       22 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    8
  2179 ;; This function calls:
  2180 ;;		_Draw_point
  2181 ;;		_abs
  2182 ;;		_v_Lcd12864DrawLineX_f
  2183 ;;		_v_Lcd12864DrawLineY_f
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;;		_LCD_DrawSineWave
  2187 ;;		_LCD_DrawCoseWave
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text16
  2192  000866                     __ptext16:
  2193                           	opt callstack 0
  2194  000866                     _LCD_Draw_Two_Dot:
  2195                           	opt callstack 22
  2196                           
  2197                           ;incstack = 0
  2198                           ;LCD_Draw_Two_Dot@StartX stored from wreg
  2199  000866  6E27               	movwf	LCD_Draw_Two_Dot@StartX,c
  2200                           
  2201                           ;AP_C/AP_LCD.c: 77: void LCD_Draw_Two_Dot(unsigned char StartX,unsigned char StartY,unsi
      +                          gned char EndX,unsigned char EndY,unsigned char Color);AP_C/AP_LCD.c: 78: {;AP_C/AP_LCD.
      +                          c: 79:     int t,distance;;AP_C/AP_LCD.c: 80:     int x=0,y=0,delta_x,delta_y;
  2202  000868  0E00               	movlw	0
  2203  00086A  6E20               	movwf	LCD_Draw_Two_Dot@x+1,c
  2204  00086C  0E00               	movlw	0
  2205  00086E  6E1F               	movwf	LCD_Draw_Two_Dot@x,c
  2206  000870  0E00               	movlw	0
  2207  000872  6E22               	movwf	LCD_Draw_Two_Dot@y+1,c
  2208  000874  0E00               	movlw	0
  2209  000876  6E21               	movwf	LCD_Draw_Two_Dot@y,c
  2210                           
  2211                           ;AP_C/AP_LCD.c: 81:     char incx,incy;;AP_C/AP_LCD.c: 83:     delta_x=EndX-StartX;
  2212  000878  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2213  00087A  5C17               	subwf	LCD_Draw_Two_Dot@EndX,w,c
  2214  00087C  6E28               	movwf	LCD_Draw_Two_Dot@delta_x,c
  2215  00087E  6A29               	clrf	LCD_Draw_Two_Dot@delta_x+1,c
  2216  000880  A0D8               	btfss	status,0,c
  2217  000882  0629               	decf	LCD_Draw_Two_Dot@delta_x+1,f,c
  2218                           
  2219                           ;AP_C/AP_LCD.c: 84:     delta_y=EndY-StartY;
  2220  000884  5016               	movf	LCD_Draw_Two_Dot@StartY,w,c
  2221  000886  5C18               	subwf	LCD_Draw_Two_Dot@EndY,w,c
  2222  000888  6E2A               	movwf	LCD_Draw_Two_Dot@delta_y,c
  2223  00088A  6A2B               	clrf	LCD_Draw_Two_Dot@delta_y+1,c
  2224  00088C  A0D8               	btfss	status,0,c
  2225  00088E  062B               	decf	LCD_Draw_Two_Dot@delta_y+1,f,c
  2226                           
  2227                           ;AP_C/AP_LCD.c: 86:     if(delta_x>0)
  2228  000890  BE29               	btfsc	LCD_Draw_Two_Dot@delta_x+1,7,c
  2229  000892  D008               	goto	l3091
  2230  000894  5029               	movf	LCD_Draw_Two_Dot@delta_x+1,w,c
  2231  000896  E103               	bnz	u1140
  2232  000898  0428               	decf	LCD_Draw_Two_Dot@delta_x,w,c
  2233  00089A  A0D8               	btfss	status,0,c
  2234  00089C  D003               	goto	l3091
  2235  00089E                     u1140:
  2236                           
  2237                           ;AP_C/AP_LCD.c: 87:  {;AP_C/AP_LCD.c: 88:   incx=1;
  2238  00089E  0E01               	movlw	1
  2239  0008A0  6E23               	movwf	LCD_Draw_Two_Dot@incx,c
  2240                           
  2241                           ;AP_C/AP_LCD.c: 89:  }
  2242  0008A2  D012               	goto	l3099
  2243  0008A4                     l3091:
  2244                           
  2245                           ;AP_C/AP_LCD.c: 92:  {;AP_C/AP_LCD.c: 93:     if( delta_x==0 )
  2246  0008A4  5028               	movf	LCD_Draw_Two_Dot@delta_x,w,c
  2247  0008A6  1029               	iorwf	LCD_Draw_Two_Dot@delta_x+1,w,c
  2248  0008A8  A4D8               	btfss	status,2,c
  2249  0008AA  D00D               	goto	l54
  2250                           
  2251                           ;AP_C/AP_LCD.c: 94:        {;AP_C/AP_LCD.c: 95:            v_Lcd12864DrawLineY_f(StartX,
      +                          StartY,EndY,Color);
  2252  0008AC  0060  F058  F011   	movff	LCD_Draw_Two_Dot@StartY,v_Lcd12864DrawLineY_f@Y0
  2253  0008B2  0060  F060  F012   	movff	LCD_Draw_Two_Dot@EndY,v_Lcd12864DrawLineY_f@Y1
  2254  0008B8  0060  F064  F013   	movff	LCD_Draw_Two_Dot@Color,v_Lcd12864DrawLineY_f@Color
  2255  0008BE  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2256  0008C0  ECDF  F007         	call	_v_Lcd12864DrawLineY_f
  2257  0008C4  0012               	return	
  2258  0008C6                     l54:
  2259  0008C6  6823               	setf	LCD_Draw_Two_Dot@incx,c
  2260  0008C8                     l3099:
  2261                           
  2262                           ;AP_C/AP_LCD.c: 101:     if(delta_y>0)
  2263  0008C8  BE2B               	btfsc	LCD_Draw_Two_Dot@delta_y+1,7,c
  2264  0008CA  D008               	goto	l3103
  2265  0008CC  502B               	movf	LCD_Draw_Two_Dot@delta_y+1,w,c
  2266  0008CE  E103               	bnz	u1160
  2267  0008D0  042A               	decf	LCD_Draw_Two_Dot@delta_y,w,c
  2268  0008D2  A0D8               	btfss	status,0,c
  2269  0008D4  D003               	goto	l3103
  2270  0008D6                     u1160:
  2271                           
  2272                           ;AP_C/AP_LCD.c: 102:  {;AP_C/AP_LCD.c: 103:   incy=1;
  2273  0008D6  0E01               	movlw	1
  2274  0008D8  6E24               	movwf	LCD_Draw_Two_Dot@incy,c
  2275                           
  2276                           ;AP_C/AP_LCD.c: 104:  }
  2277  0008DA  D012               	goto	l3111
  2278  0008DC                     l3103:
  2279                           
  2280                           ;AP_C/AP_LCD.c: 107:  {;AP_C/AP_LCD.c: 108:      if(delta_y==0)
  2281  0008DC  502A               	movf	LCD_Draw_Two_Dot@delta_y,w,c
  2282  0008DE  102B               	iorwf	LCD_Draw_Two_Dot@delta_y+1,w,c
  2283  0008E0  A4D8               	btfss	status,2,c
  2284  0008E2  D00D               	goto	l59
  2285                           
  2286                           ;AP_C/AP_LCD.c: 109:         {;AP_C/AP_LCD.c: 110:             v_Lcd12864DrawLineX_f( St
      +                          artX,EndX,StartY,Color);
  2287  0008E4  0060  F05C  F011   	movff	LCD_Draw_Two_Dot@EndX,v_Lcd12864DrawLineX_f@X1
  2288  0008EA  0060  F058  F012   	movff	LCD_Draw_Two_Dot@StartY,v_Lcd12864DrawLineX_f@Y
  2289  0008F0  0060  F064  F013   	movff	LCD_Draw_Two_Dot@Color,v_Lcd12864DrawLineX_f@Color
  2290  0008F6  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2291  0008F8  ECFD  F007         	call	_v_Lcd12864DrawLineX_f
  2292  0008FC  0012               	return	
  2293  0008FE                     l59:
  2294  0008FE  6824               	setf	LCD_Draw_Two_Dot@incy,c
  2295  000900                     l3111:
  2296                           
  2297                           ;AP_C/AP_LCD.c: 116:     delta_x=abs(delta_x);
  2298  000900  0060  F0A0  F001   	movff	LCD_Draw_Two_Dot@delta_x,abs@a
  2299  000906  0060  F0A4  F002   	movff	LCD_Draw_Two_Dot@delta_x+1,abs@a+1
  2300  00090C  ECC0  F007         	call	_abs	;wreg free
  2301  000910  0060  F004  F028   	movff	?_abs,LCD_Draw_Two_Dot@delta_x
  2302  000916  0060  F008  F029   	movff	?_abs+1,LCD_Draw_Two_Dot@delta_x+1
  2303                           
  2304                           ;AP_C/AP_LCD.c: 117:     delta_y=abs(delta_y);
  2305  00091C  0060  F0A8  F001   	movff	LCD_Draw_Two_Dot@delta_y,abs@a
  2306  000922  0060  F0AC  F002   	movff	LCD_Draw_Two_Dot@delta_y+1,abs@a+1
  2307  000928  ECC0  F007         	call	_abs	;wreg free
  2308  00092C  0060  F004  F02A   	movff	?_abs,LCD_Draw_Two_Dot@delta_y
  2309  000932  0060  F008  F02B   	movff	?_abs+1,LCD_Draw_Two_Dot@delta_y+1
  2310                           
  2311                           ;AP_C/AP_LCD.c: 119:     if(delta_x>delta_y)
  2312  000938  5028               	movf	LCD_Draw_Two_Dot@delta_x,w,c
  2313  00093A  5C2A               	subwf	LCD_Draw_Two_Dot@delta_y,w,c
  2314  00093C  502B               	movf	LCD_Draw_Two_Dot@delta_y+1,w,c
  2315  00093E  0A80               	xorlw	128
  2316  000940  6E1A               	movwf	??_LCD_Draw_Two_Dot& (0+255),c
  2317  000942  5029               	movf	LCD_Draw_Two_Dot@delta_x+1,w,c
  2318  000944  0A80               	xorlw	128
  2319  000946  581A               	subwfb	??_LCD_Draw_Two_Dot& (0+255),w,c
  2320  000948  B0D8               	btfsc	status,0,c
  2321  00094A  D007               	goto	l61
  2322                           
  2323                           ;AP_C/AP_LCD.c: 120:  {;AP_C/AP_LCD.c: 121:   distance=delta_x;
  2324  00094C  0060  F0A0  F025   	movff	LCD_Draw_Two_Dot@delta_x,LCD_Draw_Two_Dot@distance
  2325  000952  0060  F0A4  F026   	movff	LCD_Draw_Two_Dot@delta_x+1,LCD_Draw_Two_Dot@distance+1
  2326                           
  2327                           ;AP_C/AP_LCD.c: 122:  }
  2328  000958  D006               	goto	l3117
  2329  00095A                     l61:
  2330                           
  2331                           ;AP_C/AP_LCD.c: 124:  {;AP_C/AP_LCD.c: 125:   distance=delta_y;
  2332  00095A  0060  F0A8  F025   	movff	LCD_Draw_Two_Dot@delta_y,LCD_Draw_Two_Dot@distance
  2333  000960  0060  F0AC  F026   	movff	LCD_Draw_Two_Dot@delta_y+1,LCD_Draw_Two_Dot@distance+1
  2334  000966                     l3117:
  2335                           
  2336                           ;AP_C/AP_LCD.c: 128:     Draw_point(StartX,StartY,Color);
  2337  000966  0060  F058  F007   	movff	LCD_Draw_Two_Dot@StartY,Draw_point@Y
  2338  00096C  0060  F064  F008   	movff	LCD_Draw_Two_Dot@Color,Draw_point@Color
  2339  000972  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2340  000974  EC05  F005         	call	_Draw_point
  2341                           
  2342                           ;AP_C/AP_LCD.c: 130:     for(t=0;t<=distance+1;t++)
  2343  000978  0E00               	movlw	0
  2344  00097A  6E1E               	movwf	LCD_Draw_Two_Dot@t+1,c
  2345  00097C  0E00               	movlw	0
  2346  00097E  6E1D               	movwf	LCD_Draw_Two_Dot@t,c
  2347  000980  D033               	goto	l3135
  2348  000982                     l3121:
  2349                           
  2350                           ;AP_C/AP_LCD.c: 131:     {;AP_C/AP_LCD.c: 132:         Draw_point(StartX,StartY,Color);
  2351  000982  0060  F058  F007   	movff	LCD_Draw_Two_Dot@StartY,Draw_point@Y
  2352  000988  0060  F064  F008   	movff	LCD_Draw_Two_Dot@Color,Draw_point@Color
  2353  00098E  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2354  000990  EC05  F005         	call	_Draw_point
  2355                           
  2356                           ;AP_C/AP_LCD.c: 133:         x+=delta_x;
  2357  000994  5028               	movf	LCD_Draw_Two_Dot@delta_x,w,c
  2358  000996  261F               	addwf	LCD_Draw_Two_Dot@x,f,c
  2359  000998  5029               	movf	LCD_Draw_Two_Dot@delta_x+1,w,c
  2360  00099A  2220               	addwfc	LCD_Draw_Two_Dot@x+1,f,c
  2361                           
  2362                           ;AP_C/AP_LCD.c: 134:         y+=delta_y;
  2363  00099C  502A               	movf	LCD_Draw_Two_Dot@delta_y,w,c
  2364  00099E  2621               	addwf	LCD_Draw_Two_Dot@y,f,c
  2365  0009A0  502B               	movf	LCD_Draw_Two_Dot@delta_y+1,w,c
  2366  0009A2  2222               	addwfc	LCD_Draw_Two_Dot@y+1,f,c
  2367                           
  2368                           ;AP_C/AP_LCD.c: 135:         if(x>distance)
  2369  0009A4  501F               	movf	LCD_Draw_Two_Dot@x,w,c
  2370  0009A6  5C25               	subwf	LCD_Draw_Two_Dot@distance,w,c
  2371  0009A8  5026               	movf	LCD_Draw_Two_Dot@distance+1,w,c
  2372  0009AA  0A80               	xorlw	128
  2373  0009AC  6E1A               	movwf	??_LCD_Draw_Two_Dot& (0+255),c
  2374  0009AE  5020               	movf	LCD_Draw_Two_Dot@x+1,w,c
  2375  0009B0  0A80               	xorlw	128
  2376  0009B2  581A               	subwfb	??_LCD_Draw_Two_Dot& (0+255),w,c
  2377  0009B4  B0D8               	btfsc	status,0,c
  2378  0009B6  D006               	goto	l65
  2379                           
  2380                           ;AP_C/AP_LCD.c: 136:         {;AP_C/AP_LCD.c: 137:             x-=distance;
  2381  0009B8  5025               	movf	LCD_Draw_Two_Dot@distance,w,c
  2382  0009BA  5E1F               	subwf	LCD_Draw_Two_Dot@x,f,c
  2383  0009BC  5026               	movf	LCD_Draw_Two_Dot@distance+1,w,c
  2384  0009BE  5A20               	subwfb	LCD_Draw_Two_Dot@x+1,f,c
  2385                           
  2386                           ;AP_C/AP_LCD.c: 138:             StartX+=incx;
  2387  0009C0  5023               	movf	LCD_Draw_Two_Dot@incx,w,c
  2388  0009C2  2627               	addwf	LCD_Draw_Two_Dot@StartX,f,c
  2389  0009C4                     l65:
  2390                           
  2391                           ;AP_C/AP_LCD.c: 140:         if(y>distance)
  2392  0009C4  5021               	movf	LCD_Draw_Two_Dot@y,w,c
  2393  0009C6  5C25               	subwf	LCD_Draw_Two_Dot@distance,w,c
  2394  0009C8  5026               	movf	LCD_Draw_Two_Dot@distance+1,w,c
  2395  0009CA  0A80               	xorlw	128
  2396  0009CC  6E1A               	movwf	??_LCD_Draw_Two_Dot& (0+255),c
  2397  0009CE  5022               	movf	LCD_Draw_Two_Dot@y+1,w,c
  2398  0009D0  0A80               	xorlw	128
  2399  0009D2  581A               	subwfb	??_LCD_Draw_Two_Dot& (0+255),w,c
  2400  0009D4  B0D8               	btfsc	status,0,c
  2401  0009D6  D006               	goto	l3133
  2402                           
  2403                           ;AP_C/AP_LCD.c: 141:         {;AP_C/AP_LCD.c: 142:             y-=distance;
  2404  0009D8  5025               	movf	LCD_Draw_Two_Dot@distance,w,c
  2405  0009DA  5E21               	subwf	LCD_Draw_Two_Dot@y,f,c
  2406  0009DC  5026               	movf	LCD_Draw_Two_Dot@distance+1,w,c
  2407  0009DE  5A22               	subwfb	LCD_Draw_Two_Dot@y+1,f,c
  2408                           
  2409                           ;AP_C/AP_LCD.c: 143:             StartY+=incy;
  2410  0009E0  5024               	movf	LCD_Draw_Two_Dot@incy,w,c
  2411  0009E2  2616               	addwf	LCD_Draw_Two_Dot@StartY,f,c
  2412  0009E4                     l3133:
  2413                           
  2414                           ;AP_C/AP_LCD.c: 145:     }
  2415  0009E4  4A1D               	infsnz	LCD_Draw_Two_Dot@t,f,c
  2416  0009E6  2A1E               	incf	LCD_Draw_Two_Dot@t+1,f,c
  2417  0009E8                     l3135:
  2418  0009E8  0E01               	movlw	1
  2419  0009EA  2425               	addwf	LCD_Draw_Two_Dot@distance,w,c
  2420  0009EC  6E1A               	movwf	??_LCD_Draw_Two_Dot& (0+255),c
  2421  0009EE  0E00               	movlw	0
  2422  0009F0  2026               	addwfc	LCD_Draw_Two_Dot@distance+1,w,c
  2423  0009F2  6E1B               	movwf	(??_LCD_Draw_Two_Dot+1)& (0+255),c
  2424  0009F4  501D               	movf	LCD_Draw_Two_Dot@t,w,c
  2425  0009F6  5C1A               	subwf	??_LCD_Draw_Two_Dot,w,c
  2426  0009F8  501B               	movf	??_LCD_Draw_Two_Dot+1,w,c
  2427  0009FA  0A80               	xorlw	128
  2428  0009FC  6E1C               	movwf	(??_LCD_Draw_Two_Dot+2)& (0+255),c
  2429  0009FE  501E               	movf	LCD_Draw_Two_Dot@t+1,w,c
  2430  000A00  0A80               	xorlw	128
  2431  000A02  581C               	subwfb	(??_LCD_Draw_Two_Dot+2)& (0+255),w,c
  2432  000A04  A0D8               	btfss	status,0,c
  2433  000A06  0012               	return	
  2434  000A08  D7BC               	goto	l3121
  2435  000A0A                     __end_of_LCD_Draw_Two_Dot:
  2436                           	opt callstack 0
  2437                           
  2438 ;; *************** function _v_Lcd12864DrawLineY_f *****************
  2439 ;; Defined at:
  2440 ;;		line 214 in file "USER_C/lcd.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  X               1    wreg     unsigned char 
  2443 ;;  Y0              1   16[COMRAM] unsigned char 
  2444 ;;  Y1              1   17[COMRAM] unsigned char 
  2445 ;;  Color           1   18[COMRAM] unsigned char 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  X               1   19[COMRAM] unsigned char 
  2448 ;;  Temp            1   20[COMRAM] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2458 ;;      Params:         3       0       0       0       0       0       0       0       0
  2459 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2461 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        5 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    7
  2465 ;; This function calls:
  2466 ;;		_Draw_point
  2467 ;; This function is called by:
  2468 ;;		_LCD_Draw_Two_Dot
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text17
  2473  000FBE                     __ptext17:
  2474                           	opt callstack 0
  2475  000FBE                     _v_Lcd12864DrawLineY_f:
  2476                           	opt callstack 22
  2477                           
  2478                           ;incstack = 0
  2479                           ;v_Lcd12864DrawLineY_f@X stored from wreg
  2480  000FBE  6E14               	movwf	v_Lcd12864DrawLineY_f@X,c
  2481                           
  2482                           ;USER_C/lcd.c: 214: void v_Lcd12864DrawLineY_f(unsigned char X,unsigned char Y0,unsigned
      +                           char Y1,unsigned char Color);USER_C/lcd.c: 215: {;USER_C/lcd.c: 216:     unsigned char 
      +                          Temp;;USER_C/lcd.c: 217:     if(Y0>Y1)
  2483  000FC0  5011               	movf	v_Lcd12864DrawLineY_f@Y0,w,c
  2484  000FC2  5C12               	subwf	v_Lcd12864DrawLineY_f@Y1,w,c
  2485  000FC4  B0D8               	btfsc	status,0,c
  2486  000FC6  D014               	goto	l3025
  2487                           
  2488                           ;USER_C/lcd.c: 218:     {;USER_C/lcd.c: 219:         Temp=Y1;
  2489  000FC8  0060  F048  F015   	movff	v_Lcd12864DrawLineY_f@Y1,v_Lcd12864DrawLineY_f@Temp
  2490                           
  2491                           ;USER_C/lcd.c: 220:         Y1=Y0;
  2492  000FCE  0060  F044  F012   	movff	v_Lcd12864DrawLineY_f@Y0,v_Lcd12864DrawLineY_f@Y1
  2493                           
  2494                           ;USER_C/lcd.c: 221:         Y0=Temp;
  2495  000FD4  0060  F054  F011   	movff	v_Lcd12864DrawLineY_f@Temp,v_Lcd12864DrawLineY_f@Y0
  2496  000FDA  D00A               	goto	l3025
  2497  000FDC                     l3021:
  2498                           
  2499                           ;USER_C/lcd.c: 224:     Draw_point(X,Y0,Color);
  2500  000FDC  0060  F044  F007   	movff	v_Lcd12864DrawLineY_f@Y0,Draw_point@Y
  2501  000FE2  0060  F04C  F008   	movff	v_Lcd12864DrawLineY_f@Color,Draw_point@Color
  2502  000FE8  5014               	movf	v_Lcd12864DrawLineY_f@X,w,c
  2503  000FEA  EC05  F005         	call	_Draw_point
  2504  000FEE  2A11               	incf	v_Lcd12864DrawLineY_f@Y0,f,c
  2505  000FF0                     l3025:
  2506  000FF0  5011               	movf	v_Lcd12864DrawLineY_f@Y0,w,c
  2507  000FF2  5C12               	subwf	v_Lcd12864DrawLineY_f@Y1,w,c
  2508  000FF4  A0D8               	btfss	status,0,c
  2509  000FF6  0012               	return	
  2510  000FF8  D7F1               	goto	l3021
  2511  000FFA                     __end_of_v_Lcd12864DrawLineY_f:
  2512                           	opt callstack 0
  2513                           
  2514 ;; *************** function _v_Lcd12864DrawLineX_f *****************
  2515 ;; Defined at:
  2516 ;;		line 202 in file "USER_C/lcd.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  X0              1    wreg     unsigned char 
  2519 ;;  X1              1   16[COMRAM] unsigned char 
  2520 ;;  Y               1   17[COMRAM] unsigned char 
  2521 ;;  Color           1   18[COMRAM] unsigned char 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  X0              1   20[COMRAM] unsigned char 
  2524 ;;  Temp            1   19[COMRAM] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2534 ;;      Params:         3       0       0       0       0       0       0       0       0
  2535 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2537 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2538 ;;Total ram usage:        5 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    7
  2541 ;; This function calls:
  2542 ;;		_Draw_point
  2543 ;; This function is called by:
  2544 ;;		_LCD_Draw_Two_Dot
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text18
  2549  000FFA                     __ptext18:
  2550                           	opt callstack 0
  2551  000FFA                     _v_Lcd12864DrawLineX_f:
  2552                           	opt callstack 22
  2553                           
  2554                           ;incstack = 0
  2555                           ;v_Lcd12864DrawLineX_f@X0 stored from wreg
  2556  000FFA  6E15               	movwf	v_Lcd12864DrawLineX_f@X0,c
  2557                           
  2558                           ;USER_C/lcd.c: 202: void v_Lcd12864DrawLineX_f(unsigned char X0,unsigned char X1,unsigne
      +                          d char Y,unsigned char Color);USER_C/lcd.c: 203: {;USER_C/lcd.c: 204:     unsigned char 
      +                          Temp;;USER_C/lcd.c: 205:     if(X0>X1)
  2559  000FFC  5015               	movf	v_Lcd12864DrawLineX_f@X0,w,c
  2560  000FFE  5C11               	subwf	v_Lcd12864DrawLineX_f@X1,w,c
  2561  001000  B0D8               	btfsc	status,0,c
  2562  001002  D014               	goto	l3037
  2563                           
  2564                           ;USER_C/lcd.c: 206:     {;USER_C/lcd.c: 207:         Temp=X1;
  2565  001004  0060  F044  F014   	movff	v_Lcd12864DrawLineX_f@X1,v_Lcd12864DrawLineX_f@Temp
  2566                           
  2567                           ;USER_C/lcd.c: 208:         X1=X0;
  2568  00100A  0060  F054  F011   	movff	v_Lcd12864DrawLineX_f@X0,v_Lcd12864DrawLineX_f@X1
  2569                           
  2570                           ;USER_C/lcd.c: 209:         X0=Temp;
  2571  001010  0060  F050  F015   	movff	v_Lcd12864DrawLineX_f@Temp,v_Lcd12864DrawLineX_f@X0
  2572  001016  D00A               	goto	l3037
  2573  001018                     l3033:
  2574                           
  2575                           ;USER_C/lcd.c: 212:     Draw_point(X0,Y,Color);
  2576  001018  0060  F048  F007   	movff	v_Lcd12864DrawLineX_f@Y,Draw_point@Y
  2577  00101E  0060  F04C  F008   	movff	v_Lcd12864DrawLineX_f@Color,Draw_point@Color
  2578  001024  5015               	movf	v_Lcd12864DrawLineX_f@X0,w,c
  2579  001026  EC05  F005         	call	_Draw_point
  2580  00102A  2A15               	incf	v_Lcd12864DrawLineX_f@X0,f,c
  2581  00102C                     l3037:
  2582  00102C  5015               	movf	v_Lcd12864DrawLineX_f@X0,w,c
  2583  00102E  5C11               	subwf	v_Lcd12864DrawLineX_f@X1,w,c
  2584  001030  A0D8               	btfss	status,0,c
  2585  001032  0012               	return	
  2586  001034  D7F1               	goto	l3033
  2587  001036                     __end_of_v_Lcd12864DrawLineX_f:
  2588                           	opt callstack 0
  2589                           
  2590 ;; *************** function _Draw_point *****************
  2591 ;; Defined at:
  2592 ;;		line 154 in file "USER_C/lcd.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  X               1    wreg     unsigned char 
  2595 ;;  Y               1    6[COMRAM] unsigned char 
  2596 ;;  Color           1    7[COMRAM] unsigned char 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  X               1   10[COMRAM] unsigned char 
  2599 ;;  Tier_bit        1   15[COMRAM] unsigned char 
  2600 ;;  ReadOldL        1   14[COMRAM] unsigned char 
  2601 ;;  ReadOldH        1   13[COMRAM] unsigned char 
  2602 ;;  Tier            1   12[COMRAM] unsigned char 
  2603 ;;  Row             1   11[COMRAM] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2613 ;;      Params:         2       0       0       0       0       0       0       0       0
  2614 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2615 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2616 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2617 ;;Total ram usage:       10 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    6
  2620 ;; This function calls:
  2621 ;;		_LCD_read_arm
  2622 ;;		_sendCom
  2623 ;;		_sendDat
  2624 ;; This function is called by:
  2625 ;;		_LCD_Draw_Two_Dot
  2626 ;;		_v_Lcd12864DrawLineX_f
  2627 ;;		_v_Lcd12864DrawLineY_f
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text19
  2632  000A0A                     __ptext19:
  2633                           	opt callstack 0
  2634  000A0A                     _Draw_point:
  2635                           	opt callstack 22
  2636                           
  2637                           ;incstack = 0
  2638                           ;Draw_point@X stored from wreg
  2639  000A0A  6E0B               	movwf	Draw_point@X,c
  2640                           
  2641                           ;USER_C/lcd.c: 154: void Draw_point(unsigned char X,unsigned char Y,unsigned char Color)
      +                          ;USER_C/lcd.c: 155: {;USER_C/lcd.c: 156:     unsigned char Row, Tier, Tier_bit;;USER_C/l
      +                          cd.c: 157:     unsigned char ReadOldH, ReadOldL;;USER_C/lcd.c: 158:     sendCom(0x34);
  2642  000A0C  0E34               	movlw	52
  2643  000A0E  EC84  F008         	call	_sendCom
  2644                           
  2645                           ;USER_C/lcd.c: 159:     sendCom(0x36);
  2646  000A12  0E36               	movlw	54
  2647  000A14  EC84  F008         	call	_sendCom
  2648                           
  2649                           ;USER_C/lcd.c: 160:     Tier=X>>4;
  2650  000A18  380B               	swapf	Draw_point@X,w,c
  2651  000A1A  0B0F               	andlw	15
  2652  000A1C  6E0D               	movwf	Draw_point@Tier,c
  2653                           
  2654                           ;USER_C/lcd.c: 161:     Tier_bit=X&0x0f;
  2655  000A1E  500B               	movf	Draw_point@X,w,c
  2656  000A20  0B0F               	andlw	15
  2657  000A22  6E10               	movwf	Draw_point@Tier_bit,c
  2658                           
  2659                           ;USER_C/lcd.c: 163:     if(Y<32) { Row=Y; }
  2660  000A24  0E20               	movlw	32
  2661  000A26  6007               	cpfslt	Draw_point@Y,c
  2662  000A28  D004               	goto	l2959
  2663  000A2A  0060  F01C  F00C   	movff	Draw_point@Y,Draw_point@Row
  2664  000A30  D005               	goto	l2961
  2665  000A32                     l2959:
  2666  000A32  5007               	movf	Draw_point@Y,w,c
  2667  000A34  0FE0               	addlw	224
  2668  000A36  6E0C               	movwf	Draw_point@Row,c
  2669  000A38  0E08               	movlw	8
  2670  000A3A  260D               	addwf	Draw_point@Tier,f,c
  2671  000A3C                     l2961:
  2672                           
  2673                           ;USER_C/lcd.c: 166:     sendCom(Row+0x80);
  2674  000A3C  500C               	movf	Draw_point@Row,w,c
  2675  000A3E  0F80               	addlw	128
  2676  000A40  EC84  F008         	call	_sendCom
  2677                           
  2678                           ;USER_C/lcd.c: 167:     sendCom(Tier+0x80);
  2679  000A44  500D               	movf	Draw_point@Tier,w,c
  2680  000A46  0F80               	addlw	128
  2681  000A48  EC84  F008         	call	_sendCom
  2682                           
  2683                           ;USER_C/lcd.c: 169:     LCD_read_arm();
  2684  000A4C  EC37  F008         	call	_LCD_read_arm	;wreg free
  2685                           
  2686                           ;USER_C/lcd.c: 170:     ReadOldH=LCD_read_arm();
  2687  000A50  EC37  F008         	call	_LCD_read_arm	;wreg free
  2688  000A54  6E0E               	movwf	Draw_point@ReadOldH,c
  2689                           
  2690                           ;USER_C/lcd.c: 171:     ReadOldL=LCD_read_arm();
  2691  000A56  EC37  F008         	call	_LCD_read_arm	;wreg free
  2692  000A5A  6E0F               	movwf	Draw_point@ReadOldL,c
  2693                           
  2694                           ;USER_C/lcd.c: 173:     sendCom(Row+0x80);
  2695  000A5C  500C               	movf	Draw_point@Row,w,c
  2696  000A5E  0F80               	addlw	128
  2697  000A60  EC84  F008         	call	_sendCom
  2698                           
  2699                           ;USER_C/lcd.c: 174:     sendCom(Tier+0x80);
  2700  000A64  500D               	movf	Draw_point@Tier,w,c
  2701  000A66  0F80               	addlw	128
  2702  000A68  EC84  F008         	call	_sendCom
  2703                           
  2704                           ;USER_C/lcd.c: 175:     if(Tier_bit<8 )
  2705  000A6C  0E08               	movlw	8
  2706  000A6E  6010               	cpfslt	Draw_point@Tier_bit,c
  2707  000A70  D06F               	goto	l2999
  2708  000A72  D02B               	goto	l2987
  2709  000A74                     l2979:
  2710  000A74  5010               	movf	Draw_point@Tier_bit,w,c
  2711  000A76  0807               	sublw	7
  2712  000A78  6E09               	movwf	??_Draw_point& (0+255),c
  2713  000A7A  0E01               	movlw	1
  2714  000A7C  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2715  000A7E  2A09               	incf	??_Draw_point,f,c
  2716  000A80  D002               	goto	u1024
  2717  000A82                     u1025:
  2718  000A82  90D8               	bcf	status,0,c
  2719  000A84  360A               	rlcf	??_Draw_point+1,f,c
  2720  000A86                     u1024:
  2721  000A86  2E09               	decfsz	??_Draw_point,f,c
  2722  000A88  D7FC               	goto	u1025
  2723  000A8A  500A               	movf	??_Draw_point+1,w,c
  2724  000A8C  0AFF               	xorlw	255
  2725  000A8E  160E               	andwf	Draw_point@ReadOldH,f,c
  2726  000A90  D02D               	goto	l2989
  2727  000A92                     l2981:
  2728  000A92  5010               	movf	Draw_point@Tier_bit,w,c
  2729  000A94  0807               	sublw	7
  2730  000A96  6E09               	movwf	??_Draw_point& (0+255),c
  2731  000A98  0E01               	movlw	1
  2732  000A9A  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2733  000A9C  2A09               	incf	??_Draw_point,f,c
  2734  000A9E  D002               	goto	u1034
  2735  000AA0                     u1035:
  2736  000AA0  90D8               	bcf	status,0,c
  2737  000AA2  360A               	rlcf	??_Draw_point+1,f,c
  2738  000AA4                     u1034:
  2739  000AA4  2E09               	decfsz	??_Draw_point,f,c
  2740  000AA6  D7FC               	goto	u1035
  2741  000AA8  500A               	movf	??_Draw_point+1,w,c
  2742  000AAA  120E               	iorwf	Draw_point@ReadOldH,f,c
  2743  000AAC  D01F               	goto	l2989
  2744  000AAE                     l2983:
  2745  000AAE  5010               	movf	Draw_point@Tier_bit,w,c
  2746  000AB0  0807               	sublw	7
  2747  000AB2  6E09               	movwf	??_Draw_point& (0+255),c
  2748  000AB4  0E01               	movlw	1
  2749  000AB6  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2750  000AB8  2A09               	incf	??_Draw_point,f,c
  2751  000ABA  D002               	goto	u1044
  2752  000ABC                     u1045:
  2753  000ABC  90D8               	bcf	status,0,c
  2754  000ABE  360A               	rlcf	??_Draw_point+1,f,c
  2755  000AC0                     u1044:
  2756  000AC0  2E09               	decfsz	??_Draw_point,f,c
  2757  000AC2  D7FC               	goto	u1045
  2758  000AC4  500A               	movf	??_Draw_point+1,w,c
  2759  000AC6  1A0E               	xorwf	Draw_point@ReadOldH,f,c
  2760  000AC8  D011               	goto	l2989
  2761  000ACA                     l2987:
  2762  000ACA  5008               	movf	Draw_point@Color,w,c
  2763  000ACC  6E09               	movwf	??_Draw_point& (0+255),c
  2764  000ACE  6A0A               	clrf	(??_Draw_point+1)& (0+255),c
  2765                           
  2766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2767                           ; Switch size 1, requested type "simple"
  2768                           ; Number of cases is 1, Range of values is 0 to 0
  2769                           ; switch strategies available:
  2770                           ; Name         Instructions Cycles
  2771                           ; simple_byte            4     3 (average)
  2772                           ;	Chosen strategy is simple_byte
  2773  000AD0  500A               	movf	??_Draw_point+1,w,c
  2774  000AD2  0A00               	xorlw	0	; case 0
  2775  000AD4  A4D8               	btfss	status,2,c
  2776  000AD6  D00A               	goto	l2989
  2777                           
  2778                           ; Switch size 1, requested type "simple"
  2779                           ; Number of cases is 3, Range of values is 0 to 2
  2780                           ; switch strategies available:
  2781                           ; Name         Instructions Cycles
  2782                           ; simple_byte           10     6 (average)
  2783                           ;	Chosen strategy is simple_byte
  2784  000AD8  5009               	movf	??_Draw_point,w,c
  2785  000ADA  0A00               	xorlw	0	; case 0
  2786  000ADC  B4D8               	btfsc	status,2,c
  2787  000ADE  D7CA               	goto	l2979
  2788  000AE0  0A01               	xorlw	1	; case 1
  2789  000AE2  B4D8               	btfsc	status,2,c
  2790  000AE4  D7D6               	goto	l2981
  2791  000AE6  0A03               	xorlw	3	; case 2
  2792  000AE8  B4D8               	btfsc	status,2,c
  2793  000AEA  D7E1               	goto	l2983
  2794  000AEC                     l2989:
  2795                           
  2796                           ;USER_C/lcd.c: 184:         sendDat(ReadOldH);
  2797  000AEC  500E               	movf	Draw_point@ReadOldH,w,c
  2798  000AEE  EC11  F007         	call	_sendDat
  2799                           
  2800                           ;USER_C/lcd.c: 185:         sendDat(ReadOldL);
  2801  000AF2  500F               	movf	Draw_point@ReadOldL,w,c
  2802  000AF4  EC11  F007         	call	_sendDat
  2803                           
  2804                           ;USER_C/lcd.c: 186:     }
  2805  000AF8  D042               	goto	l864
  2806  000AFA                     l2991:
  2807  000AFA  5010               	movf	Draw_point@Tier_bit,w,c
  2808  000AFC  080F               	sublw	15
  2809  000AFE  6E09               	movwf	??_Draw_point& (0+255),c
  2810  000B00  0E01               	movlw	1
  2811  000B02  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2812  000B04  2A09               	incf	??_Draw_point,f,c
  2813  000B06  D002               	goto	u1054
  2814  000B08                     u1055:
  2815  000B08  90D8               	bcf	status,0,c
  2816  000B0A  360A               	rlcf	??_Draw_point+1,f,c
  2817  000B0C                     u1054:
  2818  000B0C  2E09               	decfsz	??_Draw_point,f,c
  2819  000B0E  D7FC               	goto	u1055
  2820  000B10  500A               	movf	??_Draw_point+1,w,c
  2821  000B12  0AFF               	xorlw	255
  2822  000B14  160F               	andwf	Draw_point@ReadOldL,f,c
  2823  000B16  D02D               	goto	l3001
  2824  000B18                     l2993:
  2825  000B18  5010               	movf	Draw_point@Tier_bit,w,c
  2826  000B1A  080F               	sublw	15
  2827  000B1C  6E09               	movwf	??_Draw_point& (0+255),c
  2828  000B1E  0E01               	movlw	1
  2829  000B20  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2830  000B22  2A09               	incf	??_Draw_point,f,c
  2831  000B24  D002               	goto	u1064
  2832  000B26                     u1065:
  2833  000B26  90D8               	bcf	status,0,c
  2834  000B28  360A               	rlcf	??_Draw_point+1,f,c
  2835  000B2A                     u1064:
  2836  000B2A  2E09               	decfsz	??_Draw_point,f,c
  2837  000B2C  D7FC               	goto	u1065
  2838  000B2E  500A               	movf	??_Draw_point+1,w,c
  2839  000B30  120F               	iorwf	Draw_point@ReadOldL,f,c
  2840  000B32  D01F               	goto	l3001
  2841  000B34                     l2995:
  2842  000B34  5010               	movf	Draw_point@Tier_bit,w,c
  2843  000B36  080F               	sublw	15
  2844  000B38  6E09               	movwf	??_Draw_point& (0+255),c
  2845  000B3A  0E01               	movlw	1
  2846  000B3C  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2847  000B3E  2A09               	incf	??_Draw_point,f,c
  2848  000B40  D002               	goto	u1074
  2849  000B42                     u1075:
  2850  000B42  90D8               	bcf	status,0,c
  2851  000B44  360A               	rlcf	??_Draw_point+1,f,c
  2852  000B46                     u1074:
  2853  000B46  2E09               	decfsz	??_Draw_point,f,c
  2854  000B48  D7FC               	goto	u1075
  2855  000B4A  500A               	movf	??_Draw_point+1,w,c
  2856  000B4C  1A0F               	xorwf	Draw_point@ReadOldL,f,c
  2857  000B4E  D011               	goto	l3001
  2858  000B50                     l2999:
  2859  000B50  5008               	movf	Draw_point@Color,w,c
  2860  000B52  6E09               	movwf	??_Draw_point& (0+255),c
  2861  000B54  6A0A               	clrf	(??_Draw_point+1)& (0+255),c
  2862                           
  2863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2864                           ; Switch size 1, requested type "simple"
  2865                           ; Number of cases is 1, Range of values is 0 to 0
  2866                           ; switch strategies available:
  2867                           ; Name         Instructions Cycles
  2868                           ; simple_byte            4     3 (average)
  2869                           ;	Chosen strategy is simple_byte
  2870  000B56  500A               	movf	??_Draw_point+1,w,c
  2871  000B58  0A00               	xorlw	0	; case 0
  2872  000B5A  A4D8               	btfss	status,2,c
  2873  000B5C  D00A               	goto	l3001
  2874                           
  2875                           ; Switch size 1, requested type "simple"
  2876                           ; Number of cases is 3, Range of values is 0 to 2
  2877                           ; switch strategies available:
  2878                           ; Name         Instructions Cycles
  2879                           ; simple_byte           10     6 (average)
  2880                           ;	Chosen strategy is simple_byte
  2881  000B5E  5009               	movf	??_Draw_point,w,c
  2882  000B60  0A00               	xorlw	0	; case 0
  2883  000B62  B4D8               	btfsc	status,2,c
  2884  000B64  D7CA               	goto	l2991
  2885  000B66  0A01               	xorlw	1	; case 1
  2886  000B68  B4D8               	btfsc	status,2,c
  2887  000B6A  D7D6               	goto	l2993
  2888  000B6C  0A03               	xorlw	3	; case 2
  2889  000B6E  B4D8               	btfsc	status,2,c
  2890  000B70  D7E1               	goto	l2995
  2891  000B72                     l3001:
  2892                           
  2893                           ;USER_C/lcd.c: 196:         sendDat(ReadOldH);
  2894  000B72  500E               	movf	Draw_point@ReadOldH,w,c
  2895  000B74  EC11  F007         	call	_sendDat
  2896                           
  2897                           ;USER_C/lcd.c: 197:         sendDat(ReadOldL);
  2898  000B78  500F               	movf	Draw_point@ReadOldL,w,c
  2899  000B7A  EC11  F007         	call	_sendDat
  2900  000B7E                     l864:
  2901                           
  2902                           ;USER_C/lcd.c: 199:     sendCom(0x30);
  2903  000B7E  0E30               	movlw	48
  2904  000B80  EC84  F008         	call	_sendCom
  2905  000B84  0012               	return		;funcret
  2906  000B86                     __end_of_Draw_point:
  2907                           	opt callstack 0
  2908                           
  2909 ;; *************** function _LCD_read_arm *****************
  2910 ;; Defined at:
  2911 ;;		line 141 in file "USER_C/lcd.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  a3              1    5[COMRAM] unsigned char 
  2916 ;;  a2              1    4[COMRAM] unsigned char 
  2917 ;;  a1              1    3[COMRAM] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      unsigned char 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0
  2928 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2929 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2930 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2931 ;;Total ram usage:        4 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    5
  2934 ;; This function calls:
  2935 ;;		_Readspi
  2936 ;;		_Spi8b
  2937 ;; This function is called by:
  2938 ;;		_Draw_point
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text20
  2943  00106E                     __ptext20:
  2944                           	opt callstack 0
  2945  00106E                     _LCD_read_arm:
  2946                           	opt callstack 22
  2947                           
  2948                           ;USER_C/lcd.c: 144:     unsigned char a2=0x00;
  2949                           
  2950                           ;incstack = 0
  2951  00106E  0E00               	movlw	0
  2952  001070  6E05               	movwf	LCD_read_arm@a2,c
  2953                           
  2954                           ;USER_C/lcd.c: 145:     unsigned char a3=0x00;
  2955  001072  0E00               	movlw	0
  2956  001074  6E06               	movwf	LCD_read_arm@a3,c
  2957  001076  8ABA               	bsf	16314,5,c	;volatile
  2958                           
  2959                           ;USER_C/lcd.c: 147:     Spi8b(0xfe);
  2960  001078  0EFE               	movlw	254
  2961  00107A  EC1B  F008         	call	_Spi8b
  2962                           
  2963                           ;USER_C/lcd.c: 148:     a1=Readspi();
  2964  00107E  EC5C  F007         	call	_Readspi	;wreg free
  2965  001082  6E04               	movwf	LCD_read_arm@a1,c
  2966                           
  2967                           ;USER_C/lcd.c: 149:     a2=Readspi();
  2968  001084  EC5C  F007         	call	_Readspi	;wreg free
  2969  001088  6E05               	movwf	LCD_read_arm@a2,c
  2970                           
  2971                           ;USER_C/lcd.c: 151:     a3=(a1&0xf0)|(a2>>4);
  2972  00108A  0060  F014  F003   	movff	LCD_read_arm@a2,??_LCD_read_arm
  2973  001090  3A03               	swapf	??_LCD_read_arm,f,c
  2974  001092  0E0F               	movlw	15
  2975  001094  1603               	andwf	??_LCD_read_arm,f,c
  2976  001096  5004               	movf	LCD_read_arm@a1,w,c
  2977  001098  0BF0               	andlw	240
  2978  00109A  1003               	iorwf	??_LCD_read_arm,w,c
  2979  00109C  6E06               	movwf	LCD_read_arm@a3,c
  2980                           
  2981                           ;USER_C/lcd.c: 152:     return (a3);
  2982  00109E  5006               	movf	LCD_read_arm@a3,w,c
  2983  0010A0  0012               	return		;funcret
  2984  0010A2                     __end_of_LCD_read_arm:
  2985                           	opt callstack 0
  2986                           
  2987 ;; *************** function _Readspi *****************
  2988 ;; Defined at:
  2989 ;;		line 110 in file "USER_C/lcd.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  dat             1    1[COMRAM] unsigned char 
  2994 ;;  i               1    0[COMRAM] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      unsigned char 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        2 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    4
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_LCD_read_arm
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text21
  3019  000EB8                     __ptext21:
  3020                           	opt callstack 0
  3021  000EB8                     _Readspi:
  3022                           	opt callstack 22
  3023                           
  3024                           ;USER_C/lcd.c: 112:     char i = 0;
  3025                           
  3026                           ;incstack = 0
  3027  000EB8  0E00               	movlw	0
  3028  000EBA  6E01               	movwf	Readspi@i,c
  3029                           
  3030                           ;USER_C/lcd.c: 113:     unsigned char dat=0x00;
  3031  000EBC  0E00               	movlw	0
  3032  000EBE  6E02               	movwf	Readspi@dat,c
  3033                           
  3034                           ;USER_C/lcd.c: 115:     for (i = 0; i < 8; i++) {
  3035  000EC0  0E00               	movlw	0
  3036  000EC2  6E01               	movwf	Readspi@i,c
  3037  000EC4                     l831:
  3038  000EC4  88C4               	bsf	16324,4,c	;volatile
  3039                           
  3040                           ;USER_C/lcd.c: 119:         do { LATCbits.LATC4 = 1; } while(0);
  3041  000EC6  88BC               	bsf	16316,4,c	;volatile
  3042                           
  3043                           ;USER_C/lcd.c: 121:         do { LATCbits.LATC3 = 1; } while(0);
  3044  000EC8  86BC               	bsf	16316,3,c	;volatile
  3045                           
  3046                           ;USER_C/lcd.c: 122:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3047  000ECA  0EA6               	movlw	166
  3048  000ECC                     u1317:
  3049  000ECC  2EE8               	decfsz	wreg,f,c
  3050  000ECE  D7FE               	bra	u1317
  3051  000ED0  D000               	nop2	
  3052  000ED2  96BC               	bcf	16316,3,c	;volatile
  3053                           
  3054                           ;USER_C/lcd.c: 124:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3055  000ED4  0EA6               	movlw	166
  3056  000ED6                     u1327:
  3057  000ED6  2EE8               	decfsz	wreg,f,c
  3058  000ED8  D7FE               	bra	u1327
  3059  000EDA  D000               	nop2	
  3060                           
  3061                           ;USER_C/lcd.c: 125:         if(PORTCbits.RC4==1 )
  3062  000EDC  A8CC               	btfss	16332,4,c	;volatile
  3063  000EDE  D005               	goto	l843
  3064                           
  3065                           ;USER_C/lcd.c: 126:         {;USER_C/lcd.c: 127:             dat=dat|0x01;
  3066  000EE0  5002               	movf	Readspi@dat,w,c
  3067  000EE2  0901               	iorlw	1
  3068  000EE4  6E02               	movwf	Readspi@dat,c
  3069  000EE6  9EBB               	bcf	16315,7,c	;volatile
  3070  000EE8  D001               	goto	l1781
  3071  000EEA                     l843:
  3072  000EEA  8EBB               	bsf	16315,7,c	;volatile
  3073  000EEC                     l1781:
  3074                           
  3075                           ;USER_C/lcd.c: 136:         dat = dat << 1;
  3076  000EEC  5002               	movf	Readspi@dat,w,c
  3077  000EEE  2402               	addwf	Readspi@dat,w,c
  3078  000EF0  6E02               	movwf	Readspi@dat,c
  3079                           
  3080                           ;USER_C/lcd.c: 137:     }
  3081  000EF2  2A01               	incf	Readspi@i,f,c
  3082  000EF4  0E07               	movlw	7
  3083  000EF6  6401               	cpfsgt	Readspi@i,c
  3084  000EF8  D7E5               	goto	l831
  3085                           
  3086                           ;USER_C/lcd.c: 138:     do { TRISCbits.TRISC4 = 0; } while(0);
  3087  000EFA  98C4               	bcf	16324,4,c	;volatile
  3088                           
  3089                           ;USER_C/lcd.c: 139:     return (dat);
  3090  000EFC  5002               	movf	Readspi@dat,w,c
  3091  000EFE  0012               	return		;funcret
  3092  000F00                     __end_of_Readspi:
  3093                           	opt callstack 0
  3094                           
  3095 ;; *************** function _abs *****************
  3096 ;; Defined at:
  3097 ;;		line 1 in file "D:\XC8\pic\sources\c99\common\abs.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  a               2    0[COMRAM] int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2    0[COMRAM] int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3111 ;;      Params:         2       0       0       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3113 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3114 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3115 ;;Total ram usage:        4 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    4
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_LCD_Draw_Two_Dot
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text22
  3126  000F80                     __ptext22:
  3127                           	opt callstack 0
  3128  000F80                     _abs:
  3129                           	opt callstack 25
  3130                           
  3131                           ;incstack = 0
  3132  000F80  BE02               	btfsc	abs@a+1,7,c
  3133  000F82  D005               	goto	u1120
  3134  000F84  5002               	movf	abs@a+1,w,c
  3135  000F86  E114               	bnz	l1608
  3136  000F88  0401               	decf	abs@a,w,c
  3137  000F8A  B0D8               	btfsc	status,0,c
  3138  000F8C  D011               	goto	l1608
  3139  000F8E                     u1120:
  3140  000F8E  0060  F004  F003   	movff	abs@a,??_abs
  3141  000F94  0060  F008  F004   	movff	abs@a+1,??_abs+1
  3142  000F9A  1E03               	comf	??_abs,f,c
  3143  000F9C  1E04               	comf	??_abs+1,f,c
  3144  000F9E  4A03               	infsnz	??_abs,f,c
  3145  000FA0  2A04               	incf	??_abs+1,f,c
  3146  000FA2  0060  F00C  F001   	movff	??_abs,?_abs
  3147  000FA8  0060  F010  F002   	movff	??_abs+1,?_abs+1
  3148  000FAE  0012               	return	
  3149  000FB0                     l1608:
  3150  000FB0  0060  F004  F001   	movff	abs@a,?_abs
  3151  000FB6  0060  F008  F002   	movff	abs@a+1,?_abs+1
  3152  000FBC  0012               	return		;funcret
  3153  000FBE                     __end_of_abs:
  3154                           	opt callstack 0
  3155                           
  3156 ;; *************** function _LCDInit *****************
  3157 ;; Defined at:
  3158 ;;		line 12 in file "USER_C/lcd.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3174 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3175 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        1 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    6
  3179 ;; This function calls:
  3180 ;;		_sendCom
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text23
  3187  000DCE                     __ptext23:
  3188                           	opt callstack 0
  3189  000DCE                     _LCDInit:
  3190                           	opt callstack 24
  3191                           
  3192                           ;incstack = 0
  3193                           ;USER_C/lcd.c: 13:     do { LATBbits.LATB5 = 0; } while(0);
  3194  000DCE  9ABB               	bcf	16315,5,c	;volatile
  3195                           
  3196                           ;USER_C/lcd.c: 14:     _delay((unsigned long)((10)*(1000000/4000.0)));
  3197  000DD0  0E04               	movlw	4
  3198  000DD2  6E07               	movwf	??_LCDInit& (0+255),c
  3199  000DD4  0E3E               	movlw	62
  3200  000DD6                     u1337:
  3201  000DD6  2EE8               	decfsz	wreg,f,c
  3202  000DD8  D7FE               	bra	u1337
  3203  000DDA  2E07               	decfsz	??_LCDInit& (0+255),f,c
  3204  000DDC  D7FC               	bra	u1337
  3205  000DDE  8ABB               	bsf	16315,5,c	;volatile
  3206                           
  3207                           ;USER_C/lcd.c: 16:     _delay((unsigned long)((100)*(1000000/4000.0)));
  3208  000DE0  0E21               	movlw	33
  3209  000DE2  6E07               	movwf	??_LCDInit& (0+255),c
  3210  000DE4  0E76               	movlw	118
  3211  000DE6                     u1347:
  3212  000DE6  2EE8               	decfsz	wreg,f,c
  3213  000DE8  D7FE               	bra	u1347
  3214  000DEA  2E07               	decfsz	??_LCDInit& (0+255),f,c
  3215  000DEC  D7FC               	bra	u1347
  3216  000DEE  D000               	nop2	
  3217  000DF0  8ABA               	bsf	16314,5,c	;volatile
  3218  000DF2  98BC               	bcf	16316,4,c	;volatile
  3219  000DF4  96BC               	bcf	16316,3,c	;volatile
  3220                           
  3221                           ;USER_C/lcd.c: 20:     sendCom(0x30);
  3222  000DF6  0E30               	movlw	48
  3223  000DF8  EC84  F008         	call	_sendCom
  3224                           
  3225                           ;USER_C/lcd.c: 21:     sendCom(0x0c);
  3226  000DFC  0E0C               	movlw	12
  3227  000DFE  EC84  F008         	call	_sendCom
  3228                           
  3229                           ;USER_C/lcd.c: 24:     sendCom(0x01);
  3230  000E02  0E01               	movlw	1
  3231  000E04  EC84  F008         	call	_sendCom
  3232                           
  3233                           ;USER_C/lcd.c: 26:     sendCom(0x02);
  3234  000E08  0E02               	movlw	2
  3235  000E0A  EC84  F008         	call	_sendCom
  3236                           
  3237                           ;USER_C/lcd.c: 27:     sendCom(0x06);
  3238  000E0E  0E06               	movlw	6
  3239  000E10  EC84  F008         	call	_sendCom
  3240                           
  3241                           ;USER_C/lcd.c: 28:     sendCom(0x0c);
  3242  000E14  0E0C               	movlw	12
  3243  000E16  EC84  F008         	call	_sendCom
  3244                           
  3245                           ;USER_C/lcd.c: 29:     sendCom(0x14);
  3246  000E1A  0E14               	movlw	20
  3247  000E1C  EC84  F008         	call	_sendCom
  3248  000E20  0012               	return		;funcret
  3249  000E22                     __end_of_LCDInit:
  3250                           	opt callstack 0
  3251                           
  3252 ;; *************** function _GRam_Clear *****************
  3253 ;; Defined at:
  3254 ;;		line 179 in file "AP_C/AP_LCD.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  a               1    7[COMRAM] unsigned char 
  3259 ;;  b               1    6[COMRAM] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        2 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    6
  3276 ;; This function calls:
  3277 ;;		_sendCom
  3278 ;;		_sendDat
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text24
  3285  000E6E                     __ptext24:
  3286                           	opt callstack 0
  3287  000E6E                     _GRam_Clear:
  3288                           	opt callstack 24
  3289                           
  3290                           ;incstack = 0
  3291  000E6E  0E00               	movlw	0
  3292  000E70  6E07               	movwf	GRam_Clear@b,c
  3293                           
  3294                           ;AP_C/AP_LCD.c: 182:     sendCom(0x34);
  3295  000E72  0E34               	movlw	52
  3296  000E74  EC84  F008         	call	_sendCom
  3297                           
  3298                           ;AP_C/AP_LCD.c: 183:     for(a=0;a<1;a++)
  3299  000E78  0E00               	movlw	0
  3300  000E7A  6E08               	movwf	GRam_Clear@a,c
  3301  000E7C                     l2071:
  3302                           
  3303                           ;AP_C/AP_LCD.c: 184:     {;AP_C/AP_LCD.c: 185:         if(a==0)
  3304  000E7C  5008               	movf	GRam_Clear@a,w,c
  3305  000E7E  A4D8               	btfss	status,2,c
  3306  000E80  D004               	goto	l2075
  3307                           
  3308                           ;AP_C/AP_LCD.c: 186:         {;AP_C/AP_LCD.c: 187:             sendCom(0x80);
  3309  000E82  0E80               	movlw	128
  3310  000E84  EC84  F008         	call	_sendCom
  3311                           
  3312                           ;AP_C/AP_LCD.c: 188:         }
  3313  000E88  D003               	goto	l2077
  3314  000E8A                     l2075:
  3315                           
  3316                           ;AP_C/AP_LCD.c: 190:         {;AP_C/AP_LCD.c: 191:             sendCom(0X88);
  3317  000E8A  0E88               	movlw	136
  3318  000E8C  EC84  F008         	call	_sendCom
  3319  000E90                     l2077:
  3320                           
  3321                           ;AP_C/AP_LCD.c: 193:         for(b=0;b<16;b++)
  3322  000E90  0E00               	movlw	0
  3323  000E92  6E07               	movwf	GRam_Clear@b,c
  3324  000E94                     l2083:
  3325                           
  3326                           ;AP_C/AP_LCD.c: 194:         {;AP_C/AP_LCD.c: 195:             sendDat(0x00);
  3327  000E94  0E00               	movlw	0
  3328  000E96  EC11  F007         	call	_sendDat
  3329                           
  3330                           ;AP_C/AP_LCD.c: 196:             sendDat(0x00);
  3331  000E9A  0E00               	movlw	0
  3332  000E9C  EC11  F007         	call	_sendDat
  3333                           
  3334                           ;AP_C/AP_LCD.c: 197:         }
  3335  000EA0  2A07               	incf	GRam_Clear@b,f,c
  3336  000EA2  0E0F               	movlw	15
  3337  000EA4  6407               	cpfsgt	GRam_Clear@b,c
  3338  000EA6  D7F6               	goto	l2083
  3339                           
  3340                           ;AP_C/AP_LCD.c: 198:     }
  3341  000EA8  2A08               	incf	GRam_Clear@a,f,c
  3342  000EAA  5008               	movf	GRam_Clear@a,w,c
  3343  000EAC  B4D8               	btfsc	status,2,c
  3344  000EAE  D7E6               	goto	l2071
  3345                           
  3346                           ;AP_C/AP_LCD.c: 199:     sendCom(0x36);
  3347  000EB0  0E36               	movlw	54
  3348  000EB2  EC84  F008         	call	_sendCom
  3349  000EB6  0012               	return		;funcret
  3350  000EB8                     __end_of_GRam_Clear:
  3351                           	opt callstack 0
  3352                           
  3353 ;; *************** function _sendDat *****************
  3354 ;; Defined at:
  3355 ;;		line 69 in file "USER_C/lcd.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  dat             1    wreg     unsigned char 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  dat             1    5[COMRAM] unsigned char 
  3360 ;;  datl            1    4[COMRAM] unsigned char 
  3361 ;;  dath            1    3[COMRAM] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3371 ;;      Params:         0       0       0       0       0       0       0       0       0
  3372 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3373 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3374 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3375 ;;Total ram usage:        4 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    5
  3378 ;; This function calls:
  3379 ;;		_Spi8b
  3380 ;; This function is called by:
  3381 ;;		_display_char
  3382 ;;		_GRam_Clear
  3383 ;;		_LcdString
  3384 ;;		_Draw_point
  3385 ;;		_main
  3386 ;;		_display_3232
  3387 ;;		_display_1632
  3388 ;;		_display_12864
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text25
  3393  000E22                     __ptext25:
  3394                           	opt callstack 0
  3395  000E22                     _sendDat:
  3396                           	opt callstack 25
  3397                           
  3398                           ;incstack = 0
  3399                           ;sendDat@dat stored from wreg
  3400  000E22  6E06               	movwf	sendDat@dat,c
  3401                           
  3402                           ;USER_C/lcd.c: 71:     unsigned char dath, datl;;USER_C/lcd.c: 72:     dath = dat & 0xf0
      +                          ;
  3403  000E24  5006               	movf	sendDat@dat,w,c
  3404  000E26  0BF0               	andlw	240
  3405  000E28  6E04               	movwf	sendDat@dath,c
  3406                           
  3407                           ;USER_C/lcd.c: 73:     datl = ((dat & 0x0f) << 4);
  3408  000E2A  0060  F018  F003   	movff	sendDat@dat,??_sendDat
  3409  000E30  0E0F               	movlw	15
  3410  000E32  1603               	andwf	??_sendDat,f,c
  3411  000E34  3803               	swapf	??_sendDat,w,c
  3412  000E36  0BF0               	andlw	240
  3413  000E38  6E05               	movwf	sendDat@datl,c
  3414                           
  3415                           ;USER_C/lcd.c: 75:     _delay((unsigned long)((20)*(1000000/4000.0)));
  3416  000E3A  0E07               	movlw	7
  3417  000E3C  6E03               	movwf	??_sendDat& (0+255),c
  3418  000E3E  0E7D               	movlw	125
  3419  000E40                     u1357:
  3420  000E40  2EE8               	decfsz	wreg,f,c
  3421  000E42  D7FE               	bra	u1357
  3422  000E44  2E03               	decfsz	??_sendDat& (0+255),f,c
  3423  000E46  D7FC               	bra	u1357
  3424  000E48  F000               	nop	
  3425                           
  3426                           ;USER_C/lcd.c: 76:     Spi8b(0xfa);
  3427  000E4A  0EFA               	movlw	250
  3428  000E4C  EC1B  F008         	call	_Spi8b
  3429                           
  3430                           ;USER_C/lcd.c: 78:     Spi8b(dath);
  3431  000E50  5004               	movf	sendDat@dath,w,c
  3432  000E52  EC1B  F008         	call	_Spi8b
  3433                           
  3434                           ;USER_C/lcd.c: 80:     Spi8b(datl);
  3435  000E56  5005               	movf	sendDat@datl,w,c
  3436  000E58  EC1B  F008         	call	_Spi8b
  3437                           
  3438                           ;USER_C/lcd.c: 81:     _delay((unsigned long)((20)*(1000000/4000.0)));
  3439  000E5C  0E07               	movlw	7
  3440  000E5E  6E03               	movwf	??_sendDat& (0+255),c
  3441  000E60  0E7D               	movlw	125
  3442  000E62                     u1367:
  3443  000E62  2EE8               	decfsz	wreg,f,c
  3444  000E64  D7FE               	bra	u1367
  3445  000E66  2E03               	decfsz	??_sendDat& (0+255),f,c
  3446  000E68  D7FC               	bra	u1367
  3447  000E6A  F000               	nop	
  3448  000E6C  0012               	return		;funcret
  3449  000E6E                     __end_of_sendDat:
  3450                           	opt callstack 0
  3451                           
  3452 ;; *************** function _sendCom *****************
  3453 ;; Defined at:
  3454 ;;		line 52 in file "USER_C/lcd.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  com             1    wreg     unsigned char 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  com             1    5[COMRAM] unsigned char 
  3459 ;;  coml            1    4[COMRAM] unsigned char 
  3460 ;;  comh            1    3[COMRAM] unsigned char 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3470 ;;      Params:         0       0       0       0       0       0       0       0       0
  3471 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3472 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3473 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3474 ;;Total ram usage:        4 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    5
  3477 ;; This function calls:
  3478 ;;		_Spi8b
  3479 ;; This function is called by:
  3480 ;;		_display_char
  3481 ;;		_GRam_Clear
  3482 ;;		_LCDInit
  3483 ;;		_position
  3484 ;;		_Draw_point
  3485 ;;		_display_3232
  3486 ;;		_display_1632
  3487 ;;		_display_12864
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text26
  3492  001108                     __ptext26:
  3493                           	opt callstack 0
  3494  001108                     _sendCom:
  3495                           	opt callstack 24
  3496                           
  3497                           ;incstack = 0
  3498                           ;sendCom@com stored from wreg
  3499  001108  6E06               	movwf	sendCom@com,c
  3500                           
  3501                           ;USER_C/lcd.c: 54:     unsigned char comh, coml;;USER_C/lcd.c: 55:     comh = com & 0xf0
      +                          ;
  3502  00110A  5006               	movf	sendCom@com,w,c
  3503  00110C  0BF0               	andlw	240
  3504  00110E  6E04               	movwf	sendCom@comh,c
  3505                           
  3506                           ;USER_C/lcd.c: 56:     coml = ((com & 0x0f) << 4);
  3507  001110  0060  F018  F003   	movff	sendCom@com,??_sendCom
  3508  001116  0E0F               	movlw	15
  3509  001118  1603               	andwf	??_sendCom,f,c
  3510  00111A  3803               	swapf	??_sendCom,w,c
  3511  00111C  0BF0               	andlw	240
  3512  00111E  6E05               	movwf	sendCom@coml,c
  3513                           
  3514                           ;USER_C/lcd.c: 59:     Spi8b(0xf8);
  3515  001120  0EF8               	movlw	248
  3516  001122  EC1B  F008         	call	_Spi8b
  3517                           
  3518                           ;USER_C/lcd.c: 61:     Spi8b(comh);
  3519  001126  5004               	movf	sendCom@comh,w,c
  3520  001128  EC1B  F008         	call	_Spi8b
  3521                           
  3522                           ;USER_C/lcd.c: 63:     Spi8b(coml);
  3523  00112C  5005               	movf	sendCom@coml,w,c
  3524  00112E  EC1B  F008         	call	_Spi8b
  3525  001132  0012               	return		;funcret
  3526  001134                     __end_of_sendCom:
  3527                           	opt callstack 0
  3528                           
  3529 ;; *************** function _Spi8b *****************
  3530 ;; Defined at:
  3531 ;;		line 32 in file "USER_C/lcd.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  dat             1    wreg     unsigned char 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  dat             1    0[COMRAM] unsigned char 
  3536 ;;  i               1    1[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    4
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_sendCom
  3557 ;;		_sendDat
  3558 ;;		_LCD_read_arm
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text27
  3563  001036                     __ptext27:
  3564                           	opt callstack 0
  3565  001036                     _Spi8b:
  3566                           	opt callstack 25
  3567                           
  3568                           ;incstack = 0
  3569                           ;Spi8b@dat stored from wreg
  3570  001036  6E01               	movwf	Spi8b@dat,c
  3571                           
  3572                           ;USER_C/lcd.c: 33:     char i = 0;
  3573  001038  0E00               	movlw	0
  3574  00103A  6E02               	movwf	Spi8b@i,c
  3575                           
  3576                           ;USER_C/lcd.c: 35:     for (i = 0; i < 8; i++) {
  3577  00103C  0E00               	movlw	0
  3578  00103E  6E02               	movwf	Spi8b@i,c
  3579  001040                     l795:
  3580                           
  3581                           ;USER_C/lcd.c: 37:         if ((dat & 0x80) == 0x80) {
  3582  001040  AE01               	btfss	Spi8b@dat,7,c
  3583  001042  D002               	goto	l801
  3584                           
  3585                           ;USER_C/lcd.c: 38:             do { LATCbits.LATC4 = 1; } while(0);
  3586  001044  88BC               	bsf	16316,4,c	;volatile
  3587  001046  D001               	goto	l803
  3588  001048                     l801:
  3589  001048  98BC               	bcf	16316,4,c	;volatile
  3590  00104A                     l803:
  3591  00104A  86BC               	bsf	16316,3,c	;volatile
  3592                           
  3593                           ;USER_C/lcd.c: 43:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3594  00104C  0EA6               	movlw	166
  3595  00104E                     u1377:
  3596  00104E  2EE8               	decfsz	wreg,f,c
  3597  001050  D7FE               	bra	u1377
  3598  001052  D000               	nop2	
  3599  001054  96BC               	bcf	16316,3,c	;volatile
  3600                           
  3601                           ;USER_C/lcd.c: 45:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3602  001056  0EA6               	movlw	166
  3603  001058                     u1387:
  3604  001058  2EE8               	decfsz	wreg,f,c
  3605  00105A  D7FE               	bra	u1387
  3606  00105C  D000               	nop2	
  3607                           
  3608                           ;USER_C/lcd.c: 46:         dat = dat << 1;
  3609  00105E  5001               	movf	Spi8b@dat,w,c
  3610  001060  2401               	addwf	Spi8b@dat,w,c
  3611  001062  6E01               	movwf	Spi8b@dat,c
  3612                           
  3613                           ;USER_C/lcd.c: 47:     }
  3614  001064  2A02               	incf	Spi8b@i,f,c
  3615  001066  0E07               	movlw	7
  3616  001068  6402               	cpfsgt	Spi8b@i,c
  3617  00106A  D7EA               	goto	l795
  3618  00106C  0012               	return	
  3619  00106E                     __end_of_Spi8b:
  3620                           	opt callstack 0
  3621                           
  3622 ;; *************** function _INTERRUPT_InterruptManager *****************
  3623 ;; Defined at:
  3624 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3638 ;;      Params:         0       0       0       0       0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3641 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    3
  3645 ;; This function calls:
  3646 ;;		_ECAN_ISR_ECAN_RXB0I
  3647 ;;		_INT0_ISR
  3648 ;;		_INT1_ISR
  3649 ;;		_INT2_ISR
  3650 ;; This function is called by:
  3651 ;;		Interrupt level 2
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text28
  3656  0010A2                     __ptext28:
  3657                           	opt callstack 0
  3658  0010A2                     _INTERRUPT_InterruptManager:
  3659                           	opt callstack 22
  3660                           
  3661                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE1bits.INT0IE == 1 && PIR1bits.IN
      +                          T0IF == 1)
  3662                           
  3663                           ;incstack = 0
  3664  0010A2  0139               	movlb	57	; () banked
  3665  0010A4  B191               	btfsc	145,0,b	;volatile
  3666                           
  3667                           ; BSR set to: 57
  3668  0010A6  A1A1               	btfss	161,0,b	;volatile
  3669  0010A8  D003               	goto	i2l482
  3670                           
  3671                           ; BSR set to: 57
  3672                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
  3673  0010AA  EC41  F009         	call	_INT0_ISR	;wreg free
  3674                           
  3675                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  3676  0010AE  0011               	retfie		f
  3677  0010B0                     i2l482:
  3678                           
  3679                           ; BSR set to: 57
  3680  0010B0  BF94               	btfsc	148,7,b	;volatile
  3681                           
  3682                           ; BSR set to: 57
  3683  0010B2  AFA4               	btfss	164,7,b	;volatile
  3684  0010B4  D003               	goto	i2l484
  3685                           
  3686                           ; BSR set to: 57
  3687                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         INT1_ISR();
  3688  0010B6  EC3C  F009         	call	_INT1_ISR	;wreg free
  3689                           
  3690                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  3691  0010BA  0011               	retfie		f
  3692  0010BC                     i2l484:
  3693                           
  3694                           ; BSR set to: 57
  3695  0010BC  B195               	btfsc	149,0,b	;volatile
  3696                           
  3697                           ; BSR set to: 57
  3698  0010BE  A1A5               	btfss	165,0,b	;volatile
  3699  0010C0  D003               	goto	i2l486
  3700                           
  3701                           ; BSR set to: 57
  3702                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         ECAN_ISR_ECAN_RXB0I();
  3703  0010C2  EC46  F009         	call	_ECAN_ISR_ECAN_RXB0I	;wreg free
  3704                           
  3705                           ;mcc_generated_files/interrupt_manager.c: 72:     }
  3706  0010C6  0011               	retfie		f
  3707  0010C8                     i2l486:
  3708                           
  3709                           ; BSR set to: 57
  3710  0010C8  AD98               	btfss	152,6,b	;volatile
  3711  0010CA  0011               	retfie		f
  3712                           
  3713                           ; BSR set to: 57
  3714  0010CC  ADA8               	btfss	168,6,b	;volatile
  3715  0010CE  0011               	retfie		f
  3716                           
  3717                           ; BSR set to: 57
  3718                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         INT2_ISR();
  3719  0010D0  EC37  F009         	call	_INT2_ISR	;wreg free
  3720                           
  3721                           ;mcc_generated_files/interrupt_manager.c: 76:     }
  3722  0010D4  0011               	retfie		f
  3723  0010D6                     __end_of_INTERRUPT_InterruptManager:
  3724                           	opt callstack 0
  3725                           
  3726 ;; *************** function _INT2_ISR *****************
  3727 ;; Defined at:
  3728 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0
  3743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3746 ;;Total ram usage:        0 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    2
  3749 ;; This function calls:
  3750 ;;		_INT2_CallBack
  3751 ;; This function is called by:
  3752 ;;		_INTERRUPT_InterruptManager
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text29
  3757  00126E                     __ptext29:
  3758                           	opt callstack 0
  3759  00126E                     _INT2_ISR:
  3760                           	opt callstack 22
  3761                           
  3762                           ;mcc_generated_files/ext_int.c: 88:     (PIR8bits.INT2IF = 0);
  3763                           
  3764                           ;incstack = 0
  3765  00126E  0139               	movlb	57	; () banked
  3766  001270  9DA8               	bcf	168,6,b	;volatile
  3767                           
  3768                           ; BSR set to: 57
  3769                           ;mcc_generated_files/ext_int.c: 91:     INT2_CallBack();
  3770  001272  ECD2  F008         	call	_INT2_CallBack	;wreg free
  3771  001276  0012               	return		;funcret
  3772  001278                     __end_of_INT2_ISR:
  3773                           	opt callstack 0
  3774                           
  3775 ;; *************** function _INT2_CallBack *****************
  3776 ;; Defined at:
  3777 ;;		line 95 in file "mcc_generated_files/ext_int.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3794 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    1
  3798 ;; This function calls:
  3799 ;;		Absolute function
  3800 ;;		_INT2_DefaultInterruptHandler
  3801 ;; This function is called by:
  3802 ;;		_INT2_ISR
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text30
  3807  0011A4                     __ptext30:
  3808                           	opt callstack 0
  3809  0011A4                     _INT2_CallBack:
  3810                           	opt callstack 22
  3811                           
  3812                           ;mcc_generated_files/ext_int.c: 98:     if(INT2_InterruptHandler)
  3813                           
  3814                           ;incstack = 0
  3815  0011A4  5037               	movf	_INT2_InterruptHandler,w,c
  3816  0011A6  1038               	iorwf	_INT2_InterruptHandler+1,w,c
  3817  0011A8  B4D8               	btfsc	status,2,c
  3818  0011AA  0012               	return	
  3819                           
  3820                           ;mcc_generated_files/ext_int.c: 99:     {;mcc_generated_files/ext_int.c: 100:         IN
      +                          T2_InterruptHandler();
  3821  0011AC  D801               	call	i2u25_48
  3822  0011AE  0012               	return	
  3823  0011B0                     i2u25_48:
  3824  0011B0  0005               	push	
  3825  0011B2  6EFA               	movwf	pclath,c
  3826  0011B4  5037               	movf	_INT2_InterruptHandler,w,c
  3827  0011B6  6EFD               	movwf	tosl,c
  3828  0011B8  5038               	movf	_INT2_InterruptHandler+1,w,c
  3829  0011BA  6EFE               	movwf	tosh,c
  3830  0011BC  50F8               	movf	tblptru,w,c
  3831  0011BE  6EFF               	movwf	tosu,c
  3832  0011C0  50FA               	movf	pclath,w,c
  3833  0011C2  0012               	return		;indir
  3834  0011C4                     __end_of_INT2_CallBack:
  3835                           	opt callstack 0
  3836                           
  3837 ;; *************** function _INT2_DefaultInterruptHandler *****************
  3838 ;; Defined at:
  3839 ;;		line 108 in file "mcc_generated_files/ext_int.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;		None
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		None
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3853 ;;      Params:         0       0       0       0       0       0       0       0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3856 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3857 ;;Total ram usage:        0 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_EXT_INT_Initialize
  3863 ;;		_INT2_CallBack
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text31
  3868  001296                     __ptext31:
  3869                           	opt callstack 0
  3870  001296                     _INT2_DefaultInterruptHandler:
  3871                           	opt callstack 22
  3872                           
  3873                           ;incstack = 0
  3874  001296  0012               	return		;funcret
  3875  001298                     __end_of_INT2_DefaultInterruptHandler:
  3876                           	opt callstack 0
  3877                           
  3878 ;; *************** function _INT1_ISR *****************
  3879 ;; Defined at:
  3880 ;;		line 60 in file "mcc_generated_files/ext_int.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    2
  3901 ;; This function calls:
  3902 ;;		_INT1_CallBack
  3903 ;; This function is called by:
  3904 ;;		_INTERRUPT_InterruptManager
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text32
  3909  001278                     __ptext32:
  3910                           	opt callstack 0
  3911  001278                     _INT1_ISR:
  3912                           	opt callstack 22
  3913                           
  3914                           ;mcc_generated_files/ext_int.c: 62:     (PIR4bits.INT1IF = 0);
  3915                           
  3916                           ;incstack = 0
  3917  001278  0139               	movlb	57	; () banked
  3918  00127A  9FA4               	bcf	164,7,b	;volatile
  3919                           
  3920                           ; BSR set to: 57
  3921                           ;mcc_generated_files/ext_int.c: 65:     INT1_CallBack();
  3922  00127C  ECE2  F008         	call	_INT1_CallBack	;wreg free
  3923  001280  0012               	return		;funcret
  3924  001282                     __end_of_INT1_ISR:
  3925                           	opt callstack 0
  3926                           
  3927 ;; *************** function _INT1_CallBack *****************
  3928 ;; Defined at:
  3929 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;		None
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3946 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3947 ;;Total ram usage:        0 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    1
  3950 ;; This function calls:
  3951 ;;		Absolute function
  3952 ;;		_INT1_DefaultInterruptHandler
  3953 ;; This function is called by:
  3954 ;;		_INT1_ISR
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text33
  3959  0011C4                     __ptext33:
  3960                           	opt callstack 0
  3961  0011C4                     _INT1_CallBack:
  3962                           	opt callstack 22
  3963                           
  3964                           ;mcc_generated_files/ext_int.c: 72:     if(INT1_InterruptHandler)
  3965                           
  3966                           ;incstack = 0
  3967  0011C4  5039               	movf	_INT1_InterruptHandler,w,c
  3968  0011C6  103A               	iorwf	_INT1_InterruptHandler+1,w,c
  3969  0011C8  B4D8               	btfsc	status,2,c
  3970  0011CA  0012               	return	
  3971                           
  3972                           ;mcc_generated_files/ext_int.c: 73:     {;mcc_generated_files/ext_int.c: 74:         INT
      +                          1_InterruptHandler();
  3973  0011CC  D801               	call	i2u23_48
  3974  0011CE  0012               	return	
  3975  0011D0                     i2u23_48:
  3976  0011D0  0005               	push	
  3977  0011D2  6EFA               	movwf	pclath,c
  3978  0011D4  5039               	movf	_INT1_InterruptHandler,w,c
  3979  0011D6  6EFD               	movwf	tosl,c
  3980  0011D8  503A               	movf	_INT1_InterruptHandler+1,w,c
  3981  0011DA  6EFE               	movwf	tosh,c
  3982  0011DC  50F8               	movf	tblptru,w,c
  3983  0011DE  6EFF               	movwf	tosu,c
  3984  0011E0  50FA               	movf	pclath,w,c
  3985  0011E2  0012               	return		;indir
  3986  0011E4                     __end_of_INT1_CallBack:
  3987                           	opt callstack 0
  3988                           
  3989 ;; *************** function _INT1_DefaultInterruptHandler *****************
  3990 ;; Defined at:
  3991 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		None
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4005 ;;      Params:         0       0       0       0       0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4008 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_EXT_INT_Initialize
  4015 ;;		_INT1_CallBack
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text34
  4020  001298                     __ptext34:
  4021                           	opt callstack 0
  4022  001298                     _INT1_DefaultInterruptHandler:
  4023                           	opt callstack 22
  4024                           
  4025                           ;incstack = 0
  4026  001298  0012               	return		;funcret
  4027  00129A                     __end_of_INT1_DefaultInterruptHandler:
  4028                           	opt callstack 0
  4029                           
  4030 ;; *************** function _INT0_ISR *****************
  4031 ;; Defined at:
  4032 ;;		line 34 in file "mcc_generated_files/ext_int.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4046 ;;      Params:         0       0       0       0       0       0       0       0       0
  4047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4049 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    2
  4053 ;; This function calls:
  4054 ;;		_INT0_CallBack
  4055 ;; This function is called by:
  4056 ;;		_INTERRUPT_InterruptManager
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text35
  4061  001282                     __ptext35:
  4062                           	opt callstack 0
  4063  001282                     _INT0_ISR:
  4064                           	opt callstack 22
  4065                           
  4066                           ;mcc_generated_files/ext_int.c: 36:     (PIR1bits.INT0IF = 0);
  4067                           
  4068                           ;incstack = 0
  4069  001282  0139               	movlb	57	; () banked
  4070  001284  91A1               	bcf	161,0,b	;volatile
  4071                           
  4072                           ; BSR set to: 57
  4073                           ;mcc_generated_files/ext_int.c: 39:     INT0_CallBack();
  4074  001286  ECF2  F008         	call	_INT0_CallBack	;wreg free
  4075  00128A  0012               	return		;funcret
  4076  00128C                     __end_of_INT0_ISR:
  4077                           	opt callstack 0
  4078                           
  4079 ;; *************** function _INT0_CallBack *****************
  4080 ;; Defined at:
  4081 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4095 ;;      Params:         0       0       0       0       0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4098 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4099 ;;Total ram usage:        0 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    1
  4102 ;; This function calls:
  4103 ;;		Absolute function
  4104 ;;		_INT0_DefaultInterruptHandler
  4105 ;; This function is called by:
  4106 ;;		_INT0_ISR
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text36
  4111  0011E4                     __ptext36:
  4112                           	opt callstack 0
  4113  0011E4                     _INT0_CallBack:
  4114                           	opt callstack 22
  4115                           
  4116                           ;mcc_generated_files/ext_int.c: 46:     if(INT0_InterruptHandler)
  4117                           
  4118                           ;incstack = 0
  4119  0011E4  503B               	movf	_INT0_InterruptHandler,w,c
  4120  0011E6  103C               	iorwf	_INT0_InterruptHandler+1,w,c
  4121  0011E8  B4D8               	btfsc	status,2,c
  4122  0011EA  0012               	return	
  4123                           
  4124                           ;mcc_generated_files/ext_int.c: 47:     {;mcc_generated_files/ext_int.c: 48:         INT
      +                          0_InterruptHandler();
  4125  0011EC  D801               	call	i2u21_48
  4126  0011EE  0012               	return	
  4127  0011F0                     i2u21_48:
  4128  0011F0  0005               	push	
  4129  0011F2  6EFA               	movwf	pclath,c
  4130  0011F4  503B               	movf	_INT0_InterruptHandler,w,c
  4131  0011F6  6EFD               	movwf	tosl,c
  4132  0011F8  503C               	movf	_INT0_InterruptHandler+1,w,c
  4133  0011FA  6EFE               	movwf	tosh,c
  4134  0011FC  50F8               	movf	tblptru,w,c
  4135  0011FE  6EFF               	movwf	tosu,c
  4136  001200  50FA               	movf	pclath,w,c
  4137  001202  0012               	return		;indir
  4138  001204                     __end_of_INT0_CallBack:
  4139                           	opt callstack 0
  4140                           
  4141 ;; *************** function _INT0_DefaultInterruptHandler *****************
  4142 ;; Defined at:
  4143 ;;		line 56 in file "mcc_generated_files/ext_int.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		None
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4157 ;;      Params:         0       0       0       0       0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4160 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4161 ;;Total ram usage:        0 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_EXT_INT_Initialize
  4167 ;;		_INT0_CallBack
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text37
  4172  00129A                     __ptext37:
  4173                           	opt callstack 0
  4174  00129A                     _INT0_DefaultInterruptHandler:
  4175                           	opt callstack 22
  4176                           
  4177                           ;incstack = 0
  4178  00129A  0012               	return		;funcret
  4179  00129C                     __end_of_INT0_DefaultInterruptHandler:
  4180                           	opt callstack 0
  4181                           
  4182 ;; *************** function _ECAN_ISR_ECAN_RXB0I *****************
  4183 ;; Defined at:
  4184 ;;		line 62 in file "mcc_generated_files/ecan.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		None
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0
  4199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4202 ;;Total ram usage:        0 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_INTERRUPT_InterruptManager
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text38
  4212  00128C                     __ptext38:
  4213                           	opt callstack 0
  4214  00128C                     _ECAN_ISR_ECAN_RXB0I:
  4215                           	opt callstack 24
  4216                           
  4217                           ;mcc_generated_files/ecan.c: 66:     PIR5bits.RXB0IF = 0;
  4218                           
  4219                           ;incstack = 0
  4220  00128C  0139               	movlb	57	; () banked
  4221  00128E  91A5               	bcf	165,0,b	;volatile
  4222                           
  4223                           ; BSR set to: 57
  4224  001290  0012               	return		;funcret
  4225  001292                     __end_of_ECAN_ISR_ECAN_RXB0I:
  4226                           	opt callstack 0
  4227                           
  4228                           ;
  4229                           ; Interrupt Vector Table @ 0x8
  4230                           ;
  4231                           
  4232                           	psect	ivt0x8
  4233  000008                     __pivt0x8:
  4234                           	opt callstack 0
  4235  000008                     ivt0x8_base:
  4236                           	opt callstack 0
  4237                           
  4238                           ; high-priority vector
  4239  000008  EF51  F008         	goto	_INTERRUPT_InterruptManager
  4240  000018                     	org	16
  4241                           
  4242                           ; low-priority vector
  4243  000018  00FF               	reset	
  4244                           
  4245                           	psect	text39
  4246  000000                     __ptext39:
  4247                           	opt callstack 0
  4248                           
  4249                           	psect	rparam
  4250  0000                     tosu	equ	0x3FFF
  4251                           tosh	equ	0x3FFE
  4252                           tosl	equ	0x3FFD
  4253                           stkptr	equ	0x3FFC
  4254                           pclatu	equ	0x3FFB
  4255                           pclath	equ	0x3FFA
  4256                           pcl	equ	0x3FF9
  4257                           tblptru	equ	0x3FF8
  4258                           tblptrh	equ	0x3FF7
  4259                           tblptrl	equ	0x3FF6
  4260                           tablat	equ	0x3FF5
  4261                           prodh	equ	0x3FF4
  4262                           prodl	equ	0x3FF3
  4263                           indf0	equ	0x3FEF
  4264                           postinc0	equ	0x3FEE
  4265                           postdec0	equ	0x3FED
  4266                           preinc0	equ	0x3FEC
  4267                           plusw0	equ	0x3FEB
  4268                           fsr0h	equ	0x3FEA
  4269                           fsr0l	equ	0x3FE9
  4270                           wreg	equ	0x3FE8
  4271                           indf1	equ	0x3FE7
  4272                           postinc1	equ	0x3FE6
  4273                           postdec1	equ	0x3FE5
  4274                           preinc1	equ	0x3FE4
  4275                           plusw1	equ	0x3FE3
  4276                           fsr1h	equ	0x3FE2
  4277                           fsr1l	equ	0x3FE1
  4278                           bsr	equ	0x3FE0
  4279                           indf2	equ	0x3FDF
  4280                           postinc2	equ	0x3FDE
  4281                           postdec2	equ	0x3FDD
  4282                           preinc2	equ	0x3FDC
  4283                           plusw2	equ	0x3FDB
  4284                           fsr2h	equ	0x3FDA
  4285                           fsr2l	equ	0x3FD9
  4286                           status	equ	0x3FD8


Data Sizes:
    Strings     16
    Constant    84
    Data        0
    BSS         9
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      60
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LcdString@p	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    display_char@p	PTR unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Draw_Two_Dot
    _position->_sendCom
    _display_char->_sendCom
    _display_char->_sendDat
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LcdString->_sendDat
    _LCD_Draw_Two_Dot->_v_Lcd12864DrawLineX_f
    _LCD_Draw_Two_Dot->_v_Lcd12864DrawLineY_f
    _v_Lcd12864DrawLineY_f->_Draw_point
    _v_Lcd12864DrawLineX_f->_Draw_point
    _Draw_point->_LCD_read_arm
    _Draw_point->_sendCom
    _Draw_point->_sendDat
    _LCD_read_arm->_Readspi
    _LCD_read_arm->_Spi8b
    _LCDInit->_sendCom
    _GRam_Clear->_sendCom
    _GRam_Clear->_sendDat
    _sendDat->_Spi8b
    _sendCom->_Spi8b

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9754
                                             43 COMRAM     2     2      0
                         _GRam_Clear
                            _LCDInit
                   _LCD_Draw_Two_Dot
                          _LcdString
                  _SYSTEM_Initialize
                       _display_char
                            _ledtest
                           _position
                            _sendDat
 ---------------------------------------------------------------------------------
 (1) _position                                             3     2      1     474
                                              6 COMRAM     3     2      1
                            _sendCom
 ---------------------------------------------------------------------------------
 (1) _ledtest                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_char                                        12     4      8     681
                                              6 COMRAM    12     4      8
                            _sendCom
                            _sendDat
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ECAN_Initialize
                 _EXT_INT_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LcdString                                            2     0      2     241
                                              6 COMRAM     2     0      2
                            _sendDat
 ---------------------------------------------------------------------------------
 (1) _LCD_Draw_Two_Dot                                    22    18      4    7509
                                             21 COMRAM    22    18      4
                         _Draw_point
                                _abs
              _v_Lcd12864DrawLineX_f
              _v_Lcd12864DrawLineY_f
 ---------------------------------------------------------------------------------
 (2) _v_Lcd12864DrawLineY_f                                5     2      3    1977
                                             16 COMRAM     5     2      3
                         _Draw_point
 ---------------------------------------------------------------------------------
 (2) _v_Lcd12864DrawLineX_f                                5     2      3    1977
                                             16 COMRAM     5     2      3
                         _Draw_point
 ---------------------------------------------------------------------------------
 (3) _Draw_point                                          10     8      2    1525
                                              6 COMRAM    10     8      2
                       _LCD_read_arm
                            _sendCom
                            _sendDat
 ---------------------------------------------------------------------------------
 (4) _LCD_read_arm                                         4     4      0     180
                                              2 COMRAM     4     4      0
                            _Readspi
                              _Spi8b
 ---------------------------------------------------------------------------------
 (5) _Readspi                                              2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     218
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0     120
                                              6 COMRAM     1     1      0
                            _sendCom
 ---------------------------------------------------------------------------------
 (1) _GRam_Clear                                           2     2      0     315
                                              6 COMRAM     2     2      0
                            _sendCom
                            _sendDat
 ---------------------------------------------------------------------------------
 (1) _sendDat                                              4     4      0     120
                                              2 COMRAM     4     4      0
                              _Spi8b
 ---------------------------------------------------------------------------------
 (2) _sendCom                                              4     4      0     120
                                              2 COMRAM     4     4      0
                              _Spi8b
 ---------------------------------------------------------------------------------
 (2) _Spi8b                                                2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                _ECAN_ISR_ECAN_RXB0I
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (7) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ECAN_ISR_ECAN_RXB0I                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GRam_Clear
     _sendCom
       _Spi8b
     _sendDat
       _Spi8b
   _LCDInit
     _sendCom
       _Spi8b
   _LCD_Draw_Two_Dot
     _Draw_point
       _LCD_read_arm
         _Readspi
         _Spi8b
       _sendCom
         _Spi8b
       _sendDat
         _Spi8b
     _abs
     _v_Lcd12864DrawLineX_f
       _Draw_point
         _LCD_read_arm
           _Readspi
           _Spi8b
         _sendCom
           _Spi8b
         _sendDat
           _Spi8b
     _v_Lcd12864DrawLineY_f
       _Draw_point
         _LCD_read_arm
           _Readspi
           _Spi8b
         _sendCom
           _Spi8b
         _sendDat
           _Spi8b
   _LcdString
     _sendDat
       _Spi8b
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _display_char
     _sendCom
       _Spi8b
     _sendDat
       _Spi8b
   _ledtest
   _position
     _sendCom
       _Spi8b
   _sendDat
     _Spi8b

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_ISR_ECAN_RXB0I
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      3C       1       63.2%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C       3        0.0%
DATA                 0      0      3C      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Oct 08 17:03:57 2019

                     _ECAN_ISR_ECAN_RXB0I 128C                               __CFG_CP$OFF 000000  
                 LCD_Draw_Two_Dot@delta_x 0028                   LCD_Draw_Two_Dot@delta_y 002A  
                                      _C0 0831                                        _C1 082D  
                                      _C2 0829                                        _C3 0825  
                                      l61 095A                                        l54 08C6  
                                      l65 09C4                                        l59 08FE  
                                      _S1 080D                                        _S2 0809  
                                      _S3 0805                                        _S4 0801  
                __size_of_ECAN_Initialize 00B8                             ?_display_char 0007  
                                     l801 1048                                       l803 104A  
                                     l831 0EC4                                       l816 0F0E  
                                     l817 0F1C                                       l818 0F2A  
                                     l843 0EEA                                       l864 0B7E  
                                     l795 1040                                       u270 1140  
              ??_INT0_SetInterruptHandler 0003                                       _abs 0F80  
                 __size_of_PMD_Initialize 0024                  LCD_Draw_Two_Dot@distance 0025  
                                     tosl 003FFD                                       wreg 003FE8  
                           _INT0_CallBack 11E4                             __CFG_BBEN$OFF 000000  
                    ?_ECAN_ISR_ECAN_RXB0I 0001                           __end_of_LCDInit 0E22  
                            __CFG_LVP$OFF 000000                             _INT1_CallBack 11C4  
                            __CFG_ZCD$OFF 000000                                      ?_abs 0001  
                                    l3001 0B72                                      l3021 0FDC  
                                    l2071 0E7C                                      l3111 0900  
                                    l3103 08DC                                      l3033 1018  
                                    l3025 0FF0                                      l3121 0982  
                                    l2083 0E94                                      l2075 0E8A  
                                    l2077 0E90                                      l3037 102C  
                                    l3133 09E4                                      l3117 0966  
                                    l3135 09E8                                      l1608 0FB0  
                                    l3073 0D80                                      l3161 0F38  
                                    l3217 0C4E                                      l3091 08A4  
                                    l3165 10D8                                      l3079 0DB2  
                                    l3169 10F0                                      l3099 08C8  
                                    l1923 0B8A                                      l1781 0EEC  
                                    l1927 0C2E                                      l2961 0A3C  
                                    l2981 0A92                                      l2991 0AFA  
                                    l2983 0AAE                                      l2959 0A32  
                                    l2993 0B18                                      l2995 0B34  
                                    l2979 0A74                                      l2987 0ACA  
                                    l2989 0AEC                                      l2999 0B50  
                                    STR_1 085E                                      STR_2 0855  
                                    u1120 0F8E                                      u1024 0A86  
                                    u1025 0A82                                      u1034 0AA4  
                                    u1035 0AA0                                      u1044 0AC0  
                                    u1140 089E                                      u1045 0ABC  
                                    u1054 0B0C                                      u1055 0B08  
                                    u1064 0B2A                                      u1160 08D6  
                                    u1065 0B26                                      u1074 0B46  
                                    u1075 0B42                                      u1307 0CC2  
                                    u1317 0ECC                                      _LATA 003FBA  
                                    _LATB 003FBB                                      u1327 0ED6  
                                    _LATC 003FBC                                      u1337 0DD6  
                                    u1347 0DE6                                      u1357 0E40  
                                    u1367 0E62                                      u1377 104E  
                                    u1297 0C58                                      u1387 1058  
                                    _PMD0 0039C0                                      _PMD1 0039C1  
                                    _PMD2 0039C2                                      _PMD3 0039C3  
                                    _PMD4 0039C4                                      _PMD5 0039C5  
                                    _PMD6 0039C6                                      _PMD7 0039C7  
                                    _WPUA 003A41                                      _WPUB 003A51  
                                    _WPUC 003A61                                      _WPUE 003A81  
                           _INT2_CallBack 11A4                             __CFG_FCMEN$ON 000000  
                                    abs@a 0001                                      _half 081D  
                                    _main 0C3E         __size_of_INT2_SetInterruptHandler 000E  
               ?_INT2_SetInterruptHandler 0001                                      prodl 003FF3  
                                    start 001A                             __CFG_CSWEN$ON 000000  
                            ___param_bank 000000                  __end_of_LCD_Draw_Two_Dot 0A0A  
                         __end_of_Readspi 0F00                                     ??_abs 0003  
          __size_of_v_Lcd12864DrawLineX_f 003C            __size_of_v_Lcd12864DrawLineY_f 003C  
           __end_of_v_Lcd12864DrawLineX_f 1036             __end_of_v_Lcd12864DrawLineY_f 0FFA  
                        __end_of_INT0_ISR 128C                          __end_of_INT1_ISR 1282  
                        __end_of_INT2_ISR 1278            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 123A                            ??_display_char 000F  
                                   ?_main 0001                             __CFG_WDTE$OFF 000000  
                          __CFG_DEBUG$OFF 000000                            LCD_read_arm@a1 0004  
                          LCD_read_arm@a2 0005                            LCD_read_arm@a3 0006  
                                   i2l482 10B0                                     i2l484 10BC  
                                   i2l486 10C8                                     _OSCEN 0039DD  
                                   _TRISA 003FC2                                     _TRISB 003FC3  
                          ?_INT0_CallBack 0001                                     _TRISC 003FC4  
                              Readspi@dat 0002                                     _Spi8b 1036  
                       ??_I2C1_Initialize 0001                             ?_LCD_read_arm 0001  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            ?_INT1_CallBack 0001  
                         __end_of_pio2_1t 0815                     ??_ECAN_ISR_ECAN_RXB0I 0001  
                         __end_of_ledtest 126E                               ?_GRam_Clear 0001  
                              _Draw_point 0A0A            ??_INT1_DefaultInterruptHandler 0001  
                      __CFG_MCLRE$EXTMCLR 000000                           __end_of_invpio2 081D  
                                   _toint 0821                           __end_of_sendDat 0E6E  
                         __end_of_sendCom 1134                            ?_INT2_CallBack 0001  
                _INT1_SetInterruptHandler 1248                                     pclath 003FFA  
              v_Lcd12864DrawLineX_f@Color 0013                                     tablat 003FF5  
              v_Lcd12864DrawLineY_f@Color 0013                                     status 003FD8  
                         __initialization 1182                              __end_of_half 0821  
                            __end_of_main 0CEA                            __CFG_SAFEN$OFF 000000  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 002C  
                          __CFG_PR1WAY$ON 000000                             __activetblptr 000002  
                               ??_LCDInit 0007                   display_char@char_length 000B  
                      __size_of_LcdString 0032                            ??_LCD_read_arm 0003  
                       ??_ECAN_Initialize 0001                                    ?_Spi8b 0001  
                                  _CANCON 003F8F                                    _CIOCON 003700  
                                  _ANSELA 003A40                                    _ANSELB 003A50  
                                  _ANSELC 003A60                                    _RC0PPS 003A10  
                                  _RC1PPS 003A11                                    _RB4PPS 003A0C  
                                  _ODCONA 003A42                                    _ODCONB 003A52  
                                  _ODCONC 003A62                            __CFG_WDTCCS$SC 000000  
                                  _INLVLA 003A44                                    _INLVLB 003A54  
                                  _INLVLC 003A64                                    _INLVLE 003A84  
                                  _OSCFRQ 0039DF                                    _RXB0D0 003F86  
                                  _RXB0D1 003F87                                    _RXB0D2 003F88  
                                  _RXB0D3 003F89                                    _RXB0D4 003F8A  
                                  _RXB1D0 0037F6                                    _RXB0D5 003F8B  
                                  _RXB1D1 0037F7                                    _RXB0D6 003F8C  
                                  _RXB1D2 0037F8                                    _RXB0D7 003F8D  
                                  _RXB1D3 0037F9                                    _RXB1D4 0037FA  
                                  _RXB1D5 0037FB                                    _RXB1D6 0037FC  
                                  _RXB1D7 0037FD                                    _TXB0D0 0037E6  
                                  _TXB0D1 0037E7                                    _TXB0D2 0037E8  
                                  _TXB0D3 0037E9                                    _TXB0D4 0037EA  
                                  _TXB1D0 0037D6                                    _TXB0D5 0037EB  
                                  _TXB1D1 0037D7                                    _TXB0D6 0037EC  
                                  _TXB1D2 0037D8                                    _TXB0D7 0037ED  
                                  _TXB1D3 0037D9                                    _TXB1D4 0037DA  
                                  _TXB2D0 0037C6                                    _TXB1D5 0037DB  
                                  _TXB2D1 0037C7                                    _TXB1D6 0037DC  
                                  _TXB2D2 0037C8                                    _TXB1D7 0037DD  
                                  _TXB2D3 0037C9                                    _TXB2D4 0037CA  
                                  _TXB2D5 0037CB                                    _TXB2D6 0037CC  
                                  _TXB2D7 0037CD                                    _c1pio2 0851  
                                  _c2pio2 084D                                    Spi8b@i 0002  
                                  _c3pio2 0849                                    _c4pio2 0845  
                               ??_Readspi 0001                            __CFG_XINST$OFF 000000  
               __CFG_RSTOSC$HFINTOSC_1MHZ 000000                                    _s1pio2 0841  
                                  _s2pio2 083D                                    _s3pio2 0839  
                                  _s4pio2 0835                            __CFG_STVREN$ON 000000  
                     __size_of_GRam_Clear 004A                                    _pio2_1 0815  
                                  clear_0 1188                           ??_INT0_CallBack 0001  
                               ??_ledtest 0001                            _PMD_Initialize 115E  
    __end_of_INT2_DefaultInterruptHandler 1298     __size_of_INT2_DefaultInterruptHandler 0002  
            _INT2_DefaultInterruptHandler 1296                             display_char@i 0012  
                           display_char@p 000D                             display_char@x 0009  
                           display_char@y 0007                           ??_INT1_CallBack 0001  
                               ??_sendDat 0003                                 ??_sendCom 0003  
                            __mediumconst 0000                                    tblptrh 003FF7  
                                  tblptrl 003FF6                                    tblptru 003FF8  
                        __end_of_position 0F40                           ??_INT2_CallBack 0001  
                             ?_Draw_point 0007  INT2_SetInterruptHandler@InterruptHandler 0001  
INT1_SetInterruptHandler@InterruptHandler 0001  INT0_SetInterruptHandler@InterruptHandler 0001  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 1204  
                              __accesstop 0060                   __end_of__initialization 119A  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                               ?_INT2_ISR 0001                      __end_of_display_char 0DCE  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
               v_Lcd12864DrawLineX_f@Temp 0014                         __end_of_LcdString 1108  
               v_Lcd12864DrawLineY_f@Temp 0015                            __pcstackCOMRAM 0001  
                           __end_of_Spi8b 106E                       ??_SYSTEM_Initialize 0003  
                           __end_of_toint 0825                                __end_of_C0 0835  
                              __end_of_C1 0831                                __end_of_C2 082D  
                              __end_of_C3 0829                                __end_of_S1 0811  
                              __end_of_S2 080D                                __end_of_S3 0809  
                              __end_of_S4 0805                    __end_of_PMD_Initialize 1182  
             __size_of_EXT_INT_Initialize 0040          __end_of_INT2_SetInterruptHandler 1248  
                                 ??_Spi8b 0001             ?_INT2_DefaultInterruptHandler 0001  
               __end_of_SYSTEM_Initialize 1222                           __CFG_IVT1WAY$ON 000000  
                             sendDat@dath 0004                               sendDat@datl 0005  
                             sendCom@comh 0004                               sendCom@coml 0005  
                   _INT0_InterruptHandler 003B                                ??_INT0_ISR 0001  
                              ??_INT1_ISR 0001                           __CFG_MVECEN$OFF 000000  
                              ??_INT2_ISR 0001                                __pnvCOMRAM 0037  
                                 IVTBASEH 003FD6                                   IVTBASEL 003FD5  
                                 IVTBASEU 003FD7                      __end_of_LCD_read_arm 10A2  
                                 _I2C1CLK 003D7B                                   _I2C1CNT 003D6C  
                                 _I2C1ERR 003D76                                   _I2C1PIR 003D79  
                                 _I2C1RXB 003D6A                                   _I2C1TXB 003D6B  
                         __CFG_PPS1WAY$ON 000000                         ?_LCD_Draw_Two_Dot 0016  
                     __size_of_Draw_point 017C                           _I2C1_Initialize 1134  
                                 _ECANCON 003F91                                   _CANSTAT 003F8E  
                      ??_LCD_Draw_Two_Dot 001A                           ?_PMD_Initialize 0001  
                                 _BRGCON1 003703                                   _BRGCON2 003704  
                                 _BRGCON3 003705                ??_INT1_SetInterruptHandler 0003  
                                 _LCDInit 0DCE                                   _INT0PPS 003AC0  
                     __CFG_PWRTS$PWRT_OFF 000000                                   _INT1PPS 003AC1  
                                 _INT2PPS 003AC2                                   _OSCCON1 0039D9  
                                 _OSCCON3 0039DB                                   i2u21_48 11F0  
                                 i2u23_48 11D0                                   i2u25_48 11B0  
                                 _RXB0DLC 003F85                                   _RXB1DLC 0037F5  
                                 _OSCTUNE 0039DE                                   _TXB0DLC 0037E5  
                                 _SLRCONA 003A43                                   _SLRCONB 003A53  
                                 _SLRCONC 003A63                                   _TXB1DLC 0037D5  
                                 _TXB2DLC 0037C5                              ??_GRam_Clear 0007  
                    LCD_Draw_Two_Dot@EndX 0017                      LCD_Draw_Two_Dot@EndY 0018  
                    LCD_Draw_Two_Dot@incx 0023                      LCD_Draw_Two_Dot@incy 0024  
       __size_of_INT0_SetInterruptHandler 000E                 ?_INT0_SetInterruptHandler 0001  
                                 _Readspi 0EB8                                   __Hparam 0000  
                                 __Lparam 0000                                 ?_position 0007  
                         _ECAN_Initialize 0B86                              __psmallconst 0800  
                      __end_of_GRam_Clear 0EB8                                   __pcinit 1182  
                                 __ramtop 0800                                   __ptext0 0C3E  
                                 __ptext1 0F00                                   __ptext2 1264  
                                 __ptext3 0D62                                   __ptext4 1204  
                                 __ptext5 115E                                   __ptext6 0CEA  
                                 __ptext7 1222                                   __ptext8 1292  
                                 __ptext9 1134                     _v_Lcd12864DrawLineX_f 0FFA  
                   _v_Lcd12864DrawLineY_f 0FBE               __end_of_ECAN_ISR_ECAN_RXB0I 1292  
                                 _pio2_1t 0811                           __CFG_WRTAPP$OFF 000000  
                                 _ledtest 1264                     _OSCILLATOR_Initialize 1222  
                            __size_of_abs 003E                                   _invpio2 0819  
                                 _sendDat 0E22                                   _sendCom 1108  
                ??_PIN_MANAGER_Initialize 0001                           __CFG_WRTSAF$OFF 000000  
                             _I2C1PIRbits 003D79                __size_of_SYSTEM_Initialize 001E  
                   __size_of_display_char 006C                      end_of_initialization 119A  
                _INT2_SetInterruptHandler 123A            ??_INT2_DefaultInterruptHandler 0001  
                        ___rem_pio2f@F530 0032                             __Lmediumconst 0000  
                             GRam_Clear@a 0008                               GRam_Clear@b 0007  
                 __end_of_I2C1_Initialize 115E                                   postinc0 003FEE  
                              ??_position 0008                     __CFG_WDTCPS$WDTCPS_31 000000  
                   _INT1_InterruptHandler 0039                                 _PORTCbits 003FCC  
                            _display_char 0D62                    LCD_Draw_Two_Dot@StartX 0027  
                  LCD_Draw_Two_Dot@StartY 0016                                 _TRISCbits 003FC4  
                            ??_Draw_point 0009                          __CFG_FEXTOSC$OFF 000000  
                   __size_of_LCD_read_arm 0034                   __end_of_ECAN_Initialize 0C3E  
                       __size_of_INT0_ISR 000A                         __size_of_INT1_ISR 000A  
                       __size_of_INT2_ISR 000A                            __end_of_c1pio2 0855  
                          __end_of_c2pio2 0851                            __end_of_c3pio2 084D  
                          __end_of_c4pio2 0849              __end_of_INTERRUPT_Initialize 1296  
                          __end_of_s1pio2 0845                            __end_of_s2pio2 0841  
                          __end_of_s3pio2 083D                            __end_of_s4pio2 0839  
    __end_of_INT0_DefaultInterruptHandler 129C     __size_of_INT0_DefaultInterruptHandler 0002  
            _INT0_DefaultInterruptHandler 129A                                 _LcdString 10D6  
                      __end_of_Draw_point 0B86                    ?_v_Lcd12864DrawLineX_f 0011  
                  ?_v_Lcd12864DrawLineY_f 0011                            __end_of_pio2_1 0819  
                  ?_OSCILLATOR_Initialize 0001                               position@pos 0008  
                   __end_of_INT0_CallBack 1204                       start_initialization 1182  
         __size_of_PIN_MANAGER_Initialize 0078                               __end_of_abs 0FBE  
                   __end_of_INT1_CallBack 11E4                              _LCD_read_arm 106E  
                              ivt0x8_base 0008                     __end_of_INT2_CallBack 11C4  
                        ?_I2C1_Initialize 0001                          __CFG_LPBOREN$OFF 000000  
                        ??_PMD_Initialize 0001                                ?_LcdString 0007  
              __end_of_EXT_INT_Initialize 0F80             ?_INT0_DefaultInterruptHandler 0001  
                                ?_LCDInit 0001                               __pbssCOMRAM 002E  
        __end_of_INT0_SetInterruptHandler 1264                 __size_of_LCD_Draw_Two_Dot 01A4  
                   _INT2_InterruptHandler 0037                                sendDat@dat 0006  
                              sendCom@com 0006                          ?_ECAN_Initialize 0001  
                                ?_Readspi 0001                    _PIN_MANAGER_Initialize 0CEA  
                       LCD_Draw_Two_Dot@t 001D                         LCD_Draw_Two_Dot@x 001F  
                       LCD_Draw_Two_Dot@y 0021                                  _I2C1ADB1 003D6E  
                                _I2C1CON0 003D73                                  _I2C1CON1 003D74  
                                _I2C1CON2 003D75              ??_INTERRUPT_InterruptManager 0001  
                       __size_of_position 0040                    __CFG_BBSIZE$BBSIZE_512 000000  
                               fabsf@F463 002E                               __smallconst 0800  
                                ?_ledtest 0001                ??_INT2_SetInterruptHandler 0003  
                             _COMSTATbits 003F90                        Draw_point@ReadOldH 000E  
                      Draw_point@ReadOldL 000F                                  ?_sendDat 0001  
                                ?_sendCom 0001                                 _lastError 0036  
                                _CANRXPPS 003AED                            __size_of_Spi8b 0038  
                      Draw_point@Tier_bit 0010                      _INTERRUPT_Initialize 1292  
                              _I2C1SDAPPS 003AE4                                _I2C1SCLPPS 003AE3  
                                _INT0_ISR 1282                                  _INT1_ISR 1278  
                                _INT2_ISR 126E                                  _LATAbits 003FBA  
                                _LATBbits 003FBB                                  _LATCbits 003FBC  
       __size_of_INT1_SetInterruptHandler 000E                 ?_INT1_SetInterruptHandler 0001  
                                _PIE1bits 003991                                  _PIE4bits 003994  
                                _PIE5bits 003995                                  _PIE8bits 003998  
                     __CFG_BORV$VBOR_2P45 000000       __size_of_INTERRUPT_InterruptManager 0034  
                           _I2C1STAT0bits 003D77                             _I2C1STAT1bits 003D78  
                                _PIR1bits 0039A1                                  _PIR4bits 0039A4  
                                _PIR5bits 0039A5                                  _PIR8bits 0039A8  
                                _RXB0EIDH 003F83                                  _RXB0EIDL 003F84  
                                _RXB1EIDH 0037F3                                  _RXB1EIDL 0037F4  
                                _RXB0SIDH 003F81                                  _RXB0SIDL 003F82  
                                _RXF0EIDH 0037A2                                  _RXB1SIDH 0037F1  
                                _RXF0EIDL 0037A3                                  _RXB1SIDL 0037F2  
                                _RXF1EIDH 0037A6                                  _RXF1EIDL 0037A7  
                                _RXF2EIDH 0037AA                                  _RXF2EIDL 0037AB  
                                _RXF3EIDH 0037AE                                  _RXF3EIDL 0037AF  
                                _RXF4EIDH 0037B2                                  _RXF4EIDL 0037B3  
                                _RXF5EIDH 0037B6                                  _RXF5EIDL 0037B7  
                                _RXF0SIDH 0037A0                                  _RXF0SIDL 0037A1  
                                _RXF1SIDH 0037A4                                  _TXB0EIDH 0037E3  
                                _RXF1SIDL 0037A5                                  _TXB0EIDL 0037E4  
                                _RXF2SIDH 0037A8                                  _TXB1EIDH 0037D3  
                                _RXF2SIDL 0037A9                                  _TXB1EIDL 0037D4  
                                _RXF3SIDH 0037AC                                  _TXB2EIDH 0037C3  
                                _RXF3SIDL 0037AD                                  _TXB2EIDL 0037C4  
                                _RXF4SIDH 0037B0                                  _RXF4SIDL 0037B1  
                                _RXF5SIDH 0037B4                                  _RXF5SIDL 0037B5  
                                _RXM0EIDH 0037BA                                  _RXM0EIDL 0037BB  
                                _RXM1EIDH 0037BE                                  _TXB0SIDH 0037E1  
                                _RXM1EIDL 0037BF                                  _TXB0SIDL 0037E2  
                                _TXB1SIDH 0037D1                                  _TXB1SIDL 0037D2  
                                _TXB2SIDH 0037C1                                  _TXB2SIDL 0037C2  
                                _RXM0SIDH 0037B8                                  _RXM0SIDL 0037B9  
                                _RXM1SIDH 0037BC                                  _RXM1SIDL 0037BD  
                             ??_LcdString 0009                     LCD_Draw_Two_Dot@Color 0019  
                        __size_of_LCDInit 0054            ??_INT0_DefaultInterruptHandler 0001  
            __size_of_ECAN_ISR_ECAN_RXB0I 0006                                  Readspi@i 0001  
                             _INTCON0bits 003FD2                     ?_INTERRUPT_Initialize 0001  
                                Spi8b@dat 0001                  _INT0_SetInterruptHandler 1256  
                                __Hrparam 0000                          __size_of_Readspi 0048  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                 ??_v_Lcd12864DrawLineX_f 0014                   ??_v_Lcd12864DrawLineY_f 0014  
                 ??_OSCILLATOR_Initialize 0001                          __size_of_ledtest 000A  
                            _I2C1CON0bits 003D73                                  __pivt0x8 0008  
                        __size_of_sendDat 004C                          __size_of_sendCom 002C  
                         Draw_point@Color 0008                                  __ptext10 0F40  
                                __ptext11 123A                                  __ptext20 106E  
                                __ptext12 1248                                  __ptext21 0EB8  
                                __ptext13 1256                                  __ptext30 11A4  
                                __ptext22 0F80                                  __ptext14 0B86  
                                __ptext31 1296                                  __ptext23 0DCE  
                                __ptext15 10D6                                  __ptext32 1278  
                                __ptext24 0E6E                                  __ptext16 0866  
                                __ptext33 11C4                                  __ptext25 0E22  
                                __ptext17 0FBE                                  __ptext34 1298  
                                __ptext26 1108                                  __ptext18 0FFA  
                                __ptext35 1282                                  __ptext27 1036  
                                __ptext19 0A0A                                  __ptext36 11E4  
                                __ptext28 10A2                                  __ptext37 129A  
                                __ptext29 126E                                  __ptext38 128C  
                                __ptext39 0000                          _LCD_Draw_Two_Dot 0866  
                           __size_of_main 00AC                      __CFG_WDTCWS$WDTCWS_7 000000  
                                _position 0F00        __end_of_INTERRUPT_InterruptManager 10D6  
              _INTERRUPT_InterruptManager 10A2      __end_of_INT1_DefaultInterruptHandler 129A  
   __size_of_INT1_DefaultInterruptHandler 0002              _INT1_DefaultInterruptHandler 1298  
                               position@x 0009                                 position@y 0007  
                             _RXB0CONbits 003F80                               _RXB1CONbits 0037F0  
                  ??_INTERRUPT_Initialize 0001                        _EXT_INT_Initialize 0F40  
                                intlevel2 0000                   v_Lcd12864DrawLineX_f@X0 0015  
                 v_Lcd12864DrawLineX_f@X1 0011                   v_Lcd12864DrawLineY_f@Y0 0011  
                 v_Lcd12864DrawLineY_f@Y1 0012                            Draw_point@Tier 000D  
                 ?_PIN_MANAGER_Initialize 0001                         __CFG_CLKOUTEN$OFF 000000  
                     ?_EXT_INT_Initialize 0001                               _TXB0CONbits 0037E0  
                             _TXB1CONbits 0037D0                               _TXB2CONbits 0037C0  
                  __size_of_INT0_CallBack 0020                    __size_of_INT1_CallBack 0020  
                  __size_of_INT2_CallBack 0020                  __size_of_I2C1_Initialize 002A  
                    ??_EXT_INT_Initialize 0003             ?_INT1_DefaultInterruptHandler 0001  
                  v_Lcd12864DrawLineX_f@Y 0012                    v_Lcd12864DrawLineY_f@X 0014  
                           Draw_point@Row 000C                                LcdString@p 0007  
        __end_of_INT1_SetInterruptHandler 1256                                _GRam_Clear 0E6E  
          __end_of_PIN_MANAGER_Initialize 0D62                               Draw_point@X 000B  
                             Draw_point@Y 0007  
