

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Oct 08 15:34:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52  0000                     
    53                           ; Version 2.05
    54                           ; Generated 20/12/2018 GMT
    55                           ; 
    56                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F25K83 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	smallconst
    89  000800                     __psmallconst:
    90                           	opt callstack 0
    91  000800  00                 	db	0
    92  000801  6C3C               	dw	27708
    93  000803  3636               	dw	13878
    94  000805                     __end_of_S4:
    95                           	opt callstack 0
    96  000805  07CF               	dw	1999
    97  000807  B950               	dw	47440
    98  000809                     __end_of_S3:
    99                           	opt callstack 0
   100  000809  8884               	dw	34948
   101  00080B  3C08               	dw	15368
   102  00080D                     __end_of_S2:
   103                           	opt callstack 0
   104  00080D  AAAB               	dw	43691
   105  00080F  BE2A               	dw	48682
   106  000811                     __end_of_S1:
   107                           	opt callstack 0
   108  000811  85A3               	dw	34211
   109  000813  3288               	dw	12936
   110  000815                     __end_of_pio2_1t:
   111                           	opt callstack 0
   112  000815  0FDA               	dw	4058
   113  000817  3FC9               	dw	16329
   114  000819                     __end_of_pio2_1:
   115                           	opt callstack 0
   116  000819  F983               	dw	63875
   117  00081B  3F22               	dw	16162
   118  00081D                     __end_of_invpio2:
   119                           	opt callstack 0
   120  00081D  0000               	dw	0
   121  00081F  3F00               	dw	16128
   122  000821                     __end_of_half:
   123                           	opt callstack 0
   124  000821  0000               	dw	0
   125  000823  4B40               	dw	19264
   126  000825                     __end_of_toint:
   127                           	opt callstack 0
   128  000825  9A17               	dw	39447
   129  000827  37CC               	dw	14284
   130  000829                     __end_of_C3:
   131                           	opt callstack 0
   132  000829  043F               	dw	1087
   133  00082B  BAB6               	dw	47798
   134  00082D                     __end_of_C2:
   135                           	opt callstack 0
   136  00082D  AA9F               	dw	43679
   137  00082F  3D2A               	dw	15658
   138  000831                     __end_of_C1:
   139                           	opt callstack 0
   140  000831  0000               	dw	0
   141  000833  BF00               	dw	48896
   142  000835                     __end_of_C0:
   143                           	opt callstack 0
   144  000835  0FDB               	dw	4059
   145  000837  40C9               	dw	16585
   146  000839                     __end_of_s4pio2:
   147                           	opt callstack 0
   148  000839  CBE4               	dw	52196
   149  00083B  4096               	dw	16534
   150  00083D                     __end_of_s3pio2:
   151                           	opt callstack 0
   152  00083D  0FDB               	dw	4059
   153  00083F  4049               	dw	16457
   154  000841                     __end_of_s2pio2:
   155                           	opt callstack 0
   156  000841  0FDB               	dw	4059
   157  000843  3FC9               	dw	16329
   158  000845                     __end_of_s1pio2:
   159                           	opt callstack 0
   160  000845  0FDB               	dw	4059
   161  000847  40C9               	dw	16585
   162  000849                     __end_of_c4pio2:
   163                           	opt callstack 0
   164  000849  CBE4               	dw	52196
   165  00084B  4096               	dw	16534
   166  00084D                     __end_of_c3pio2:
   167                           	opt callstack 0
   168  00084D  0FDB               	dw	4059
   169  00084F  4049               	dw	16457
   170  000851                     __end_of_c2pio2:
   171                           	opt callstack 0
   172  000851  0FDB               	dw	4059
   173  000853  3FC9               	dw	16329
   174  000855                     __end_of_c1pio2:
   175                           	opt callstack 0
   176  000855                     STR_2:
   177                           
   178                           ; BSR set to: 57
   179  000855  C4                 	db	-60
   180  000856  E3                 	db	-29
   181  000857  BA                 	db	-70
   182  000858  C3                 	db	-61
   183  000859  C4                 	db	-60
   184  00085A  FA                 	db	-6
   185  00085B  BA                 	db	-70
   186  00085C  C3                 	db	-61
   187  00085D  00                 	db	0
   188  00085E                     STR_1:
   189                           
   190                           ; BSR set to: 57
   191  00085E  64                 	db	100	;'d'
   192  00085F  64                 	db	100	;'d'
   193  000860  64                 	db	100	;'d'
   194  000861  64                 	db	100	;'d'
   195  000862  64                 	db	100	;'d'
   196  000863  64                 	db	100	;'d'
   197  000864  00                 	db	0
   198                           
   199                           ; #config settings
   200  000865  00                 	db	0	; dummy byte at the end
   201  0000                     
   202                           	psect	nvCOMRAM
   203  000037                     __pnvCOMRAM:
   204                           	opt callstack 0
   205  000037                     _INT2_InterruptHandler:
   206                           	opt callstack 0
   207  000037                     	ds	2
   208  000039                     _INT1_InterruptHandler:
   209                           	opt callstack 0
   210  000039                     	ds	2
   211  00003B                     _INT0_InterruptHandler:
   212                           	opt callstack 0
   213  00003B                     	ds	2
   214  0000                     _RXB1D7	set	14333
   215  0000                     _RXB1D6	set	14332
   216  0000                     _RXB1D5	set	14331
   217  0000                     _RXB1D4	set	14330
   218  0000                     _RXB1D3	set	14329
   219  0000                     _RXB1D2	set	14328
   220  0000                     _RXB1D1	set	14327
   221  0000                     _RXB1D0	set	14326
   222  0000                     _RXB1DLC	set	14325
   223  0000                     _RXB1SIDH	set	14321
   224  0000                     _RXB1EIDL	set	14324
   225  0000                     _RXB1EIDH	set	14323
   226  0000                     _RXB1SIDL	set	14322
   227  0000                     _RXB1CONbits	set	14320
   228  0000                     _TXB2D7	set	14285
   229  0000                     _TXB2D6	set	14284
   230  0000                     _TXB2D5	set	14283
   231  0000                     _TXB2D4	set	14282
   232  0000                     _TXB2D3	set	14281
   233  0000                     _TXB2D2	set	14280
   234  0000                     _TXB2D1	set	14279
   235  0000                     _TXB2D0	set	14278
   236  0000                     _TXB2DLC	set	14277
   237  0000                     _TXB2SIDL	set	14274
   238  0000                     _TXB2SIDH	set	14273
   239  0000                     _TXB2EIDL	set	14276
   240  0000                     _TXB2EIDH	set	14275
   241  0000                     _TXB2CONbits	set	14272
   242  0000                     _TXB1D7	set	14301
   243  0000                     _TXB1D6	set	14300
   244  0000                     _TXB1D5	set	14299
   245  0000                     _TXB1D4	set	14298
   246  0000                     _TXB1D3	set	14297
   247  0000                     _TXB1D2	set	14296
   248  0000                     _TXB1D1	set	14295
   249  0000                     _TXB1D0	set	14294
   250  0000                     _TXB1DLC	set	14293
   251  0000                     _TXB1SIDL	set	14290
   252  0000                     _TXB1SIDH	set	14289
   253  0000                     _TXB1EIDL	set	14292
   254  0000                     _TXB1EIDH	set	14291
   255  0000                     _TXB1CONbits	set	14288
   256  0000                     _TXB0D7	set	14317
   257  0000                     _TXB0D6	set	14316
   258  0000                     _TXB0D5	set	14315
   259  0000                     _TXB0D4	set	14314
   260  0000                     _TXB0D3	set	14313
   261  0000                     _TXB0D2	set	14312
   262  0000                     _TXB0D1	set	14311
   263  0000                     _TXB0D0	set	14310
   264  0000                     _TXB0DLC	set	14309
   265  0000                     _TXB0SIDL	set	14306
   266  0000                     _TXB0SIDH	set	14305
   267  0000                     _TXB0EIDL	set	14308
   268  0000                     _TXB0EIDH	set	14307
   269  0000                     _TXB0CONbits	set	14304
   270  0000                     _BRGCON3	set	14085
   271  0000                     _BRGCON2	set	14084
   272  0000                     _BRGCON1	set	14083
   273  0000                     _RXF5SIDL	set	14261
   274  0000                     _RXF5SIDH	set	14260
   275  0000                     _RXF5EIDL	set	14263
   276  0000                     _RXF5EIDH	set	14262
   277  0000                     _RXF4SIDL	set	14257
   278  0000                     _RXF4SIDH	set	14256
   279  0000                     _RXF4EIDL	set	14259
   280  0000                     _RXF4EIDH	set	14258
   281  0000                     _RXF3SIDL	set	14253
   282  0000                     _RXF3SIDH	set	14252
   283  0000                     _RXF3EIDL	set	14255
   284  0000                     _RXF3EIDH	set	14254
   285  0000                     _RXF2SIDL	set	14249
   286  0000                     _RXF2SIDH	set	14248
   287  0000                     _RXF2EIDL	set	14251
   288  0000                     _RXF2EIDH	set	14250
   289  0000                     _RXF1SIDL	set	14245
   290  0000                     _RXF1SIDH	set	14244
   291  0000                     _RXF1EIDL	set	14247
   292  0000                     _RXF1EIDH	set	14246
   293  0000                     _RXF0SIDL	set	14241
   294  0000                     _RXF0SIDH	set	14240
   295  0000                     _RXF0EIDL	set	14243
   296  0000                     _RXF0EIDH	set	14242
   297  0000                     _RXM1SIDL	set	14269
   298  0000                     _RXM1SIDH	set	14268
   299  0000                     _RXM1EIDL	set	14271
   300  0000                     _RXM1EIDH	set	14270
   301  0000                     _RXM0SIDL	set	14265
   302  0000                     _RXM0SIDH	set	14264
   303  0000                     _RXM0EIDL	set	14267
   304  0000                     _RXM0EIDH	set	14266
   305  0000                     _CIOCON	set	14080
   306  0000                     _PMD7	set	14791
   307  0000                     _PMD6	set	14790
   308  0000                     _PMD5	set	14789
   309  0000                     _PMD4	set	14788
   310  0000                     _PMD3	set	14787
   311  0000                     _PMD2	set	14786
   312  0000                     _PMD1	set	14785
   313  0000                     _PMD0	set	14784
   314  0000                     _OSCTUNE	set	14814
   315  0000                     _OSCFRQ	set	14815
   316  0000                     _OSCEN	set	14813
   317  0000                     _OSCCON3	set	14811
   318  0000                     _OSCCON1	set	14809
   319  0000                     _PIE8bits	set	14744
   320  0000                     _PIE4bits	set	14740
   321  0000                     _PIE1bits	set	14737
   322  0000                     _PIR8bits	set	14760
   323  0000                     _PIR4bits	set	14756
   324  0000                     _PIR1bits	set	14753
   325  0000                     _PIE5bits	set	14741
   326  0000                     _PIR5bits	set	14757
   327  0000                     _I2C1SCLPPS	set	15075
   328  0000                     _INT1PPS	set	15041
   329  0000                     _INT2PPS	set	15042
   330  0000                     _RB4PPS	set	14860
   331  0000                     _CANRXPPS	set	15085
   332  0000                     _RC1PPS	set	14865
   333  0000                     _INT0PPS	set	15040
   334  0000                     _I2C1SDAPPS	set	15076
   335  0000                     _RC0PPS	set	14864
   336  0000                     _INLVLE	set	14980
   337  0000                     _INLVLC	set	14948
   338  0000                     _INLVLB	set	14932
   339  0000                     _INLVLA	set	14916
   340  0000                     _SLRCONC	set	14947
   341  0000                     _SLRCONB	set	14931
   342  0000                     _SLRCONA	set	14915
   343  0000                     _ODCONC	set	14946
   344  0000                     _ODCONB	set	14930
   345  0000                     _ODCONA	set	14914
   346  0000                     _WPUC	set	14945
   347  0000                     _WPUA	set	14913
   348  0000                     _WPUB	set	14929
   349  0000                     _WPUE	set	14977
   350  0000                     _ANSELA	set	14912
   351  0000                     _ANSELB	set	14928
   352  0000                     _ANSELC	set	14944
   353  0000                     _I2C1ADB1	set	15726
   354  0000                     _I2C1CNT	set	15724
   355  0000                     _I2C1PIRbits	set	15737
   356  0000                     _I2C1RXB	set	15722
   357  0000                     _I2C1TXB	set	15723
   358  0000                     _I2C1STAT1bits	set	15736
   359  0000                     _I2C1STAT0bits	set	15735
   360  0000                     _I2C1ERR	set	15734
   361  0000                     _I2C1PIR	set	15737
   362  0000                     _I2C1CON0	set	15731
   363  0000                     _I2C1CLK	set	15739
   364  0000                     _I2C1CON2	set	15733
   365  0000                     _I2C1CON1	set	15732
   366  0000                     _I2C1CON0bits	set	15731
   367  0000                     _PORTCbits	set	16332
   368  0000                     _LATCbits	set	16316
   369  0000                     _LATAbits	set	16314
   370  0000                     _LATBbits	set	16315
   371  0000                     _TRISC	set	16324
   372  0000                     _TRISB	set	16323
   373  0000                     _TRISA	set	16322
   374  0000                     _LATC	set	16316
   375  0000                     _LATB	set	16315
   376  0000                     _LATA	set	16314
   377  0000                     _INTCON0bits	set	16338
   378  0000                     _COMSTATbits	set	16272
   379  0000                     _RXB0D7	set	16269
   380  0000                     _RXB0D6	set	16268
   381  0000                     _RXB0D5	set	16267
   382  0000                     _RXB0D4	set	16266
   383  0000                     _RXB0D3	set	16265
   384  0000                     _RXB0D2	set	16264
   385  0000                     _RXB0D1	set	16263
   386  0000                     _RXB0D0	set	16262
   387  0000                     _RXB0DLC	set	16261
   388  0000                     _RXB0SIDH	set	16257
   389  0000                     _RXB0EIDL	set	16260
   390  0000                     _RXB0EIDH	set	16259
   391  0000                     _RXB0SIDL	set	16258
   392  0000                     _RXB0CONbits	set	16256
   393  0000                     _ECANCON	set	16273
   394  0000                     _CANSTAT	set	16270
   395  0000                     _CANCON	set	16271
   396                           
   397                           	psect	cinit
   398  00110C                     __pcinit:
   399                           	opt callstack 0
   400  00110C                     start_initialization:
   401                           	opt callstack 0
   402  00110C                     __initialization:
   403                           	opt callstack 0
   404                           
   405                           ; Clear objects allocated to COMRAM (9 bytes)
   406  00110C  EE00  F02E         	lfsr	0,__pbssCOMRAM
   407  001110  0E09               	movlw	9
   408  001112                     clear_0:
   409  001112  6AEE               	clrf	postinc0,c
   410  001114  06E8               	decf	wreg,f,c
   411  001116  E1FD               	bnz	clear_0
   412                           
   413                           ;
   414                           ; Setup IVTBASE
   415                           ;
   416  001118  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   417  00111A  6ED5               	movwf	213,c
   418  00111C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   419  00111E  6ED6               	movwf	214,c
   420  001120  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   421  001122  6ED7               	movwf	215,c
   422  001124                     end_of_initialization:
   423                           	opt callstack 0
   424  001124                     __end_of__initialization:
   425                           	opt callstack 0
   426  001124  0E00               	movlw	low (__Lmediumconst shr (0+16))
   427  001126  6EF8               	movwf	tblptru,c
   428  001128  0100               	movlb	0
   429  00112A  EF1F  F006         	goto	_main	;jump to C main() function
   430                           
   431                           	psect	bssCOMRAM
   432  00002E                     __pbssCOMRAM:
   433                           	opt callstack 0
   434  00002E                     	ds	4
   435  000032                     	ds	4
   436  000036                     _lastError:
   437                           	opt callstack 0
   438  000036                     	ds	1
   439                           
   440                           	psect	cstackCOMRAM
   441  000001                     __pcstackCOMRAM:
   442                           	opt callstack 0
   443  000001                     ??_ECAN_Initialize:
   444  000001                     ?_abs:
   445                           	opt callstack 0
   446  000001                     Spi8b@dat:
   447                           	opt callstack 0
   448  000001                     Readspi@i:
   449                           	opt callstack 0
   450  000001                     INT0_SetInterruptHandler@InterruptHandler:
   451                           	opt callstack 0
   452  000001                     INT1_SetInterruptHandler@InterruptHandler:
   453                           	opt callstack 0
   454  000001                     INT2_SetInterruptHandler@InterruptHandler:
   455                           	opt callstack 0
   456  000001                     abs@a:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x0
   460  000001                     	ds	1
   461  000002                     Spi8b@i:
   462                           	opt callstack 0
   463  000002                     Readspi@dat:
   464                           	opt callstack 0
   465                           
   466                           ; 1 bytes @ 0x1
   467  000002                     	ds	1
   468  000003                     ??_sendCom:
   469  000003                     ??_sendDat:
   470  000003                     ??_abs:
   471  000003                     ??_LCD_read_arm:
   472                           
   473                           ; 1 bytes @ 0x2
   474  000003                     	ds	1
   475  000004                     sendCom@comh:
   476                           	opt callstack 0
   477  000004                     sendDat@dath:
   478                           	opt callstack 0
   479  000004                     LCD_read_arm@a1:
   480                           	opt callstack 0
   481                           
   482                           ; 1 bytes @ 0x3
   483  000004                     	ds	1
   484  000005                     sendCom@coml:
   485                           	opt callstack 0
   486  000005                     sendDat@datl:
   487                           	opt callstack 0
   488  000005                     LCD_read_arm@a2:
   489                           	opt callstack 0
   490                           
   491                           ; 1 bytes @ 0x4
   492  000005                     	ds	1
   493  000006                     sendCom@com:
   494                           	opt callstack 0
   495  000006                     sendDat@dat:
   496                           	opt callstack 0
   497  000006                     LCD_read_arm@a3:
   498                           	opt callstack 0
   499                           
   500                           ; 1 bytes @ 0x5
   501  000006                     	ds	1
   502  000007                     ??_LCDInit:
   503  000007                     position@y:
   504                           	opt callstack 0
   505  000007                     Draw_point@Y:
   506                           	opt callstack 0
   507  000007                     display_char@y:
   508                           	opt callstack 0
   509  000007                     LcdString@p:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x6
   513  000007                     	ds	1
   514  000008                     position@pos:
   515                           	opt callstack 0
   516  000008                     Draw_point@Color:
   517                           	opt callstack 0
   518                           
   519                           ; 1 bytes @ 0x7
   520  000008                     	ds	1
   521  000009                     ??_Draw_point:
   522  000009                     position@x:
   523                           	opt callstack 0
   524  000009                     display_char@x:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x8
   528  000009                     	ds	2
   529  00000B                     Draw_point@X:
   530                           	opt callstack 0
   531  00000B                     display_char@char_length:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0xA
   535  00000B                     	ds	1
   536  00000C                     Draw_point@Row:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0xB
   540  00000C                     	ds	1
   541  00000D                     Draw_point@Tier:
   542                           	opt callstack 0
   543  00000D                     display_char@p:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0xC
   547  00000D                     	ds	1
   548  00000E                     Draw_point@ReadOldH:
   549                           	opt callstack 0
   550                           
   551                           ; 1 bytes @ 0xD
   552  00000E                     	ds	1
   553  00000F                     ??_display_char:
   554  00000F                     Draw_point@ReadOldL:
   555                           	opt callstack 0
   556                           
   557                           ; 1 bytes @ 0xE
   558  00000F                     	ds	1
   559  000010                     Draw_point@Tier_bit:
   560                           	opt callstack 0
   561                           
   562                           ; 1 bytes @ 0xF
   563  000010                     	ds	1
   564  000011                     v_Lcd12864DrawLineX_f@X1:
   565                           	opt callstack 0
   566  000011                     v_Lcd12864DrawLineY_f@Y0:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x10
   570  000011                     	ds	1
   571  000012                     display_char@i:
   572                           	opt callstack 0
   573  000012                     v_Lcd12864DrawLineX_f@Y:
   574                           	opt callstack 0
   575  000012                     v_Lcd12864DrawLineY_f@Y1:
   576                           	opt callstack 0
   577                           
   578                           ; 1 bytes @ 0x11
   579  000012                     	ds	1
   580  000013                     v_Lcd12864DrawLineX_f@Color:
   581                           	opt callstack 0
   582  000013                     v_Lcd12864DrawLineY_f@Color:
   583                           	opt callstack 0
   584                           
   585                           ; 1 bytes @ 0x12
   586  000013                     	ds	1
   587  000014                     v_Lcd12864DrawLineX_f@Temp:
   588                           	opt callstack 0
   589  000014                     v_Lcd12864DrawLineY_f@X:
   590                           	opt callstack 0
   591                           
   592                           ; 1 bytes @ 0x13
   593  000014                     	ds	1
   594  000015                     v_Lcd12864DrawLineX_f@X0:
   595                           	opt callstack 0
   596  000015                     v_Lcd12864DrawLineY_f@Temp:
   597                           	opt callstack 0
   598                           
   599                           ; 1 bytes @ 0x14
   600  000015                     	ds	1
   601  000016                     LCD_Draw_Two_Dot@StartY:
   602                           	opt callstack 0
   603                           
   604                           ; 1 bytes @ 0x15
   605  000016                     	ds	1
   606  000017                     LCD_Draw_Two_Dot@EndX:
   607                           	opt callstack 0
   608                           
   609                           ; 1 bytes @ 0x16
   610  000017                     	ds	1
   611  000018                     LCD_Draw_Two_Dot@EndY:
   612                           	opt callstack 0
   613                           
   614                           ; 1 bytes @ 0x17
   615  000018                     	ds	1
   616  000019                     LCD_Draw_Two_Dot@Color:
   617                           	opt callstack 0
   618                           
   619                           ; 1 bytes @ 0x18
   620  000019                     	ds	1
   621  00001A                     ??_LCD_Draw_Two_Dot:
   622                           
   623                           ; 1 bytes @ 0x19
   624  00001A                     	ds	3
   625  00001D                     LCD_Draw_Two_Dot@t:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x1C
   629  00001D                     	ds	2
   630  00001F                     LCD_Draw_Two_Dot@x:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0x1E
   634  00001F                     	ds	2
   635  000021                     LCD_Draw_Two_Dot@y:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x20
   639  000021                     	ds	2
   640  000023                     LCD_Draw_Two_Dot@incx:
   641                           	opt callstack 0
   642                           
   643                           ; 1 bytes @ 0x22
   644  000023                     	ds	1
   645  000024                     LCD_Draw_Two_Dot@incy:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x23
   649  000024                     	ds	1
   650  000025                     LCD_Draw_Two_Dot@distance:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x24
   654  000025                     	ds	2
   655  000027                     LCD_Draw_Two_Dot@StartX:
   656                           	opt callstack 0
   657                           
   658                           ; 1 bytes @ 0x26
   659  000027                     	ds	1
   660  000028                     LCD_Draw_Two_Dot@delta_x:
   661                           	opt callstack 0
   662                           
   663                           ; 2 bytes @ 0x27
   664  000028                     	ds	2
   665  00002A                     LCD_Draw_Two_Dot@delta_y:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0x29
   669  00002A                     	ds	2
   670  00002C                     ??_main:
   671                           
   672                           ; 1 bytes @ 0x2B
   673  00002C                     	ds	2
   674                           
   675 ;;
   676 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   677 ;;
   678 ;; *************** function _main *****************
   679 ;; Defined at:
   680 ;;		line 57 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   694 ;;      Params:         0       0       0       0       0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0
   696 ;;      Temps:          2       0       0       0       0       0       0       0       0
   697 ;;      Totals:         2       0       0       0       0       0       0       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels required when called:    9
   700 ;; This function calls:
   701 ;;		_LCDInit
   702 ;;		_LCD_Draw_Two_Dot
   703 ;;		_LcdString
   704 ;;		_SYSTEM_Initialize
   705 ;;		_display_char
   706 ;;		_ledtest
   707 ;;		_position
   708 ;;		_sendDat
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715  000C3E                     __ptext0:
   716                           	opt callstack 0
   717  000C3E                     _main:
   718                           	opt callstack 22
   719                           
   720                           ;main.c: 59:     SYSTEM_Initialize();
   721                           
   722                           ;incstack = 0
   723  000C3E  ECC7  F008         	call	_SYSTEM_Initialize	;wreg free
   724                           
   725                           ;main.c: 70:     LCDInit();
   726  000C42  ECDA  F006         	call	_LCDInit	;wreg free
   727  000C46  8ABB               	bsf	16315,5,c	;volatile
   728  000C48  8ABA               	bsf	16314,5,c	;volatile
   729  000C4A  88BC               	bsf	16316,4,c	;volatile
   730  000C4C  86BC               	bsf	16316,3,c	;volatile
   731  000C4E                     l3154:
   732                           
   733                           ;main.c: 82:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   734  000C4E  0E02               	movlw	2
   735  000C50  6E2D               	movwf	(??_main+1)& (0+255),c
   736  000C52  0E45               	movlw	69
   737  000C54  6E2C               	movwf	??_main& (0+255),c
   738  000C56  0EAA               	movlw	170
   739  000C58                     u1267:
   740  000C58  2EE8               	decfsz	wreg,f,c
   741  000C5A  D7FE               	bra	u1267
   742  000C5C  2E2C               	decfsz	??_main& (0+255),f,c
   743  000C5E  D7FC               	bra	u1267
   744  000C60  2E2D               	decfsz	(??_main+1)& (0+255),f,c
   745  000C62  D7FA               	bra	u1267
   746                           
   747                           ;main.c: 84:         position(1, 1);
   748  000C64  0E01               	movlw	1
   749  000C66  6E07               	movwf	position@y,c
   750  000C68  0E01               	movlw	1
   751  000C6A  EC2A  F007         	call	_position
   752                           
   753                           ;main.c: 85:         LcdString("dddddd");
   754  000C6E  0E5E               	movlw	low STR_1
   755  000C70  6E07               	movwf	LcdString@p,c
   756  000C72  0E08               	movlw	high STR_1
   757  000C74  6E08               	movwf	LcdString@p+1,c
   758  000C76  EC17  F008         	call	_LcdString	;wreg free
   759                           
   760                           ;main.c: 86:         position(2,0);
   761  000C7A  0E00               	movlw	0
   762  000C7C  6E07               	movwf	position@y,c
   763  000C7E  0E02               	movlw	2
   764  000C80  EC2A  F007         	call	_position
   765                           
   766                           ;main.c: 87:         sendDat(0xa1);
   767  000C84  0EA1               	movlw	161
   768  000C86  EC04  F007         	call	_sendDat
   769                           
   770                           ;main.c: 88:         sendDat(0xF0);
   771  000C8A  0EF0               	movlw	240
   772  000C8C  EC04  F007         	call	_sendDat
   773                           
   774                           ;main.c: 89:         display_char(2,9,4,"ÄãºÃÄúºÃ");
   775  000C90  0E00               	movlw	0
   776  000C92  6E08               	movwf	display_char@y+1,c
   777  000C94  0E02               	movlw	2
   778  000C96  6E07               	movwf	display_char@y,c
   779  000C98  0E00               	movlw	0
   780  000C9A  6E0A               	movwf	display_char@x+1,c
   781  000C9C  0E09               	movlw	9
   782  000C9E  6E09               	movwf	display_char@x,c
   783  000CA0  0E00               	movlw	0
   784  000CA2  6E0C               	movwf	display_char@char_length+1,c
   785  000CA4  0E04               	movlw	4
   786  000CA6  6E0B               	movwf	display_char@char_length,c
   787  000CA8  0E55               	movlw	low STR_2
   788  000CAA  6E0D               	movwf	display_char@p,c
   789  000CAC  0E08               	movlw	high STR_2
   790  000CAE  6E0E               	movwf	display_char@p+1,c
   791  000CB0  ECA4  F006         	call	_display_char	;wreg free
   792                           
   793                           ;main.c: 90:         LCD_Draw_Two_Dot( 12, 0, 127, 63, 1 );
   794  000CB4  0E00               	movlw	0
   795  000CB6  6E16               	movwf	LCD_Draw_Two_Dot@StartY,c
   796  000CB8  0E7F               	movlw	127
   797  000CBA  6E17               	movwf	LCD_Draw_Two_Dot@EndX,c
   798  000CBC  0E3F               	movlw	63
   799  000CBE  6E18               	movwf	LCD_Draw_Two_Dot@EndY,c
   800  000CC0  0E01               	movlw	1
   801  000CC2  6E19               	movwf	LCD_Draw_Two_Dot@Color,c
   802  000CC4  0E0C               	movlw	12
   803  000CC6  EC33  F004         	call	_LCD_Draw_Two_Dot
   804                           
   805                           ;main.c: 95:         ledtest();
   806  000CCA  ECF7  F008         	call	_ledtest	;wreg free
   807  000CCE  D7BF               	goto	l3154
   808  000CD0                     __end_of_main:
   809                           	opt callstack 0
   810                           
   811 ;; *************** function _position *****************
   812 ;; Defined at:
   813 ;;		line 87 in file "USER_C/lcd.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  x               1    wreg     unsigned char 
   816 ;;  y               1    6[COMRAM] unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  x               1    8[COMRAM] unsigned char 
   819 ;;  pos             1    7[COMRAM] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         1       0       0       0       0       0       0       0       0
   830 ;;      Locals:         2       0       0       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0
   832 ;;      Totals:         3       0       0       0       0       0       0       0       0
   833 ;;Total ram usage:        3 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    6
   836 ;; This function calls:
   837 ;;		_sendCom
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text1
   844  000E54                     __ptext1:
   845                           	opt callstack 0
   846  000E54                     _position:
   847                           	opt callstack 24
   848                           
   849                           ;incstack = 0
   850                           ;position@x stored from wreg
   851  000E54  6E09               	movwf	position@x,c
   852                           
   853                           ;USER_C/lcd.c: 88:     char pos;;USER_C/lcd.c: 89:     if (x == 1)
   854  000E56  0409               	decf	position@x,w,c
   855  000E58  A4D8               	btfss	status,2,c
   856  000E5A  D003               	goto	l805
   857                           
   858                           ;USER_C/lcd.c: 90:         pos = 0x80 + y;
   859  000E5C  5007               	movf	position@y,w,c
   860  000E5E  0F80               	addlw	128
   861  000E60  6E08               	movwf	position@pos,c
   862  000E62                     l805:
   863                           
   864                           ;USER_C/lcd.c: 91:     if (x == 2)
   865  000E62  0E02               	movlw	2
   866  000E64  1809               	xorwf	position@x,w,c
   867  000E66  A4D8               	btfss	status,2,c
   868  000E68  D003               	goto	l806
   869                           
   870                           ;USER_C/lcd.c: 92:         pos = 0x90 + y;
   871  000E6A  5007               	movf	position@y,w,c
   872  000E6C  0F90               	addlw	144
   873  000E6E  6E08               	movwf	position@pos,c
   874  000E70                     l806:
   875                           
   876                           ;USER_C/lcd.c: 93:     if (x == 3)
   877  000E70  0E03               	movlw	3
   878  000E72  1809               	xorwf	position@x,w,c
   879  000E74  A4D8               	btfss	status,2,c
   880  000E76  D003               	goto	l807
   881                           
   882                           ;USER_C/lcd.c: 94:         pos = 0x88 + y;
   883  000E78  5007               	movf	position@y,w,c
   884  000E7A  0F88               	addlw	136
   885  000E7C  6E08               	movwf	position@pos,c
   886  000E7E                     l807:
   887                           
   888                           ;USER_C/lcd.c: 95:     if (x == 4)
   889  000E7E  0E04               	movlw	4
   890  000E80  1809               	xorwf	position@x,w,c
   891  000E82  A4D8               	btfss	status,2,c
   892  000E84  D003               	goto	l3098
   893                           
   894                           ;USER_C/lcd.c: 96:         pos = 0x98 + y;
   895  000E86  5007               	movf	position@y,w,c
   896  000E88  0F98               	addlw	152
   897  000E8A  6E08               	movwf	position@pos,c
   898  000E8C                     l3098:
   899                           
   900                           ;USER_C/lcd.c: 97:     sendCom(pos);
   901  000E8C  5008               	movf	position@pos,w,c
   902  000E8E  EC49  F008         	call	_sendCom
   903  000E92  0012               	return		;funcret
   904  000E94                     __end_of_position:
   905                           	opt callstack 0
   906                           
   907 ;; *************** function _ledtest *****************
   908 ;; Defined at:
   909 ;;		line 3 in file "USER_C/led.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		None
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    4
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text2
   938  0011EE                     __ptext2:
   939                           	opt callstack 0
   940  0011EE                     _ledtest:
   941                           	opt callstack 26
   942                           
   943                           ;incstack = 0
   944                           ;USER_C/led.c: 5:     do { LATBbits.LATB7 = 1; } while(0);
   945  0011EE  8EBB               	bsf	16315,7,c	;volatile
   946                           
   947                           ;USER_C/led.c: 6:     do { LATAbits.LATA1 = 1; } while(0);
   948  0011F0  82BA               	bsf	16314,1,c	;volatile
   949                           
   950                           ;USER_C/led.c: 7:     do { LATAbits.LATA2 = 0; } while(0);
   951  0011F2  94BA               	bcf	16314,2,c	;volatile
   952                           
   953                           ;USER_C/led.c: 8:     do { LATAbits.LATA0 = 1; } while(0);
   954  0011F4  80BA               	bsf	16314,0,c	;volatile
   955  0011F6  0012               	return		;funcret
   956  0011F8                     __end_of_ledtest:
   957                           	opt callstack 0
   958                           
   959 ;; *************** function _display_char *****************
   960 ;; Defined at:
   961 ;;		line 4 in file "AP_C/AP_LCD.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  y               2    6[COMRAM] int 
   964 ;;  x               2    8[COMRAM] int 
   965 ;;  char_length     2   10[COMRAM] int 
   966 ;;  p               2   12[COMRAM] PTR unsigned char 
   967 ;;		 -> STR_2(9), 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  i               1   17[COMRAM] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   979 ;;      Params:         8       0       0       0       0       0       0       0       0
   980 ;;      Locals:         1       0       0       0       0       0       0       0       0
   981 ;;      Temps:          3       0       0       0       0       0       0       0       0
   982 ;;      Totals:        12       0       0       0       0       0       0       0       0
   983 ;;Total ram usage:       12 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    6
   986 ;; This function calls:
   987 ;;		_sendCom
   988 ;;		_sendDat
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text3
   995  000D48                     __ptext3:
   996                           	opt callstack 0
   997  000D48                     _display_char:
   998                           	opt callstack 24
   999                           
  1000                           ;AP_C/AP_LCD.c: 6:     sendCom(0x30);
  1001                           
  1002                           ;incstack = 0
  1003  000D48  0E30               	movlw	48
  1004  000D4A  EC49  F008         	call	_sendCom
  1005                           
  1006                           ;AP_C/AP_LCD.c: 7:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1007  000D4E  D000               	nop2		;2 cycle nop
  1008                           
  1009                           ;AP_C/AP_LCD.c: 9:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1010  000D50  D000               	nop2		;2 cycle nop
  1011                           
  1012                           ;AP_C/AP_LCD.c: 10:     sendCom(0x80 + (y - 1)*(0x10)+(x - 1));
  1013  000D52  5007               	movf	display_char@y,w,c
  1014  000D54  0D10               	mullw	16
  1015  000D56  50F3               	movf	prodl,w,c
  1016  000D58  2409               	addwf	display_char@x,w,c
  1017  000D5A  0F6F               	addlw	111
  1018  000D5C  EC49  F008         	call	_sendCom
  1019                           
  1020                           ;AP_C/AP_LCD.c: 11:     for (i = 0; i < char_length; i++) {
  1021  000D60  0E00               	movlw	0
  1022  000D62  6E12               	movwf	display_char@i,c
  1023  000D64  D019               	goto	l3016
  1024  000D66                     l3010:
  1025                           
  1026                           ;AP_C/AP_LCD.c: 12:         sendDat(*p);
  1027  000D66  0060  F037  FFF6   	movff	display_char@p,tblptrl
  1028  000D6C  0060  F03B  FFF7   	movff	display_char@p+1,tblptrh
  1029  000D72                     	if	0	;tblptru may be non-zero
  1030  000D72                     	endif
  1031  000D72                     	if	0	;tblptru may be non-zero
  1032  000D72                     	endif
  1033  000D72  0008               	tblrd		*
  1034  000D74  50F5               	movf	tablat,w,c
  1035  000D76  EC04  F007         	call	_sendDat
  1036                           
  1037                           ;AP_C/AP_LCD.c: 13:         p++;
  1038  000D7A  4A0D               	infsnz	display_char@p,f,c
  1039  000D7C  2A0E               	incf	display_char@p+1,f,c
  1040                           
  1041                           ;AP_C/AP_LCD.c: 14:         sendDat(*p);
  1042  000D7E  0060  F037  FFF6   	movff	display_char@p,tblptrl
  1043  000D84  0060  F03B  FFF7   	movff	display_char@p+1,tblptrh
  1044  000D8A                     	if	0	;tblptru may be non-zero
  1045  000D8A                     	endif
  1046  000D8A                     	if	0	;tblptru may be non-zero
  1047  000D8A                     	endif
  1048  000D8A  0008               	tblrd		*
  1049  000D8C  50F5               	movf	tablat,w,c
  1050  000D8E  EC04  F007         	call	_sendDat
  1051                           
  1052                           ;AP_C/AP_LCD.c: 15:         p++;
  1053  000D92  4A0D               	infsnz	display_char@p,f,c
  1054  000D94  2A0E               	incf	display_char@p+1,f,c
  1055                           
  1056                           ;AP_C/AP_LCD.c: 16:     }
  1057  000D96  2A12               	incf	display_char@i,f,c
  1058  000D98                     l3016:
  1059  000D98  5012               	movf	display_char@i,w,c
  1060  000D9A  6E0F               	movwf	??_display_char& (0+255),c
  1061  000D9C  6A10               	clrf	(??_display_char+1)& (0+255),c
  1062  000D9E  500B               	movf	display_char@char_length,w,c
  1063  000DA0  5C0F               	subwf	??_display_char,w,c
  1064  000DA2  5010               	movf	??_display_char+1,w,c
  1065  000DA4  0A80               	xorlw	128
  1066  000DA6  6E11               	movwf	(??_display_char+2)& (0+255),c
  1067  000DA8  500C               	movf	display_char@char_length+1,w,c
  1068  000DAA  0A80               	xorlw	128
  1069  000DAC  5811               	subwfb	(??_display_char+2)& (0+255),w,c
  1070  000DAE  B0D8               	btfsc	status,0,c
  1071  000DB0  0012               	return	
  1072  000DB2  D7D9               	goto	l3010
  1073  000DB4                     __end_of_display_char:
  1074                           	opt callstack 0
  1075                           
  1076 ;; *************** function _SYSTEM_Initialize *****************
  1077 ;; Defined at:
  1078 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    6
  1099 ;; This function calls:
  1100 ;;		_ECAN_Initialize
  1101 ;;		_EXT_INT_Initialize
  1102 ;;		_I2C1_Initialize
  1103 ;;		_INTERRUPT_Initialize
  1104 ;;		_OSCILLATOR_Initialize
  1105 ;;		_PIN_MANAGER_Initialize
  1106 ;;		_PMD_Initialize
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text4
  1113  00118E                     __ptext4:
  1114                           	opt callstack 0
  1115  00118E                     _SYSTEM_Initialize:
  1116                           	opt callstack 24
  1117                           
  1118                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1119                           
  1120                           ;incstack = 0
  1121  00118E  EC0E  F009         	call	_INTERRUPT_Initialize	;wreg free
  1122                           
  1123                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1124  001192  EC74  F008         	call	_PMD_Initialize	;wreg free
  1125                           
  1126                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1127  001196  EC68  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  1128                           
  1129                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1130  00119A  ECD6  F008         	call	_OSCILLATOR_Initialize	;wreg free
  1131                           
  1132                           ;mcc_generated_files/mcc.c: 56:     EXT_INT_Initialize();
  1133  00119E  EC4A  F007         	call	_EXT_INT_Initialize	;wreg free
  1134                           
  1135                           ;mcc_generated_files/mcc.c: 57:     I2C1_Initialize();
  1136  0011A2  EC5F  F008         	call	_I2C1_Initialize	;wreg free
  1137                           
  1138                           ;mcc_generated_files/mcc.c: 58:     ECAN_Initialize();
  1139  0011A6  ECC3  F005         	call	_ECAN_Initialize	;wreg free
  1140  0011AA  0012               	return		;funcret
  1141  0011AC                     __end_of_SYSTEM_Initialize:
  1142                           	opt callstack 0
  1143                           
  1144 ;; *************** function _PMD_Initialize *****************
  1145 ;; Defined at:
  1146 ;;		line 75 in file "mcc_generated_files/mcc.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         0       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    4
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_SYSTEM_Initialize
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text5
  1175  0010E8                     __ptext5:
  1176                           	opt callstack 0
  1177  0010E8                     _PMD_Initialize:
  1178                           	opt callstack 25
  1179                           
  1180                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  1181                           
  1182                           ;incstack = 0
  1183  0010E8  0E00               	movlw	0
  1184  0010EA  0139               	movlb	57	; () banked
  1185  0010EC  6FC0               	movwf	192,b	;volatile
  1186                           
  1187                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  1188  0010EE  0E00               	movlw	0
  1189  0010F0  6FC1               	movwf	193,b	;volatile
  1190                           
  1191                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  1192  0010F2  0E00               	movlw	0
  1193  0010F4  6FC2               	movwf	194,b	;volatile
  1194                           
  1195                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  1196  0010F6  0E00               	movlw	0
  1197  0010F8  6FC3               	movwf	195,b	;volatile
  1198                           
  1199                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  1200  0010FA  0E00               	movlw	0
  1201  0010FC  6FC4               	movwf	196,b	;volatile
  1202                           
  1203                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  1204  0010FE  0E00               	movlw	0
  1205  001100  6FC5               	movwf	197,b	;volatile
  1206                           
  1207                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  1208  001102  0E00               	movlw	0
  1209  001104  6FC6               	movwf	198,b	;volatile
  1210                           
  1211                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  1212  001106  0E00               	movlw	0
  1213  001108  6FC7               	movwf	199,b	;volatile
  1214                           
  1215                           ; BSR set to: 57
  1216  00110A  0012               	return		;funcret
  1217  00110C                     __end_of_PMD_Initialize:
  1218                           	opt callstack 0
  1219                           
  1220 ;; *************** function _PIN_MANAGER_Initialize *****************
  1221 ;; Defined at:
  1222 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    4
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_SYSTEM_Initialize
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text6
  1251  000CD0                     __ptext6:
  1252                           	opt callstack 0
  1253  000CD0                     _PIN_MANAGER_Initialize:
  1254                           	opt callstack 25
  1255                           
  1256                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1257                           
  1258                           ; BSR set to: 57
  1259                           ;incstack = 0
  1260  000CD0  0E00               	movlw	0
  1261  000CD2  6EBA               	movwf	16314,c	;volatile
  1262                           
  1263                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1264  000CD4  0E00               	movlw	0
  1265  000CD6  6EBB               	movwf	16315,c	;volatile
  1266                           
  1267                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1268  000CD8  0E00               	movlw	0
  1269  000CDA  6EBC               	movwf	16316,c	;volatile
  1270                           
  1271                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xD8;
  1272  000CDC  0ED8               	movlw	216
  1273  000CDE  6EC2               	movwf	16322,c	;volatile
  1274                           
  1275                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x0F;
  1276  000CE0  0E0F               	movlw	15
  1277  000CE2  6EC3               	movwf	16323,c	;volatile
  1278                           
  1279                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x24;
  1280  000CE4  0E24               	movlw	36
  1281  000CE6  6EC4               	movwf	16324,c	;volatile
  1282                           
  1283                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  1284  000CE8  0E04               	movlw	4
  1285  000CEA  013A               	movlb	58	; () banked
  1286  000CEC  6F60               	movwf	96,b	;volatile
  1287                           
  1288                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1289  000CEE  0E00               	movlw	0
  1290  000CF0  6F50               	movwf	80,b	;volatile
  1291                           
  1292                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  1293  000CF2  0E00               	movlw	0
  1294  000CF4  6F40               	movwf	64,b	;volatile
  1295                           
  1296                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1297  000CF6  0E00               	movlw	0
  1298  000CF8  6F81               	movwf	129,b	;volatile
  1299                           
  1300                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  1301  000CFA  0E00               	movlw	0
  1302  000CFC  6F51               	movwf	81,b	;volatile
  1303                           
  1304                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1305  000CFE  0E00               	movlw	0
  1306  000D00  6F41               	movwf	65,b	;volatile
  1307                           
  1308                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1309  000D02  0E00               	movlw	0
  1310  000D04  6F61               	movwf	97,b	;volatile
  1311                           
  1312                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  1313  000D06  0E00               	movlw	0
  1314  000D08  6F42               	movwf	66,b	;volatile
  1315                           
  1316                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  1317  000D0A  0E00               	movlw	0
  1318  000D0C  6F52               	movwf	82,b	;volatile
  1319                           
  1320                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x03;
  1321  000D0E  0E03               	movlw	3
  1322  000D10  6F62               	movwf	98,b	;volatile
  1323                           
  1324                           ; BSR set to: 58
  1325                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  1326  000D12  6943               	setf	67,b	;volatile
  1327                           
  1328                           ; BSR set to: 58
  1329                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  1330  000D14  6953               	setf	83,b	;volatile
  1331                           
  1332                           ; BSR set to: 58
  1333                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  1334  000D16  6963               	setf	99,b	;volatile
  1335                           
  1336                           ; BSR set to: 58
  1337                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  1338  000D18  6944               	setf	68,b	;volatile
  1339                           
  1340                           ; BSR set to: 58
  1341                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  1342  000D1A  6954               	setf	84,b	;volatile
  1343                           
  1344                           ; BSR set to: 58
  1345                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  1346  000D1C  6964               	setf	100,b	;volatile
  1347                           
  1348                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  1349  000D1E  0E08               	movlw	8
  1350  000D20  6F84               	movwf	132,b	;volatile
  1351                           
  1352                           ;mcc_generated_files/pin_manager.c: 115:     RC0PPS = 0x21;
  1353  000D22  0E21               	movlw	33
  1354  000D24  6F10               	movwf	16,b	;volatile
  1355                           
  1356                           ;mcc_generated_files/pin_manager.c: 116:     I2C1SDAPPS = 0x11;
  1357  000D26  0E11               	movlw	17
  1358  000D28  6FE4               	movwf	228,b	;volatile
  1359                           
  1360                           ;mcc_generated_files/pin_manager.c: 117:     INT0PPS = 0x08;
  1361  000D2A  0E08               	movlw	8
  1362  000D2C  6FC0               	movwf	192,b	;volatile
  1363                           
  1364                           ;mcc_generated_files/pin_manager.c: 118:     RC1PPS = 0x22;
  1365  000D2E  0E22               	movlw	34
  1366  000D30  6F11               	movwf	17,b	;volatile
  1367                           
  1368                           ;mcc_generated_files/pin_manager.c: 119:     CANRXPPS = 0x0B;
  1369  000D32  0E0B               	movlw	11
  1370  000D34  6FED               	movwf	237,b	;volatile
  1371                           
  1372                           ;mcc_generated_files/pin_manager.c: 120:     RB4PPS = 0x33;
  1373  000D36  0E33               	movlw	51
  1374  000D38  6F0C               	movwf	12,b	;volatile
  1375                           
  1376                           ;mcc_generated_files/pin_manager.c: 121:     INT2PPS = 0x0A;
  1377  000D3A  0E0A               	movlw	10
  1378  000D3C  6FC2               	movwf	194,b	;volatile
  1379                           
  1380                           ;mcc_generated_files/pin_manager.c: 122:     INT1PPS = 0x09;
  1381  000D3E  0E09               	movlw	9
  1382  000D40  6FC1               	movwf	193,b	;volatile
  1383                           
  1384                           ;mcc_generated_files/pin_manager.c: 123:     I2C1SCLPPS = 0x10;
  1385  000D42  0E10               	movlw	16
  1386  000D44  6FE3               	movwf	227,b	;volatile
  1387                           
  1388                           ; BSR set to: 58
  1389  000D46  0012               	return		;funcret
  1390  000D48                     __end_of_PIN_MANAGER_Initialize:
  1391                           	opt callstack 0
  1392                           
  1393 ;; *************** function _OSCILLATOR_Initialize *****************
  1394 ;; Defined at:
  1395 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1409 ;;      Params:         0       0       0       0       0       0       0       0       0
  1410 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1412 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    4
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_SYSTEM_Initialize
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text7
  1424  0011AC                     __ptext7:
  1425                           	opt callstack 0
  1426  0011AC                     _OSCILLATOR_Initialize:
  1427                           	opt callstack 25
  1428                           
  1429                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x62;
  1430                           
  1431                           ; BSR set to: 58
  1432                           ;incstack = 0
  1433  0011AC  0E62               	movlw	98
  1434  0011AE  0139               	movlb	57	; () banked
  1435  0011B0  6FD9               	movwf	217,b	;volatile
  1436                           
  1437                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  1438  0011B2  0E00               	movlw	0
  1439  0011B4  6FDB               	movwf	219,b	;volatile
  1440                           
  1441                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  1442  0011B6  0E00               	movlw	0
  1443  0011B8  6FDD               	movwf	221,b	;volatile
  1444                           
  1445                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x02;
  1446  0011BA  0E02               	movlw	2
  1447  0011BC  6FDF               	movwf	223,b	;volatile
  1448                           
  1449                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  1450  0011BE  0E00               	movlw	0
  1451  0011C0  6FDE               	movwf	222,b	;volatile
  1452                           
  1453                           ; BSR set to: 57
  1454  0011C2  0012               	return		;funcret
  1455  0011C4                     __end_of_OSCILLATOR_Initialize:
  1456                           	opt callstack 0
  1457                           
  1458 ;; *************** function _INTERRUPT_Initialize *****************
  1459 ;; Defined at:
  1460 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		None
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    4
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_SYSTEM_Initialize
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text8
  1489  00121C                     __ptext8:
  1490                           	opt callstack 0
  1491  00121C                     _INTERRUPT_Initialize:
  1492                           	opt callstack 25
  1493                           
  1494                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  1495                           
  1496                           ; BSR set to: 57
  1497                           ;incstack = 0
  1498  00121C  9AD2               	bcf	16338,5,c	;volatile
  1499  00121E  0012               	return		;funcret
  1500  001220                     __end_of_INTERRUPT_Initialize:
  1501                           	opt callstack 0
  1502                           
  1503 ;; *************** function _I2C1_Initialize *****************
  1504 ;; Defined at:
  1505 ;;		line 57 in file "mcc_generated_files/i2c1.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    4
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_SYSTEM_Initialize
  1530 ;;		_i2c1_write1ByteRegister
  1531 ;;		_i2c1_write2ByteRegister
  1532 ;;		_i2c1_writeNBytes
  1533 ;;		_i2c1_read1ByteRegister
  1534 ;;		_i2c1_read2ByteRegister
  1535 ;;		_i2c1_readDataBlock
  1536 ;;		_i2c1_readNBytes
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text9
  1541  0010BE                     __ptext9:
  1542                           	opt callstack 0
  1543  0010BE                     _I2C1_Initialize:
  1544                           	opt callstack 25
  1545                           
  1546                           ;mcc_generated_files/i2c1.c: 59:  if(!I2C1CON0bits.EN || lastError != I2C1_GOOD)
  1547                           
  1548                           ;incstack = 0
  1549  0010BE  013D               	movlb	61	; () banked
  1550  0010C0  AF73               	btfss	115,7,b	;volatile
  1551  0010C2  D003               	goto	u270
  1552                           
  1553                           ; BSR set to: 61
  1554  0010C4  5036               	movf	_lastError,w,c
  1555  0010C6  B4D8               	btfsc	status,2,c
  1556  0010C8  0012               	return	
  1557  0010CA                     u270:
  1558                           
  1559                           ; BSR set to: 61
  1560                           ;mcc_generated_files/i2c1.c: 60:     {;mcc_generated_files/i2c1.c: 61:   lastError = I2C
      +                          1_GOOD;
  1561  0010CA  0E00               	movlw	0
  1562  0010CC  6E36               	movwf	_lastError,c
  1563                           
  1564                           ;mcc_generated_files/i2c1.c: 63:   I2C1CON1 = 0x80;
  1565  0010CE  0E80               	movlw	128
  1566  0010D0  6F74               	movwf	116,b	;volatile
  1567                           
  1568                           ;mcc_generated_files/i2c1.c: 65:   I2C1CON2 = 0x00;
  1569  0010D2  0E00               	movlw	0
  1570  0010D4  6F75               	movwf	117,b	;volatile
  1571                           
  1572                           ;mcc_generated_files/i2c1.c: 67:   I2C1CLK = 0x03;
  1573  0010D6  0E03               	movlw	3
  1574  0010D8  6F7B               	movwf	123,b	;volatile
  1575                           
  1576                           ;mcc_generated_files/i2c1.c: 69:   I2C1CON0 = 0x84;
  1577  0010DA  0E84               	movlw	132
  1578  0010DC  6F73               	movwf	115,b	;volatile
  1579                           
  1580                           ;mcc_generated_files/i2c1.c: 70:   I2C1PIR = 0;
  1581  0010DE  0E00               	movlw	0
  1582  0010E0  6F79               	movwf	121,b	;volatile
  1583                           
  1584                           ;mcc_generated_files/i2c1.c: 71:   I2C1ERR = 0;
  1585  0010E2  0E00               	movlw	0
  1586  0010E4  6F76               	movwf	118,b	;volatile
  1587                           
  1588                           ; BSR set to: 61
  1589  0010E6  0012               	return		;funcret
  1590  0010E8                     __end_of_I2C1_Initialize:
  1591                           	opt callstack 0
  1592                           
  1593 ;; *************** function _EXT_INT_Initialize *****************
  1594 ;; Defined at:
  1595 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1609 ;;      Params:         0       0       0       0       0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    5
  1616 ;; This function calls:
  1617 ;;		_INT0_SetInterruptHandler
  1618 ;;		_INT1_SetInterruptHandler
  1619 ;;		_INT2_SetInterruptHandler
  1620 ;; This function is called by:
  1621 ;;		_SYSTEM_Initialize
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text10
  1626  000E94                     __ptext10:
  1627                           	opt callstack 0
  1628  000E94                     _EXT_INT_Initialize:
  1629                           	opt callstack 24
  1630                           
  1631                           ;mcc_generated_files/ext_int.c: 118:     (PIR1bits.INT0IF = 0);
  1632                           
  1633                           ; BSR set to: 61
  1634                           ;incstack = 0
  1635  000E94  0139               	movlb	57	; () banked
  1636  000E96  91A1               	bcf	161,0,b	;volatile
  1637                           
  1638                           ;mcc_generated_files/ext_int.c: 119:     (INTCON0bits.INT0EDG = 0);
  1639  000E98  90D2               	bcf	16338,0,c	;volatile
  1640                           
  1641                           ; BSR set to: 57
  1642                           ;mcc_generated_files/ext_int.c: 121:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
  1643  000E9A  0E24               	movlw	low _INT0_DefaultInterruptHandler
  1644  000E9C  6E01               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  1645  000E9E  0E12               	movlw	high _INT0_DefaultInterruptHandler
  1646  000EA0  6E02               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  1647  000EA2  ECF0  F008         	call	_INT0_SetInterruptHandler	;wreg free
  1648                           
  1649                           ;mcc_generated_files/ext_int.c: 122:     (PIE1bits.INT0IE = 1);
  1650  000EA6  0139               	movlb	57	; () banked
  1651  000EA8  8191               	bsf	145,0,b	;volatile
  1652                           
  1653                           ; BSR set to: 57
  1654                           ;mcc_generated_files/ext_int.c: 127:     (PIR4bits.INT1IF = 0);
  1655  000EAA  9FA4               	bcf	164,7,b	;volatile
  1656                           
  1657                           ; BSR set to: 57
  1658                           ;mcc_generated_files/ext_int.c: 128:     (INTCON0bits.INT1EDG = 0);
  1659  000EAC  92D2               	bcf	16338,1,c	;volatile
  1660                           
  1661                           ;mcc_generated_files/ext_int.c: 130:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  1662  000EAE  0E22               	movlw	low _INT1_DefaultInterruptHandler
  1663  000EB0  6E01               	movwf	INT1_SetInterruptHandler@InterruptHandler,c
  1664  000EB2  0E12               	movlw	high _INT1_DefaultInterruptHandler
  1665  000EB4  6E02               	movwf	INT1_SetInterruptHandler@InterruptHandler+1,c
  1666  000EB6  ECE9  F008         	call	_INT1_SetInterruptHandler	;wreg free
  1667                           
  1668                           ;mcc_generated_files/ext_int.c: 131:     (PIE4bits.INT1IE = 1);
  1669  000EBA  0139               	movlb	57	; () banked
  1670  000EBC  8F94               	bsf	148,7,b	;volatile
  1671                           
  1672                           ; BSR set to: 57
  1673                           ;mcc_generated_files/ext_int.c: 136:     (PIR8bits.INT2IF = 0);
  1674  000EBE  9DA8               	bcf	168,6,b	;volatile
  1675                           
  1676                           ; BSR set to: 57
  1677                           ;mcc_generated_files/ext_int.c: 137:     (INTCON0bits.INT2EDG = 0);
  1678  000EC0  94D2               	bcf	16338,2,c	;volatile
  1679                           
  1680                           ;mcc_generated_files/ext_int.c: 139:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  1681  000EC2  0E20               	movlw	low _INT2_DefaultInterruptHandler
  1682  000EC4  6E01               	movwf	INT2_SetInterruptHandler@InterruptHandler,c
  1683  000EC6  0E12               	movlw	high _INT2_DefaultInterruptHandler
  1684  000EC8  6E02               	movwf	INT2_SetInterruptHandler@InterruptHandler+1,c
  1685  000ECA  ECE2  F008         	call	_INT2_SetInterruptHandler	;wreg free
  1686                           
  1687                           ;mcc_generated_files/ext_int.c: 140:     (PIE8bits.INT2IE = 1);
  1688  000ECE  0139               	movlb	57	; () banked
  1689  000ED0  8D98               	bsf	152,6,b	;volatile
  1690                           
  1691                           ; BSR set to: 57
  1692  000ED2  0012               	return		;funcret
  1693  000ED4                     __end_of_EXT_INT_Initialize:
  1694                           	opt callstack 0
  1695                           
  1696 ;; *************** function _INT2_SetInterruptHandler *****************
  1697 ;; Defined at:
  1698 ;;		line 104 in file "mcc_generated_files/ext_int.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1701 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         2       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1716 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    4
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_EXT_INT_Initialize
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text11
  1728  0011C4                     __ptext11:
  1729                           	opt callstack 0
  1730  0011C4                     _INT2_SetInterruptHandler:
  1731                           	opt callstack 24
  1732                           
  1733                           ;mcc_generated_files/ext_int.c: 105:     INT2_InterruptHandler = InterruptHandler;
  1734                           
  1735                           ; BSR set to: 57
  1736                           ;incstack = 0
  1737  0011C4  0060  F004  F037   	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1738  0011CA  0060  F008  F038   	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1739  0011D0  0012               	return		;funcret
  1740  0011D2                     __end_of_INT2_SetInterruptHandler:
  1741                           	opt callstack 0
  1742                           
  1743 ;; *************** function _INT1_SetInterruptHandler *****************
  1744 ;; Defined at:
  1745 ;;		line 78 in file "mcc_generated_files/ext_int.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1748 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1760 ;;      Params:         2       0       0       0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1763 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1764 ;;Total ram usage:        2 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    4
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_EXT_INT_Initialize
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text12
  1775  0011D2                     __ptext12:
  1776                           	opt callstack 0
  1777  0011D2                     _INT1_SetInterruptHandler:
  1778                           	opt callstack 24
  1779                           
  1780                           ;mcc_generated_files/ext_int.c: 79:     INT1_InterruptHandler = InterruptHandler;
  1781                           
  1782                           ;incstack = 0
  1783  0011D2  0060  F004  F039   	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1784  0011D8  0060  F008  F03A   	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1785  0011DE  0012               	return		;funcret
  1786  0011E0                     __end_of_INT1_SetInterruptHandler:
  1787                           	opt callstack 0
  1788                           
  1789 ;; *************** function _INT0_SetInterruptHandler *****************
  1790 ;; Defined at:
  1791 ;;		line 52 in file "mcc_generated_files/ext_int.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1794 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1806 ;;      Params:         2       0       0       0       0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1809 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1810 ;;Total ram usage:        2 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    4
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_EXT_INT_Initialize
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text13
  1821  0011E0                     __ptext13:
  1822                           	opt callstack 0
  1823  0011E0                     _INT0_SetInterruptHandler:
  1824                           	opt callstack 24
  1825                           
  1826                           ;mcc_generated_files/ext_int.c: 53:     INT0_InterruptHandler = InterruptHandler;
  1827                           
  1828                           ;incstack = 0
  1829  0011E0  0060  F004  F03B   	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1830  0011E6  0060  F008  F03C   	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1831  0011EC  0012               	return		;funcret
  1832  0011EE                     __end_of_INT0_SetInterruptHandler:
  1833                           	opt callstack 0
  1834                           
  1835 ;; *************** function _ECAN_Initialize *****************
  1836 ;; Defined at:
  1837 ;;		line 69 in file "mcc_generated_files/ecan.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1853 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1854 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1855 ;;Total ram usage:        1 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    4
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_SYSTEM_Initialize
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text14
  1866  000B86                     __ptext14:
  1867                           	opt callstack 0
  1868  000B86                     _ECAN_Initialize:
  1869                           	opt callstack 25
  1870                           
  1871                           ;mcc_generated_files/ecan.c: 71:     CANCON = 0x80;
  1872                           
  1873                           ;incstack = 0
  1874  000B86  0E80               	movlw	128
  1875  000B88  6E8F               	movwf	16271,c	;volatile
  1876  000B8A                     l1898:
  1877  000B8A  508E               	movf	16270,w,c	;volatile
  1878  000B8C  0BE0               	andlw	224
  1879  000B8E  0A80               	xorlw	128
  1880  000B90  A4D8               	btfss	status,2,c
  1881  000B92  D7FB               	goto	l1898
  1882                           
  1883                           ;mcc_generated_files/ecan.c: 77:     ECANCON = 0x00;
  1884  000B94  0E00               	movlw	0
  1885  000B96  6E91               	movwf	16273,c	;volatile
  1886                           
  1887                           ;mcc_generated_files/ecan.c: 82:     CIOCON = 0x00;
  1888  000B98  0E00               	movlw	0
  1889  000B9A  0137               	movlb	55	; () banked
  1890  000B9C  6F00               	movwf	0,b	;volatile
  1891                           
  1892                           ;mcc_generated_files/ecan.c: 95:     RXM0EIDH = 0x00;
  1893  000B9E  0E00               	movlw	0
  1894  000BA0  6FBA               	movwf	186,b	;volatile
  1895                           
  1896                           ;mcc_generated_files/ecan.c: 96:     RXM0EIDL = 0x00;
  1897  000BA2  0E00               	movlw	0
  1898  000BA4  6FBB               	movwf	187,b	;volatile
  1899                           
  1900                           ;mcc_generated_files/ecan.c: 97:     RXM0SIDH = 0x00;
  1901  000BA6  0E00               	movlw	0
  1902  000BA8  6FB8               	movwf	184,b	;volatile
  1903                           
  1904                           ;mcc_generated_files/ecan.c: 98:     RXM0SIDL = 0x00;
  1905  000BAA  0E00               	movlw	0
  1906  000BAC  6FB9               	movwf	185,b	;volatile
  1907                           
  1908                           ;mcc_generated_files/ecan.c: 99:     RXM1EIDH = 0x00;
  1909  000BAE  0E00               	movlw	0
  1910  000BB0  6FBE               	movwf	190,b	;volatile
  1911                           
  1912                           ;mcc_generated_files/ecan.c: 100:     RXM1EIDL = 0x00;
  1913  000BB2  0E00               	movlw	0
  1914  000BB4  6FBF               	movwf	191,b	;volatile
  1915                           
  1916                           ;mcc_generated_files/ecan.c: 101:     RXM1SIDH = 0x00;
  1917  000BB6  0E00               	movlw	0
  1918  000BB8  6FBC               	movwf	188,b	;volatile
  1919                           
  1920                           ;mcc_generated_files/ecan.c: 102:     RXM1SIDL = 0x00;
  1921  000BBA  0E00               	movlw	0
  1922  000BBC  6FBD               	movwf	189,b	;volatile
  1923                           
  1924                           ;mcc_generated_files/ecan.c: 107:     RXF0EIDH = 0x00;
  1925  000BBE  0E00               	movlw	0
  1926  000BC0  6FA2               	movwf	162,b	;volatile
  1927                           
  1928                           ;mcc_generated_files/ecan.c: 108:     RXF0EIDL = 0x00;
  1929  000BC2  0E00               	movlw	0
  1930  000BC4  6FA3               	movwf	163,b	;volatile
  1931                           
  1932                           ;mcc_generated_files/ecan.c: 109:     RXF0SIDH = 0x00;
  1933  000BC6  0E00               	movlw	0
  1934  000BC8  6FA0               	movwf	160,b	;volatile
  1935                           
  1936                           ;mcc_generated_files/ecan.c: 110:     RXF0SIDL = 0x00;
  1937  000BCA  0E00               	movlw	0
  1938  000BCC  6FA1               	movwf	161,b	;volatile
  1939                           
  1940                           ;mcc_generated_files/ecan.c: 111:     RXF1EIDH = 0x00;
  1941  000BCE  0E00               	movlw	0
  1942  000BD0  6FA6               	movwf	166,b	;volatile
  1943                           
  1944                           ;mcc_generated_files/ecan.c: 112:     RXF1EIDL = 0x00;
  1945  000BD2  0E00               	movlw	0
  1946  000BD4  6FA7               	movwf	167,b	;volatile
  1947                           
  1948                           ;mcc_generated_files/ecan.c: 113:     RXF1SIDH = 0x00;
  1949  000BD6  0E00               	movlw	0
  1950  000BD8  6FA4               	movwf	164,b	;volatile
  1951                           
  1952                           ;mcc_generated_files/ecan.c: 114:     RXF1SIDL = 0x00;
  1953  000BDA  0E00               	movlw	0
  1954  000BDC  6FA5               	movwf	165,b	;volatile
  1955                           
  1956                           ;mcc_generated_files/ecan.c: 115:     RXF2EIDH = 0x00;
  1957  000BDE  0E00               	movlw	0
  1958  000BE0  6FAA               	movwf	170,b	;volatile
  1959                           
  1960                           ;mcc_generated_files/ecan.c: 116:     RXF2EIDL = 0x00;
  1961  000BE2  0E00               	movlw	0
  1962  000BE4  6FAB               	movwf	171,b	;volatile
  1963                           
  1964                           ;mcc_generated_files/ecan.c: 117:     RXF2SIDH = 0x00;
  1965  000BE6  0E00               	movlw	0
  1966  000BE8  6FA8               	movwf	168,b	;volatile
  1967                           
  1968                           ;mcc_generated_files/ecan.c: 118:     RXF2SIDL = 0x00;
  1969  000BEA  0E00               	movlw	0
  1970  000BEC  6FA9               	movwf	169,b	;volatile
  1971                           
  1972                           ;mcc_generated_files/ecan.c: 119:     RXF3EIDH = 0x00;
  1973  000BEE  0E00               	movlw	0
  1974  000BF0  6FAE               	movwf	174,b	;volatile
  1975                           
  1976                           ;mcc_generated_files/ecan.c: 120:     RXF3EIDL = 0x00;
  1977  000BF2  0E00               	movlw	0
  1978  000BF4  6FAF               	movwf	175,b	;volatile
  1979                           
  1980                           ;mcc_generated_files/ecan.c: 121:     RXF3SIDH = 0x00;
  1981  000BF6  0E00               	movlw	0
  1982  000BF8  6FAC               	movwf	172,b	;volatile
  1983                           
  1984                           ;mcc_generated_files/ecan.c: 122:     RXF3SIDL = 0x00;
  1985  000BFA  0E00               	movlw	0
  1986  000BFC  6FAD               	movwf	173,b	;volatile
  1987                           
  1988                           ;mcc_generated_files/ecan.c: 123:     RXF4EIDH = 0x00;
  1989  000BFE  0E00               	movlw	0
  1990  000C00  6FB2               	movwf	178,b	;volatile
  1991                           
  1992                           ;mcc_generated_files/ecan.c: 124:     RXF4EIDL = 0x00;
  1993  000C02  0E00               	movlw	0
  1994  000C04  6FB3               	movwf	179,b	;volatile
  1995                           
  1996                           ;mcc_generated_files/ecan.c: 125:     RXF4SIDH = 0x00;
  1997  000C06  0E00               	movlw	0
  1998  000C08  6FB0               	movwf	176,b	;volatile
  1999                           
  2000                           ;mcc_generated_files/ecan.c: 126:     RXF4SIDL = 0x00;
  2001  000C0A  0E00               	movlw	0
  2002  000C0C  6FB1               	movwf	177,b	;volatile
  2003                           
  2004                           ;mcc_generated_files/ecan.c: 127:     RXF5EIDH = 0x00;
  2005  000C0E  0E00               	movlw	0
  2006  000C10  6FB6               	movwf	182,b	;volatile
  2007                           
  2008                           ;mcc_generated_files/ecan.c: 128:     RXF5EIDL = 0x00;
  2009  000C12  0E00               	movlw	0
  2010  000C14  6FB7               	movwf	183,b	;volatile
  2011                           
  2012                           ;mcc_generated_files/ecan.c: 129:     RXF5SIDH = 0x00;
  2013  000C16  0E00               	movlw	0
  2014  000C18  6FB4               	movwf	180,b	;volatile
  2015                           
  2016                           ;mcc_generated_files/ecan.c: 130:     RXF5SIDL = 0x00;
  2017  000C1A  0E00               	movlw	0
  2018  000C1C  6FB5               	movwf	181,b	;volatile
  2019                           
  2020                           ;mcc_generated_files/ecan.c: 145:     BRGCON1 = 0x00;
  2021  000C1E  0E00               	movlw	0
  2022  000C20  6F03               	movwf	3,b	;volatile
  2023                           
  2024                           ;mcc_generated_files/ecan.c: 146:     BRGCON2 = 0xA8;
  2025  000C22  0EA8               	movlw	168
  2026  000C24  6F04               	movwf	4,b	;volatile
  2027                           
  2028                           ;mcc_generated_files/ecan.c: 147:     BRGCON3 = 0x01;
  2029  000C26  0E01               	movlw	1
  2030  000C28  6F05               	movwf	5,b	;volatile
  2031                           
  2032                           ;mcc_generated_files/ecan.c: 149:     CANCON = 0x00;
  2033  000C2A  0E00               	movlw	0
  2034  000C2C  6E8F               	movwf	16271,c	;volatile
  2035  000C2E                     l1902:
  2036  000C2E  006F FE38  F001    	movff	16270,??_ECAN_Initialize	;volatile
  2037  000C34  0EE0               	movlw	224
  2038  000C36  1601               	andwf	??_ECAN_Initialize,f,c
  2039  000C38  B4D8               	btfsc	status,2,c
  2040  000C3A  0012               	return	
  2041  000C3C  D7F8               	goto	l1902
  2042  000C3E                     __end_of_ECAN_Initialize:
  2043                           	opt callstack 0
  2044                           
  2045 ;; *************** function _LcdString *****************
  2046 ;; Defined at:
  2047 ;;		line 102 in file "USER_C/lcd.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  p               2    6[COMRAM] PTR unsigned char 
  2050 ;;		 -> STR_1(7), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2062 ;;      Params:         2       0       0       0       0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2065 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2066 ;;Total ram usage:        2 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    6
  2069 ;; This function calls:
  2070 ;;		_sendDat
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text15
  2077  00102E                     __ptext15:
  2078                           	opt callstack 0
  2079  00102E                     _LcdString:
  2080                           	opt callstack 24
  2081                           
  2082                           ;USER_C/lcd.c: 103:     while (*p != '\0') {
  2083                           
  2084                           ;incstack = 0
  2085  00102E  D00C               	goto	l3106
  2086  001030                     l3102:
  2087                           
  2088                           ;USER_C/lcd.c: 104:         sendDat(*p);
  2089  001030  0060  F01F  FFF6   	movff	LcdString@p,tblptrl
  2090  001036  0060  F023  FFF7   	movff	LcdString@p+1,tblptrh
  2091  00103C                     	if	0	;tblptru may be non-zero
  2092  00103C                     	endif
  2093  00103C                     	if	0	;tblptru may be non-zero
  2094  00103C                     	endif
  2095  00103C  0008               	tblrd		*
  2096  00103E  50F5               	movf	tablat,w,c
  2097  001040  EC04  F007         	call	_sendDat
  2098                           
  2099                           ;USER_C/lcd.c: 105:         p++;
  2100  001044  4A07               	infsnz	LcdString@p,f,c
  2101  001046  2A08               	incf	LcdString@p+1,f,c
  2102  001048                     l3106:
  2103                           
  2104                           ;USER_C/lcd.c: 103:     while (*p != '\0') {
  2105  001048  0060  F01F  FFF6   	movff	LcdString@p,tblptrl
  2106  00104E  0060  F023  FFF7   	movff	LcdString@p+1,tblptrh
  2107  001054                     	if	0	;tblptru may be non-zero
  2108  001054                     	endif
  2109  001054                     	if	0	;tblptru may be non-zero
  2110  001054                     	endif
  2111  001054  0008               	tblrd		*
  2112  001056  50F5               	movf	tablat,w,c
  2113  001058  0900               	iorlw	0
  2114  00105A  B4D8               	btfsc	status,2,c
  2115  00105C  0012               	return	
  2116  00105E  D7E8               	goto	l3102
  2117  001060                     __end_of_LcdString:
  2118                           	opt callstack 0
  2119                           
  2120 ;; *************** function _LCD_Draw_Two_Dot *****************
  2121 ;; Defined at:
  2122 ;;		line 77 in file "AP_C/AP_LCD.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  StartX          1    wreg     unsigned char 
  2125 ;;  StartY          1   21[COMRAM] unsigned char 
  2126 ;;  EndX            1   22[COMRAM] unsigned char 
  2127 ;;  EndY            1   23[COMRAM] unsigned char 
  2128 ;;  Color           1   24[COMRAM] unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  StartX          1   38[COMRAM] unsigned char 
  2131 ;;  delta_y         2   41[COMRAM] int 
  2132 ;;  delta_x         2   39[COMRAM] int 
  2133 ;;  distance        2   36[COMRAM] int 
  2134 ;;  y               2   32[COMRAM] int 
  2135 ;;  x               2   30[COMRAM] int 
  2136 ;;  t               2   28[COMRAM] int 
  2137 ;;  incy            1   35[COMRAM] unsigned char 
  2138 ;;  incx            1   34[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2148 ;;      Params:         4       0       0       0       0       0       0       0       0
  2149 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2150 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2151 ;;      Totals:        22       0       0       0       0       0       0       0       0
  2152 ;;Total ram usage:       22 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    8
  2155 ;; This function calls:
  2156 ;;		_Draw_point
  2157 ;;		_abs
  2158 ;;		_v_Lcd12864DrawLineX_f
  2159 ;;		_v_Lcd12864DrawLineY_f
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;;		_LCD_DrawSineWave
  2163 ;;		_LCD_DrawCoseWave
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text16
  2168  000866                     __ptext16:
  2169                           	opt callstack 0
  2170  000866                     _LCD_Draw_Two_Dot:
  2171                           	opt callstack 22
  2172                           
  2173                           ;incstack = 0
  2174                           ;LCD_Draw_Two_Dot@StartX stored from wreg
  2175  000866  6E27               	movwf	LCD_Draw_Two_Dot@StartX,c
  2176                           
  2177                           ;AP_C/AP_LCD.c: 77: void LCD_Draw_Two_Dot(unsigned char StartX,unsigned char StartY,unsi
      +                          gned char EndX,unsigned char EndY,unsigned char Color);AP_C/AP_LCD.c: 78: {;AP_C/AP_LCD.
      +                          c: 79:     int t,distance;;AP_C/AP_LCD.c: 80:     int x=0,y=0,delta_x,delta_y;
  2178  000868  0E00               	movlw	0
  2179  00086A  6E20               	movwf	LCD_Draw_Two_Dot@x+1,c
  2180  00086C  0E00               	movlw	0
  2181  00086E  6E1F               	movwf	LCD_Draw_Two_Dot@x,c
  2182  000870  0E00               	movlw	0
  2183  000872  6E22               	movwf	LCD_Draw_Two_Dot@y+1,c
  2184  000874  0E00               	movlw	0
  2185  000876  6E21               	movwf	LCD_Draw_Two_Dot@y,c
  2186                           
  2187                           ;AP_C/AP_LCD.c: 81:     char incx,incy;;AP_C/AP_LCD.c: 83:     delta_x=EndX-StartX;
  2188  000878  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2189  00087A  5C17               	subwf	LCD_Draw_Two_Dot@EndX,w,c
  2190  00087C  6E28               	movwf	LCD_Draw_Two_Dot@delta_x,c
  2191  00087E  6A29               	clrf	LCD_Draw_Two_Dot@delta_x+1,c
  2192  000880  A0D8               	btfss	status,0,c
  2193  000882  0629               	decf	LCD_Draw_Two_Dot@delta_x+1,f,c
  2194                           
  2195                           ;AP_C/AP_LCD.c: 84:     delta_y=EndY-StartY;
  2196  000884  5016               	movf	LCD_Draw_Two_Dot@StartY,w,c
  2197  000886  5C18               	subwf	LCD_Draw_Two_Dot@EndY,w,c
  2198  000888  6E2A               	movwf	LCD_Draw_Two_Dot@delta_y,c
  2199  00088A  6A2B               	clrf	LCD_Draw_Two_Dot@delta_y+1,c
  2200  00088C  A0D8               	btfss	status,0,c
  2201  00088E  062B               	decf	LCD_Draw_Two_Dot@delta_y+1,f,c
  2202                           
  2203                           ;AP_C/AP_LCD.c: 86:     if(delta_x>0)
  2204  000890  BE29               	btfsc	LCD_Draw_Two_Dot@delta_x+1,7,c
  2205  000892  D008               	goto	l3028
  2206  000894  5029               	movf	LCD_Draw_Two_Dot@delta_x+1,w,c
  2207  000896  E103               	bnz	u1110
  2208  000898  0428               	decf	LCD_Draw_Two_Dot@delta_x,w,c
  2209  00089A  A0D8               	btfss	status,0,c
  2210  00089C  D003               	goto	l3028
  2211  00089E                     u1110:
  2212                           
  2213                           ;AP_C/AP_LCD.c: 87:  {;AP_C/AP_LCD.c: 88:   incx=1;
  2214  00089E  0E01               	movlw	1
  2215  0008A0  6E23               	movwf	LCD_Draw_Two_Dot@incx,c
  2216                           
  2217                           ;AP_C/AP_LCD.c: 89:  }
  2218  0008A2  D012               	goto	l3036
  2219  0008A4                     l3028:
  2220                           
  2221                           ;AP_C/AP_LCD.c: 92:  {;AP_C/AP_LCD.c: 93:     if( delta_x==0 )
  2222  0008A4  5028               	movf	LCD_Draw_Two_Dot@delta_x,w,c
  2223  0008A6  1029               	iorwf	LCD_Draw_Two_Dot@delta_x+1,w,c
  2224  0008A8  A4D8               	btfss	status,2,c
  2225  0008AA  D00D               	goto	l54
  2226                           
  2227                           ;AP_C/AP_LCD.c: 94:        {;AP_C/AP_LCD.c: 95:            v_Lcd12864DrawLineY_f(StartX,
      +                          StartY,EndY,Color);
  2228  0008AC  0060  F058  F011   	movff	LCD_Draw_Two_Dot@StartY,v_Lcd12864DrawLineY_f@Y0
  2229  0008B2  0060  F060  F012   	movff	LCD_Draw_Two_Dot@EndY,v_Lcd12864DrawLineY_f@Y1
  2230  0008B8  0060  F064  F013   	movff	LCD_Draw_Two_Dot@Color,v_Lcd12864DrawLineY_f@Color
  2231  0008BE  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2232  0008C0  EC89  F007         	call	_v_Lcd12864DrawLineY_f
  2233  0008C4  0012               	return	
  2234  0008C6                     l54:
  2235  0008C6  6823               	setf	LCD_Draw_Two_Dot@incx,c
  2236  0008C8                     l3036:
  2237                           
  2238                           ;AP_C/AP_LCD.c: 101:     if(delta_y>0)
  2239  0008C8  BE2B               	btfsc	LCD_Draw_Two_Dot@delta_y+1,7,c
  2240  0008CA  D008               	goto	l3040
  2241  0008CC  502B               	movf	LCD_Draw_Two_Dot@delta_y+1,w,c
  2242  0008CE  E103               	bnz	u1130
  2243  0008D0  042A               	decf	LCD_Draw_Two_Dot@delta_y,w,c
  2244  0008D2  A0D8               	btfss	status,0,c
  2245  0008D4  D003               	goto	l3040
  2246  0008D6                     u1130:
  2247                           
  2248                           ;AP_C/AP_LCD.c: 102:  {;AP_C/AP_LCD.c: 103:   incy=1;
  2249  0008D6  0E01               	movlw	1
  2250  0008D8  6E24               	movwf	LCD_Draw_Two_Dot@incy,c
  2251                           
  2252                           ;AP_C/AP_LCD.c: 104:  }
  2253  0008DA  D012               	goto	l3048
  2254  0008DC                     l3040:
  2255                           
  2256                           ;AP_C/AP_LCD.c: 107:  {;AP_C/AP_LCD.c: 108:      if(delta_y==0)
  2257  0008DC  502A               	movf	LCD_Draw_Two_Dot@delta_y,w,c
  2258  0008DE  102B               	iorwf	LCD_Draw_Two_Dot@delta_y+1,w,c
  2259  0008E0  A4D8               	btfss	status,2,c
  2260  0008E2  D00D               	goto	l59
  2261                           
  2262                           ;AP_C/AP_LCD.c: 109:         {;AP_C/AP_LCD.c: 110:             v_Lcd12864DrawLineX_f( St
      +                          artX,EndX,StartY,Color);
  2263  0008E4  0060  F05C  F011   	movff	LCD_Draw_Two_Dot@EndX,v_Lcd12864DrawLineX_f@X1
  2264  0008EA  0060  F058  F012   	movff	LCD_Draw_Two_Dot@StartY,v_Lcd12864DrawLineX_f@Y
  2265  0008F0  0060  F064  F013   	movff	LCD_Draw_Two_Dot@Color,v_Lcd12864DrawLineX_f@Color
  2266  0008F6  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2267  0008F8  ECA7  F007         	call	_v_Lcd12864DrawLineX_f
  2268  0008FC  0012               	return	
  2269  0008FE                     l59:
  2270  0008FE  6824               	setf	LCD_Draw_Two_Dot@incy,c
  2271  000900                     l3048:
  2272                           
  2273                           ;AP_C/AP_LCD.c: 116:     delta_x=abs(delta_x);
  2274  000900  0060  F0A0  F001   	movff	LCD_Draw_Two_Dot@delta_x,abs@a
  2275  000906  0060  F0A4  F002   	movff	LCD_Draw_Two_Dot@delta_x+1,abs@a+1
  2276  00090C  EC6A  F007         	call	_abs	;wreg free
  2277  000910  0060  F004  F028   	movff	?_abs,LCD_Draw_Two_Dot@delta_x
  2278  000916  0060  F008  F029   	movff	?_abs+1,LCD_Draw_Two_Dot@delta_x+1
  2279                           
  2280                           ;AP_C/AP_LCD.c: 117:     delta_y=abs(delta_y);
  2281  00091C  0060  F0A8  F001   	movff	LCD_Draw_Two_Dot@delta_y,abs@a
  2282  000922  0060  F0AC  F002   	movff	LCD_Draw_Two_Dot@delta_y+1,abs@a+1
  2283  000928  EC6A  F007         	call	_abs	;wreg free
  2284  00092C  0060  F004  F02A   	movff	?_abs,LCD_Draw_Two_Dot@delta_y
  2285  000932  0060  F008  F02B   	movff	?_abs+1,LCD_Draw_Two_Dot@delta_y+1
  2286                           
  2287                           ;AP_C/AP_LCD.c: 119:     if(delta_x>delta_y)
  2288  000938  5028               	movf	LCD_Draw_Two_Dot@delta_x,w,c
  2289  00093A  5C2A               	subwf	LCD_Draw_Two_Dot@delta_y,w,c
  2290  00093C  502B               	movf	LCD_Draw_Two_Dot@delta_y+1,w,c
  2291  00093E  0A80               	xorlw	128
  2292  000940  6E1A               	movwf	??_LCD_Draw_Two_Dot& (0+255),c
  2293  000942  5029               	movf	LCD_Draw_Two_Dot@delta_x+1,w,c
  2294  000944  0A80               	xorlw	128
  2295  000946  581A               	subwfb	??_LCD_Draw_Two_Dot& (0+255),w,c
  2296  000948  B0D8               	btfsc	status,0,c
  2297  00094A  D007               	goto	l61
  2298                           
  2299                           ;AP_C/AP_LCD.c: 120:  {;AP_C/AP_LCD.c: 121:   distance=delta_x;
  2300  00094C  0060  F0A0  F025   	movff	LCD_Draw_Two_Dot@delta_x,LCD_Draw_Two_Dot@distance
  2301  000952  0060  F0A4  F026   	movff	LCD_Draw_Two_Dot@delta_x+1,LCD_Draw_Two_Dot@distance+1
  2302                           
  2303                           ;AP_C/AP_LCD.c: 122:  }
  2304  000958  D006               	goto	l3054
  2305  00095A                     l61:
  2306                           
  2307                           ;AP_C/AP_LCD.c: 124:  {;AP_C/AP_LCD.c: 125:   distance=delta_y;
  2308  00095A  0060  F0A8  F025   	movff	LCD_Draw_Two_Dot@delta_y,LCD_Draw_Two_Dot@distance
  2309  000960  0060  F0AC  F026   	movff	LCD_Draw_Two_Dot@delta_y+1,LCD_Draw_Two_Dot@distance+1
  2310  000966                     l3054:
  2311                           
  2312                           ;AP_C/AP_LCD.c: 128:     Draw_point(StartX,StartY,Color);
  2313  000966  0060  F058  F007   	movff	LCD_Draw_Two_Dot@StartY,Draw_point@Y
  2314  00096C  0060  F064  F008   	movff	LCD_Draw_Two_Dot@Color,Draw_point@Color
  2315  000972  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2316  000974  EC05  F005         	call	_Draw_point
  2317                           
  2318                           ;AP_C/AP_LCD.c: 130:     for(t=0;t<=distance+1;t++)
  2319  000978  0E00               	movlw	0
  2320  00097A  6E1E               	movwf	LCD_Draw_Two_Dot@t+1,c
  2321  00097C  0E00               	movlw	0
  2322  00097E  6E1D               	movwf	LCD_Draw_Two_Dot@t,c
  2323  000980  D033               	goto	l3072
  2324  000982                     l3058:
  2325                           
  2326                           ;AP_C/AP_LCD.c: 131:     {;AP_C/AP_LCD.c: 132:         Draw_point(StartX,StartY,Color);
  2327  000982  0060  F058  F007   	movff	LCD_Draw_Two_Dot@StartY,Draw_point@Y
  2328  000988  0060  F064  F008   	movff	LCD_Draw_Two_Dot@Color,Draw_point@Color
  2329  00098E  5027               	movf	LCD_Draw_Two_Dot@StartX,w,c
  2330  000990  EC05  F005         	call	_Draw_point
  2331                           
  2332                           ;AP_C/AP_LCD.c: 133:         x+=delta_x;
  2333  000994  5028               	movf	LCD_Draw_Two_Dot@delta_x,w,c
  2334  000996  261F               	addwf	LCD_Draw_Two_Dot@x,f,c
  2335  000998  5029               	movf	LCD_Draw_Two_Dot@delta_x+1,w,c
  2336  00099A  2220               	addwfc	LCD_Draw_Two_Dot@x+1,f,c
  2337                           
  2338                           ;AP_C/AP_LCD.c: 134:         y+=delta_y;
  2339  00099C  502A               	movf	LCD_Draw_Two_Dot@delta_y,w,c
  2340  00099E  2621               	addwf	LCD_Draw_Two_Dot@y,f,c
  2341  0009A0  502B               	movf	LCD_Draw_Two_Dot@delta_y+1,w,c
  2342  0009A2  2222               	addwfc	LCD_Draw_Two_Dot@y+1,f,c
  2343                           
  2344                           ;AP_C/AP_LCD.c: 135:         if(x>distance)
  2345  0009A4  501F               	movf	LCD_Draw_Two_Dot@x,w,c
  2346  0009A6  5C25               	subwf	LCD_Draw_Two_Dot@distance,w,c
  2347  0009A8  5026               	movf	LCD_Draw_Two_Dot@distance+1,w,c
  2348  0009AA  0A80               	xorlw	128
  2349  0009AC  6E1A               	movwf	??_LCD_Draw_Two_Dot& (0+255),c
  2350  0009AE  5020               	movf	LCD_Draw_Two_Dot@x+1,w,c
  2351  0009B0  0A80               	xorlw	128
  2352  0009B2  581A               	subwfb	??_LCD_Draw_Two_Dot& (0+255),w,c
  2353  0009B4  B0D8               	btfsc	status,0,c
  2354  0009B6  D006               	goto	l65
  2355                           
  2356                           ;AP_C/AP_LCD.c: 136:         {;AP_C/AP_LCD.c: 137:             x-=distance;
  2357  0009B8  5025               	movf	LCD_Draw_Two_Dot@distance,w,c
  2358  0009BA  5E1F               	subwf	LCD_Draw_Two_Dot@x,f,c
  2359  0009BC  5026               	movf	LCD_Draw_Two_Dot@distance+1,w,c
  2360  0009BE  5A20               	subwfb	LCD_Draw_Two_Dot@x+1,f,c
  2361                           
  2362                           ;AP_C/AP_LCD.c: 138:             StartX+=incx;
  2363  0009C0  5023               	movf	LCD_Draw_Two_Dot@incx,w,c
  2364  0009C2  2627               	addwf	LCD_Draw_Two_Dot@StartX,f,c
  2365  0009C4                     l65:
  2366                           
  2367                           ;AP_C/AP_LCD.c: 140:         if(y>distance)
  2368  0009C4  5021               	movf	LCD_Draw_Two_Dot@y,w,c
  2369  0009C6  5C25               	subwf	LCD_Draw_Two_Dot@distance,w,c
  2370  0009C8  5026               	movf	LCD_Draw_Two_Dot@distance+1,w,c
  2371  0009CA  0A80               	xorlw	128
  2372  0009CC  6E1A               	movwf	??_LCD_Draw_Two_Dot& (0+255),c
  2373  0009CE  5022               	movf	LCD_Draw_Two_Dot@y+1,w,c
  2374  0009D0  0A80               	xorlw	128
  2375  0009D2  581A               	subwfb	??_LCD_Draw_Two_Dot& (0+255),w,c
  2376  0009D4  B0D8               	btfsc	status,0,c
  2377  0009D6  D006               	goto	l3070
  2378                           
  2379                           ;AP_C/AP_LCD.c: 141:         {;AP_C/AP_LCD.c: 142:             y-=distance;
  2380  0009D8  5025               	movf	LCD_Draw_Two_Dot@distance,w,c
  2381  0009DA  5E21               	subwf	LCD_Draw_Two_Dot@y,f,c
  2382  0009DC  5026               	movf	LCD_Draw_Two_Dot@distance+1,w,c
  2383  0009DE  5A22               	subwfb	LCD_Draw_Two_Dot@y+1,f,c
  2384                           
  2385                           ;AP_C/AP_LCD.c: 143:             StartY+=incy;
  2386  0009E0  5024               	movf	LCD_Draw_Two_Dot@incy,w,c
  2387  0009E2  2616               	addwf	LCD_Draw_Two_Dot@StartY,f,c
  2388  0009E4                     l3070:
  2389                           
  2390                           ;AP_C/AP_LCD.c: 145:     }
  2391  0009E4  4A1D               	infsnz	LCD_Draw_Two_Dot@t,f,c
  2392  0009E6  2A1E               	incf	LCD_Draw_Two_Dot@t+1,f,c
  2393  0009E8                     l3072:
  2394  0009E8  0E01               	movlw	1
  2395  0009EA  2425               	addwf	LCD_Draw_Two_Dot@distance,w,c
  2396  0009EC  6E1A               	movwf	??_LCD_Draw_Two_Dot& (0+255),c
  2397  0009EE  0E00               	movlw	0
  2398  0009F0  2026               	addwfc	LCD_Draw_Two_Dot@distance+1,w,c
  2399  0009F2  6E1B               	movwf	(??_LCD_Draw_Two_Dot+1)& (0+255),c
  2400  0009F4  501D               	movf	LCD_Draw_Two_Dot@t,w,c
  2401  0009F6  5C1A               	subwf	??_LCD_Draw_Two_Dot,w,c
  2402  0009F8  501B               	movf	??_LCD_Draw_Two_Dot+1,w,c
  2403  0009FA  0A80               	xorlw	128
  2404  0009FC  6E1C               	movwf	(??_LCD_Draw_Two_Dot+2)& (0+255),c
  2405  0009FE  501E               	movf	LCD_Draw_Two_Dot@t+1,w,c
  2406  000A00  0A80               	xorlw	128
  2407  000A02  581C               	subwfb	(??_LCD_Draw_Two_Dot+2)& (0+255),w,c
  2408  000A04  A0D8               	btfss	status,0,c
  2409  000A06  0012               	return	
  2410  000A08  D7BC               	goto	l3058
  2411  000A0A                     __end_of_LCD_Draw_Two_Dot:
  2412                           	opt callstack 0
  2413                           
  2414 ;; *************** function _v_Lcd12864DrawLineY_f *****************
  2415 ;; Defined at:
  2416 ;;		line 205 in file "USER_C/lcd.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  X               1    wreg     unsigned char 
  2419 ;;  Y0              1   16[COMRAM] unsigned char 
  2420 ;;  Y1              1   17[COMRAM] unsigned char 
  2421 ;;  Color           1   18[COMRAM] unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  X               1   19[COMRAM] unsigned char 
  2424 ;;  Temp            1   20[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2434 ;;      Params:         3       0       0       0       0       0       0       0       0
  2435 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2437 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2438 ;;Total ram usage:        5 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    7
  2441 ;; This function calls:
  2442 ;;		_Draw_point
  2443 ;; This function is called by:
  2444 ;;		_LCD_Draw_Two_Dot
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text17
  2449  000F12                     __ptext17:
  2450                           	opt callstack 0
  2451  000F12                     _v_Lcd12864DrawLineY_f:
  2452                           	opt callstack 22
  2453                           
  2454                           ;incstack = 0
  2455                           ;v_Lcd12864DrawLineY_f@X stored from wreg
  2456  000F12  6E14               	movwf	v_Lcd12864DrawLineY_f@X,c
  2457                           
  2458                           ;USER_C/lcd.c: 205: void v_Lcd12864DrawLineY_f(unsigned char X,unsigned char Y0,unsigned
      +                           char Y1,unsigned char Color);USER_C/lcd.c: 206: {;USER_C/lcd.c: 207:     unsigned char 
      +                          Temp;;USER_C/lcd.c: 208:     if(Y0>Y1)
  2459  000F14  5011               	movf	v_Lcd12864DrawLineY_f@Y0,w,c
  2460  000F16  5C12               	subwf	v_Lcd12864DrawLineY_f@Y1,w,c
  2461  000F18  B0D8               	btfsc	status,0,c
  2462  000F1A  D014               	goto	l2962
  2463                           
  2464                           ;USER_C/lcd.c: 209:     {;USER_C/lcd.c: 210:         Temp=Y1;
  2465  000F1C  0060  F048  F015   	movff	v_Lcd12864DrawLineY_f@Y1,v_Lcd12864DrawLineY_f@Temp
  2466                           
  2467                           ;USER_C/lcd.c: 211:         Y1=Y0;
  2468  000F22  0060  F044  F012   	movff	v_Lcd12864DrawLineY_f@Y0,v_Lcd12864DrawLineY_f@Y1
  2469                           
  2470                           ;USER_C/lcd.c: 212:         Y0=Temp;
  2471  000F28  0060  F054  F011   	movff	v_Lcd12864DrawLineY_f@Temp,v_Lcd12864DrawLineY_f@Y0
  2472  000F2E  D00A               	goto	l2962
  2473  000F30                     l2958:
  2474                           
  2475                           ;USER_C/lcd.c: 215:     Draw_point(X,Y0,Color);
  2476  000F30  0060  F044  F007   	movff	v_Lcd12864DrawLineY_f@Y0,Draw_point@Y
  2477  000F36  0060  F04C  F008   	movff	v_Lcd12864DrawLineY_f@Color,Draw_point@Color
  2478  000F3C  5014               	movf	v_Lcd12864DrawLineY_f@X,w,c
  2479  000F3E  EC05  F005         	call	_Draw_point
  2480  000F42  2A11               	incf	v_Lcd12864DrawLineY_f@Y0,f,c
  2481  000F44                     l2962:
  2482  000F44  5011               	movf	v_Lcd12864DrawLineY_f@Y0,w,c
  2483  000F46  5C12               	subwf	v_Lcd12864DrawLineY_f@Y1,w,c
  2484  000F48  A0D8               	btfss	status,0,c
  2485  000F4A  0012               	return	
  2486  000F4C  D7F1               	goto	l2958
  2487  000F4E                     __end_of_v_Lcd12864DrawLineY_f:
  2488                           	opt callstack 0
  2489                           
  2490 ;; *************** function _v_Lcd12864DrawLineX_f *****************
  2491 ;; Defined at:
  2492 ;;		line 193 in file "USER_C/lcd.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  X0              1    wreg     unsigned char 
  2495 ;;  X1              1   16[COMRAM] unsigned char 
  2496 ;;  Y               1   17[COMRAM] unsigned char 
  2497 ;;  Color           1   18[COMRAM] unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  X0              1   20[COMRAM] unsigned char 
  2500 ;;  Temp            1   19[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2510 ;;      Params:         3       0       0       0       0       0       0       0       0
  2511 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2513 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2514 ;;Total ram usage:        5 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    7
  2517 ;; This function calls:
  2518 ;;		_Draw_point
  2519 ;; This function is called by:
  2520 ;;		_LCD_Draw_Two_Dot
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text18
  2525  000F4E                     __ptext18:
  2526                           	opt callstack 0
  2527  000F4E                     _v_Lcd12864DrawLineX_f:
  2528                           	opt callstack 22
  2529                           
  2530                           ;incstack = 0
  2531                           ;v_Lcd12864DrawLineX_f@X0 stored from wreg
  2532  000F4E  6E15               	movwf	v_Lcd12864DrawLineX_f@X0,c
  2533                           
  2534                           ;USER_C/lcd.c: 193: void v_Lcd12864DrawLineX_f(unsigned char X0,unsigned char X1,unsigne
      +                          d char Y,unsigned char Color);USER_C/lcd.c: 194: {;USER_C/lcd.c: 195:     unsigned char 
      +                          Temp;;USER_C/lcd.c: 196:     if(X0>X1)
  2535  000F50  5015               	movf	v_Lcd12864DrawLineX_f@X0,w,c
  2536  000F52  5C11               	subwf	v_Lcd12864DrawLineX_f@X1,w,c
  2537  000F54  B0D8               	btfsc	status,0,c
  2538  000F56  D014               	goto	l2974
  2539                           
  2540                           ;USER_C/lcd.c: 197:     {;USER_C/lcd.c: 198:         Temp=X1;
  2541  000F58  0060  F044  F014   	movff	v_Lcd12864DrawLineX_f@X1,v_Lcd12864DrawLineX_f@Temp
  2542                           
  2543                           ;USER_C/lcd.c: 199:         X1=X0;
  2544  000F5E  0060  F054  F011   	movff	v_Lcd12864DrawLineX_f@X0,v_Lcd12864DrawLineX_f@X1
  2545                           
  2546                           ;USER_C/lcd.c: 200:         X0=Temp;
  2547  000F64  0060  F050  F015   	movff	v_Lcd12864DrawLineX_f@Temp,v_Lcd12864DrawLineX_f@X0
  2548  000F6A  D00A               	goto	l2974
  2549  000F6C                     l2970:
  2550                           
  2551                           ;USER_C/lcd.c: 203:     Draw_point(X0,Y,Color);
  2552  000F6C  0060  F048  F007   	movff	v_Lcd12864DrawLineX_f@Y,Draw_point@Y
  2553  000F72  0060  F04C  F008   	movff	v_Lcd12864DrawLineX_f@Color,Draw_point@Color
  2554  000F78  5015               	movf	v_Lcd12864DrawLineX_f@X0,w,c
  2555  000F7A  EC05  F005         	call	_Draw_point
  2556  000F7E  2A15               	incf	v_Lcd12864DrawLineX_f@X0,f,c
  2557  000F80                     l2974:
  2558  000F80  5015               	movf	v_Lcd12864DrawLineX_f@X0,w,c
  2559  000F82  5C11               	subwf	v_Lcd12864DrawLineX_f@X1,w,c
  2560  000F84  A0D8               	btfss	status,0,c
  2561  000F86  0012               	return	
  2562  000F88  D7F1               	goto	l2970
  2563  000F8A                     __end_of_v_Lcd12864DrawLineX_f:
  2564                           	opt callstack 0
  2565                           
  2566 ;; *************** function _Draw_point *****************
  2567 ;; Defined at:
  2568 ;;		line 145 in file "USER_C/lcd.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  X               1    wreg     unsigned char 
  2571 ;;  Y               1    6[COMRAM] unsigned char 
  2572 ;;  Color           1    7[COMRAM] unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  X               1   10[COMRAM] unsigned char 
  2575 ;;  Tier_bit        1   15[COMRAM] unsigned char 
  2576 ;;  ReadOldL        1   14[COMRAM] unsigned char 
  2577 ;;  ReadOldH        1   13[COMRAM] unsigned char 
  2578 ;;  Tier            1   12[COMRAM] unsigned char 
  2579 ;;  Row             1   11[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         2       0       0       0       0       0       0       0       0
  2590 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2592 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:       10 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    6
  2596 ;; This function calls:
  2597 ;;		_LCD_read_arm
  2598 ;;		_sendCom
  2599 ;;		_sendDat
  2600 ;; This function is called by:
  2601 ;;		_LCD_Draw_Two_Dot
  2602 ;;		_v_Lcd12864DrawLineX_f
  2603 ;;		_v_Lcd12864DrawLineY_f
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text19
  2608  000A0A                     __ptext19:
  2609                           	opt callstack 0
  2610  000A0A                     _Draw_point:
  2611                           	opt callstack 22
  2612                           
  2613                           ;incstack = 0
  2614                           ;Draw_point@X stored from wreg
  2615  000A0A  6E0B               	movwf	Draw_point@X,c
  2616                           
  2617                           ;USER_C/lcd.c: 145: void Draw_point(unsigned char X,unsigned char Y,unsigned char Color)
      +                          ;USER_C/lcd.c: 146: {;USER_C/lcd.c: 147:     unsigned char Row, Tier, Tier_bit;;USER_C/l
      +                          cd.c: 148:     unsigned char ReadOldH, ReadOldL;;USER_C/lcd.c: 149:     sendCom(0x34);
  2618  000A0C  0E34               	movlw	52
  2619  000A0E  EC49  F008         	call	_sendCom
  2620                           
  2621                           ;USER_C/lcd.c: 150:     sendCom(0x36);
  2622  000A12  0E36               	movlw	54
  2623  000A14  EC49  F008         	call	_sendCom
  2624                           
  2625                           ;USER_C/lcd.c: 151:     Tier=X>>4;
  2626  000A18  380B               	swapf	Draw_point@X,w,c
  2627  000A1A  0B0F               	andlw	15
  2628  000A1C  6E0D               	movwf	Draw_point@Tier,c
  2629                           
  2630                           ;USER_C/lcd.c: 152:     Tier_bit=X&0x0f;
  2631  000A1E  500B               	movf	Draw_point@X,w,c
  2632  000A20  0B0F               	andlw	15
  2633  000A22  6E10               	movwf	Draw_point@Tier_bit,c
  2634                           
  2635                           ;USER_C/lcd.c: 154:     if(Y<32) { Row=Y; }
  2636  000A24  0E20               	movlw	32
  2637  000A26  6007               	cpfslt	Draw_point@Y,c
  2638  000A28  D004               	goto	l2896
  2639  000A2A  0060  F01C  F00C   	movff	Draw_point@Y,Draw_point@Row
  2640  000A30  D005               	goto	l2898
  2641  000A32                     l2896:
  2642  000A32  5007               	movf	Draw_point@Y,w,c
  2643  000A34  0FE0               	addlw	224
  2644  000A36  6E0C               	movwf	Draw_point@Row,c
  2645  000A38  0E08               	movlw	8
  2646  000A3A  260D               	addwf	Draw_point@Tier,f,c
  2647  000A3C                     l2898:
  2648                           
  2649                           ;USER_C/lcd.c: 157:     sendCom(Row+0x80);
  2650  000A3C  500C               	movf	Draw_point@Row,w,c
  2651  000A3E  0F80               	addlw	128
  2652  000A40  EC49  F008         	call	_sendCom
  2653                           
  2654                           ;USER_C/lcd.c: 158:     sendCom(Tier+0x80);
  2655  000A44  500D               	movf	Draw_point@Tier,w,c
  2656  000A46  0F80               	addlw	128
  2657  000A48  EC49  F008         	call	_sendCom
  2658                           
  2659                           ;USER_C/lcd.c: 160:     LCD_read_arm();
  2660  000A4C  EC30  F008         	call	_LCD_read_arm	;wreg free
  2661                           
  2662                           ;USER_C/lcd.c: 161:     ReadOldH=LCD_read_arm();
  2663  000A50  EC30  F008         	call	_LCD_read_arm	;wreg free
  2664  000A54  6E0E               	movwf	Draw_point@ReadOldH,c
  2665                           
  2666                           ;USER_C/lcd.c: 162:     ReadOldL=LCD_read_arm();
  2667  000A56  EC30  F008         	call	_LCD_read_arm	;wreg free
  2668  000A5A  6E0F               	movwf	Draw_point@ReadOldL,c
  2669                           
  2670                           ;USER_C/lcd.c: 164:     sendCom(Row+0x80);
  2671  000A5C  500C               	movf	Draw_point@Row,w,c
  2672  000A5E  0F80               	addlw	128
  2673  000A60  EC49  F008         	call	_sendCom
  2674                           
  2675                           ;USER_C/lcd.c: 165:     sendCom(Tier+0x80);
  2676  000A64  500D               	movf	Draw_point@Tier,w,c
  2677  000A66  0F80               	addlw	128
  2678  000A68  EC49  F008         	call	_sendCom
  2679                           
  2680                           ;USER_C/lcd.c: 166:     if(Tier_bit<8 )
  2681  000A6C  0E08               	movlw	8
  2682  000A6E  6010               	cpfslt	Draw_point@Tier_bit,c
  2683  000A70  D06F               	goto	l2936
  2684  000A72  D02B               	goto	l2924
  2685  000A74                     l2916:
  2686  000A74  5010               	movf	Draw_point@Tier_bit,w,c
  2687  000A76  0807               	sublw	7
  2688  000A78  6E09               	movwf	??_Draw_point& (0+255),c
  2689  000A7A  0E01               	movlw	1
  2690  000A7C  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2691  000A7E  2A09               	incf	??_Draw_point,f,c
  2692  000A80  D002               	goto	u994
  2693  000A82                     u995:
  2694  000A82  90D8               	bcf	status,0,c
  2695  000A84  360A               	rlcf	??_Draw_point+1,f,c
  2696  000A86                     u994:
  2697  000A86  2E09               	decfsz	??_Draw_point,f,c
  2698  000A88  D7FC               	goto	u995
  2699  000A8A  500A               	movf	??_Draw_point+1,w,c
  2700  000A8C  0AFF               	xorlw	255
  2701  000A8E  160E               	andwf	Draw_point@ReadOldH,f,c
  2702  000A90  D02D               	goto	l2926
  2703  000A92                     l2918:
  2704  000A92  5010               	movf	Draw_point@Tier_bit,w,c
  2705  000A94  0807               	sublw	7
  2706  000A96  6E09               	movwf	??_Draw_point& (0+255),c
  2707  000A98  0E01               	movlw	1
  2708  000A9A  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2709  000A9C  2A09               	incf	??_Draw_point,f,c
  2710  000A9E  D002               	goto	u1004
  2711  000AA0                     u1005:
  2712  000AA0  90D8               	bcf	status,0,c
  2713  000AA2  360A               	rlcf	??_Draw_point+1,f,c
  2714  000AA4                     u1004:
  2715  000AA4  2E09               	decfsz	??_Draw_point,f,c
  2716  000AA6  D7FC               	goto	u1005
  2717  000AA8  500A               	movf	??_Draw_point+1,w,c
  2718  000AAA  120E               	iorwf	Draw_point@ReadOldH,f,c
  2719  000AAC  D01F               	goto	l2926
  2720  000AAE                     l2920:
  2721  000AAE  5010               	movf	Draw_point@Tier_bit,w,c
  2722  000AB0  0807               	sublw	7
  2723  000AB2  6E09               	movwf	??_Draw_point& (0+255),c
  2724  000AB4  0E01               	movlw	1
  2725  000AB6  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2726  000AB8  2A09               	incf	??_Draw_point,f,c
  2727  000ABA  D002               	goto	u1014
  2728  000ABC                     u1015:
  2729  000ABC  90D8               	bcf	status,0,c
  2730  000ABE  360A               	rlcf	??_Draw_point+1,f,c
  2731  000AC0                     u1014:
  2732  000AC0  2E09               	decfsz	??_Draw_point,f,c
  2733  000AC2  D7FC               	goto	u1015
  2734  000AC4  500A               	movf	??_Draw_point+1,w,c
  2735  000AC6  1A0E               	xorwf	Draw_point@ReadOldH,f,c
  2736  000AC8  D011               	goto	l2926
  2737  000ACA                     l2924:
  2738  000ACA  5008               	movf	Draw_point@Color,w,c
  2739  000ACC  6E09               	movwf	??_Draw_point& (0+255),c
  2740  000ACE  6A0A               	clrf	(??_Draw_point+1)& (0+255),c
  2741                           
  2742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2743                           ; Switch size 1, requested type "simple"
  2744                           ; Number of cases is 1, Range of values is 0 to 0
  2745                           ; switch strategies available:
  2746                           ; Name         Instructions Cycles
  2747                           ; simple_byte            4     3 (average)
  2748                           ;	Chosen strategy is simple_byte
  2749  000AD0  500A               	movf	??_Draw_point+1,w,c
  2750  000AD2  0A00               	xorlw	0	; case 0
  2751  000AD4  A4D8               	btfss	status,2,c
  2752  000AD6  D00A               	goto	l2926
  2753                           
  2754                           ; Switch size 1, requested type "simple"
  2755                           ; Number of cases is 3, Range of values is 0 to 2
  2756                           ; switch strategies available:
  2757                           ; Name         Instructions Cycles
  2758                           ; simple_byte           10     6 (average)
  2759                           ;	Chosen strategy is simple_byte
  2760  000AD8  5009               	movf	??_Draw_point,w,c
  2761  000ADA  0A00               	xorlw	0	; case 0
  2762  000ADC  B4D8               	btfsc	status,2,c
  2763  000ADE  D7CA               	goto	l2916
  2764  000AE0  0A01               	xorlw	1	; case 1
  2765  000AE2  B4D8               	btfsc	status,2,c
  2766  000AE4  D7D6               	goto	l2918
  2767  000AE6  0A03               	xorlw	3	; case 2
  2768  000AE8  B4D8               	btfsc	status,2,c
  2769  000AEA  D7E1               	goto	l2920
  2770  000AEC                     l2926:
  2771                           
  2772                           ;USER_C/lcd.c: 175:         sendDat(ReadOldH);
  2773  000AEC  500E               	movf	Draw_point@ReadOldH,w,c
  2774  000AEE  EC04  F007         	call	_sendDat
  2775                           
  2776                           ;USER_C/lcd.c: 176:         sendDat(ReadOldL);
  2777  000AF2  500F               	movf	Draw_point@ReadOldL,w,c
  2778  000AF4  EC04  F007         	call	_sendDat
  2779                           
  2780                           ;USER_C/lcd.c: 177:     }
  2781  000AF8  D042               	goto	l843
  2782  000AFA                     l2928:
  2783  000AFA  5010               	movf	Draw_point@Tier_bit,w,c
  2784  000AFC  080F               	sublw	15
  2785  000AFE  6E09               	movwf	??_Draw_point& (0+255),c
  2786  000B00  0E01               	movlw	1
  2787  000B02  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2788  000B04  2A09               	incf	??_Draw_point,f,c
  2789  000B06  D002               	goto	u1024
  2790  000B08                     u1025:
  2791  000B08  90D8               	bcf	status,0,c
  2792  000B0A  360A               	rlcf	??_Draw_point+1,f,c
  2793  000B0C                     u1024:
  2794  000B0C  2E09               	decfsz	??_Draw_point,f,c
  2795  000B0E  D7FC               	goto	u1025
  2796  000B10  500A               	movf	??_Draw_point+1,w,c
  2797  000B12  0AFF               	xorlw	255
  2798  000B14  160F               	andwf	Draw_point@ReadOldL,f,c
  2799  000B16  D02D               	goto	l2938
  2800  000B18                     l2930:
  2801  000B18  5010               	movf	Draw_point@Tier_bit,w,c
  2802  000B1A  080F               	sublw	15
  2803  000B1C  6E09               	movwf	??_Draw_point& (0+255),c
  2804  000B1E  0E01               	movlw	1
  2805  000B20  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2806  000B22  2A09               	incf	??_Draw_point,f,c
  2807  000B24  D002               	goto	u1034
  2808  000B26                     u1035:
  2809  000B26  90D8               	bcf	status,0,c
  2810  000B28  360A               	rlcf	??_Draw_point+1,f,c
  2811  000B2A                     u1034:
  2812  000B2A  2E09               	decfsz	??_Draw_point,f,c
  2813  000B2C  D7FC               	goto	u1035
  2814  000B2E  500A               	movf	??_Draw_point+1,w,c
  2815  000B30  120F               	iorwf	Draw_point@ReadOldL,f,c
  2816  000B32  D01F               	goto	l2938
  2817  000B34                     l2932:
  2818  000B34  5010               	movf	Draw_point@Tier_bit,w,c
  2819  000B36  080F               	sublw	15
  2820  000B38  6E09               	movwf	??_Draw_point& (0+255),c
  2821  000B3A  0E01               	movlw	1
  2822  000B3C  6E0A               	movwf	(??_Draw_point+1)& (0+255),c
  2823  000B3E  2A09               	incf	??_Draw_point,f,c
  2824  000B40  D002               	goto	u1044
  2825  000B42                     u1045:
  2826  000B42  90D8               	bcf	status,0,c
  2827  000B44  360A               	rlcf	??_Draw_point+1,f,c
  2828  000B46                     u1044:
  2829  000B46  2E09               	decfsz	??_Draw_point,f,c
  2830  000B48  D7FC               	goto	u1045
  2831  000B4A  500A               	movf	??_Draw_point+1,w,c
  2832  000B4C  1A0F               	xorwf	Draw_point@ReadOldL,f,c
  2833  000B4E  D011               	goto	l2938
  2834  000B50                     l2936:
  2835  000B50  5008               	movf	Draw_point@Color,w,c
  2836  000B52  6E09               	movwf	??_Draw_point& (0+255),c
  2837  000B54  6A0A               	clrf	(??_Draw_point+1)& (0+255),c
  2838                           
  2839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2840                           ; Switch size 1, requested type "simple"
  2841                           ; Number of cases is 1, Range of values is 0 to 0
  2842                           ; switch strategies available:
  2843                           ; Name         Instructions Cycles
  2844                           ; simple_byte            4     3 (average)
  2845                           ;	Chosen strategy is simple_byte
  2846  000B56  500A               	movf	??_Draw_point+1,w,c
  2847  000B58  0A00               	xorlw	0	; case 0
  2848  000B5A  A4D8               	btfss	status,2,c
  2849  000B5C  D00A               	goto	l2938
  2850                           
  2851                           ; Switch size 1, requested type "simple"
  2852                           ; Number of cases is 3, Range of values is 0 to 2
  2853                           ; switch strategies available:
  2854                           ; Name         Instructions Cycles
  2855                           ; simple_byte           10     6 (average)
  2856                           ;	Chosen strategy is simple_byte
  2857  000B5E  5009               	movf	??_Draw_point,w,c
  2858  000B60  0A00               	xorlw	0	; case 0
  2859  000B62  B4D8               	btfsc	status,2,c
  2860  000B64  D7CA               	goto	l2928
  2861  000B66  0A01               	xorlw	1	; case 1
  2862  000B68  B4D8               	btfsc	status,2,c
  2863  000B6A  D7D6               	goto	l2930
  2864  000B6C  0A03               	xorlw	3	; case 2
  2865  000B6E  B4D8               	btfsc	status,2,c
  2866  000B70  D7E1               	goto	l2932
  2867  000B72                     l2938:
  2868                           
  2869                           ;USER_C/lcd.c: 187:         sendDat(ReadOldH);
  2870  000B72  500E               	movf	Draw_point@ReadOldH,w,c
  2871  000B74  EC04  F007         	call	_sendDat
  2872                           
  2873                           ;USER_C/lcd.c: 188:         sendDat(ReadOldL);
  2874  000B78  500F               	movf	Draw_point@ReadOldL,w,c
  2875  000B7A  EC04  F007         	call	_sendDat
  2876  000B7E                     l843:
  2877                           
  2878                           ;USER_C/lcd.c: 190:     sendCom(0x30);
  2879  000B7E  0E30               	movlw	48
  2880  000B80  EC49  F008         	call	_sendCom
  2881  000B84  0012               	return		;funcret
  2882  000B86                     __end_of_Draw_point:
  2883                           	opt callstack 0
  2884                           
  2885 ;; *************** function _sendDat *****************
  2886 ;; Defined at:
  2887 ;;		line 69 in file "USER_C/lcd.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  dat             1    wreg     unsigned char 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  dat             1    5[COMRAM] unsigned char 
  2892 ;;  datl            1    4[COMRAM] unsigned char 
  2893 ;;  dath            1    3[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0
  2904 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2906 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        4 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    5
  2910 ;; This function calls:
  2911 ;;		_Spi8b
  2912 ;; This function is called by:
  2913 ;;		_display_char
  2914 ;;		_LcdString
  2915 ;;		_Draw_point
  2916 ;;		_main
  2917 ;;		_display_3232
  2918 ;;		_display_1632
  2919 ;;		_display_12864
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text20
  2924  000E08                     __ptext20:
  2925                           	opt callstack 0
  2926  000E08                     _sendDat:
  2927                           	opt callstack 25
  2928                           
  2929                           ;incstack = 0
  2930                           ;sendDat@dat stored from wreg
  2931  000E08  6E06               	movwf	sendDat@dat,c
  2932                           
  2933                           ;USER_C/lcd.c: 71:     unsigned char dath, datl;;USER_C/lcd.c: 72:     dath = dat & 0xf0
      +                          ;
  2934  000E0A  5006               	movf	sendDat@dat,w,c
  2935  000E0C  0BF0               	andlw	240
  2936  000E0E  6E04               	movwf	sendDat@dath,c
  2937                           
  2938                           ;USER_C/lcd.c: 73:     datl = ((dat & 0x0f) << 4);
  2939  000E10  0060  F018  F003   	movff	sendDat@dat,??_sendDat
  2940  000E16  0E0F               	movlw	15
  2941  000E18  1603               	andwf	??_sendDat,f,c
  2942  000E1A  3803               	swapf	??_sendDat,w,c
  2943  000E1C  0BF0               	andlw	240
  2944  000E1E  6E05               	movwf	sendDat@datl,c
  2945                           
  2946                           ;USER_C/lcd.c: 75:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2947  000E20  0E07               	movlw	7
  2948  000E22  6E03               	movwf	??_sendDat& (0+255),c
  2949  000E24  0E7D               	movlw	125
  2950  000E26                     u1277:
  2951  000E26  2EE8               	decfsz	wreg,f,c
  2952  000E28  D7FE               	bra	u1277
  2953  000E2A  2E03               	decfsz	??_sendDat& (0+255),f,c
  2954  000E2C  D7FC               	bra	u1277
  2955  000E2E  F000               	nop	
  2956                           
  2957                           ;USER_C/lcd.c: 76:     Spi8b(0xfa);
  2958  000E30  0EFA               	movlw	250
  2959  000E32  ECE1  F007         	call	_Spi8b
  2960                           
  2961                           ;USER_C/lcd.c: 78:     Spi8b(dath);
  2962  000E36  5004               	movf	sendDat@dath,w,c
  2963  000E38  ECE1  F007         	call	_Spi8b
  2964                           
  2965                           ;USER_C/lcd.c: 80:     Spi8b(datl);
  2966  000E3C  5005               	movf	sendDat@datl,w,c
  2967  000E3E  ECE1  F007         	call	_Spi8b
  2968                           
  2969                           ;USER_C/lcd.c: 81:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2970  000E42  0E07               	movlw	7
  2971  000E44  6E03               	movwf	??_sendDat& (0+255),c
  2972  000E46  0E7D               	movlw	125
  2973  000E48                     u1287:
  2974  000E48  2EE8               	decfsz	wreg,f,c
  2975  000E4A  D7FE               	bra	u1287
  2976  000E4C  2E03               	decfsz	??_sendDat& (0+255),f,c
  2977  000E4E  D7FC               	bra	u1287
  2978  000E50  F000               	nop	
  2979  000E52  0012               	return		;funcret
  2980  000E54                     __end_of_sendDat:
  2981                           	opt callstack 0
  2982                           
  2983 ;; *************** function _LCD_read_arm *****************
  2984 ;; Defined at:
  2985 ;;		line 134 in file "USER_C/lcd.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  a3              1    5[COMRAM] unsigned char 
  2990 ;;  a2              1    4[COMRAM] unsigned char 
  2991 ;;  a1              1    3[COMRAM] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      unsigned char 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3001 ;;      Params:         0       0       0       0       0       0       0       0       0
  3002 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3003 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3004 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3005 ;;Total ram usage:        4 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    5
  3008 ;; This function calls:
  3009 ;;		_Readspi
  3010 ;;		_Spi8b
  3011 ;; This function is called by:
  3012 ;;		_Draw_point
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text21
  3017  001060                     __ptext21:
  3018                           	opt callstack 0
  3019  001060                     _LCD_read_arm:
  3020                           	opt callstack 22
  3021                           
  3022                           ;USER_C/lcd.c: 137:     unsigned char a2=0x00;
  3023                           
  3024                           ;incstack = 0
  3025  001060  0E00               	movlw	0
  3026  001062  6E05               	movwf	LCD_read_arm@a2,c
  3027                           
  3028                           ;USER_C/lcd.c: 138:     unsigned char a3=0x00;
  3029  001064  0E00               	movlw	0
  3030  001066  6E06               	movwf	LCD_read_arm@a3,c
  3031                           
  3032                           ;USER_C/lcd.c: 139:     Spi8b(0xfe);
  3033  001068  0EFE               	movlw	254
  3034  00106A  ECE1  F007         	call	_Spi8b
  3035                           
  3036                           ;USER_C/lcd.c: 140:     a1=Readspi();
  3037  00106E  ECC5  F007         	call	_Readspi	;wreg free
  3038  001072  6E04               	movwf	LCD_read_arm@a1,c
  3039                           
  3040                           ;USER_C/lcd.c: 141:     a2=Readspi();
  3041  001074  ECC5  F007         	call	_Readspi	;wreg free
  3042  001078  6E05               	movwf	LCD_read_arm@a2,c
  3043                           
  3044                           ;USER_C/lcd.c: 142:     a3=(a1&0xf0)|(a2>>4);
  3045  00107A  0060  F014  F003   	movff	LCD_read_arm@a2,??_LCD_read_arm
  3046  001080  3A03               	swapf	??_LCD_read_arm,f,c
  3047  001082  0E0F               	movlw	15
  3048  001084  1603               	andwf	??_LCD_read_arm,f,c
  3049  001086  5004               	movf	LCD_read_arm@a1,w,c
  3050  001088  0BF0               	andlw	240
  3051  00108A  1003               	iorwf	??_LCD_read_arm,w,c
  3052  00108C  6E06               	movwf	LCD_read_arm@a3,c
  3053                           
  3054                           ;USER_C/lcd.c: 143:     return (a3);
  3055  00108E  5006               	movf	LCD_read_arm@a3,w,c
  3056  001090  0012               	return		;funcret
  3057  001092                     __end_of_LCD_read_arm:
  3058                           	opt callstack 0
  3059                           
  3060 ;; *************** function _Readspi *****************
  3061 ;; Defined at:
  3062 ;;		line 110 in file "USER_C/lcd.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  dat             1    1[COMRAM] unsigned char 
  3067 ;;  i               1    0[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      unsigned char 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3080 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        2 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    4
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_LCD_read_arm
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text22
  3092  000F8A                     __ptext22:
  3093                           	opt callstack 0
  3094  000F8A                     _Readspi:
  3095                           	opt callstack 22
  3096                           
  3097                           ;USER_C/lcd.c: 113:     unsigned char dat=0xff;
  3098                           
  3099                           ;incstack = 0
  3100  000F8A  6802               	setf	Readspi@dat,c
  3101                           
  3102                           ;USER_C/lcd.c: 115:     for (i = 0; i < 8; i++) {
  3103  000F8C  0E00               	movlw	0
  3104  000F8E  6E01               	movwf	Readspi@i,c
  3105  000F90                     l820:
  3106  000F90  88BC               	bsf	16316,4,c	;volatile
  3107                           
  3108                           ;USER_C/lcd.c: 118:         do { LATCbits.LATC3 = 1; } while(0);
  3109  000F92  86BC               	bsf	16316,3,c	;volatile
  3110                           
  3111                           ;USER_C/lcd.c: 119:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3112  000F94  0EA6               	movlw	166
  3113  000F96                     u1297:
  3114  000F96  2EE8               	decfsz	wreg,f,c
  3115  000F98  D7FE               	bra	u1297
  3116  000F9A  D000               	nop2	
  3117  000F9C  96BC               	bcf	16316,3,c	;volatile
  3118                           
  3119                           ;USER_C/lcd.c: 121:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3120  000F9E  0EA6               	movlw	166
  3121  000FA0                     u1307:
  3122  000FA0  2EE8               	decfsz	wreg,f,c
  3123  000FA2  D7FE               	bra	u1307
  3124  000FA4  D000               	nop2	
  3125                           
  3126                           ;USER_C/lcd.c: 122:         if(PORTCbits.RC4==1)
  3127  000FA6  A8CC               	btfss	16332,4,c	;volatile
  3128  000FA8  D003               	goto	l1758
  3129                           
  3130                           ;USER_C/lcd.c: 123:         {;USER_C/lcd.c: 124:             dat=dat|0x01;
  3131  000FAA  5002               	movf	Readspi@dat,w,c
  3132  000FAC  0901               	iorlw	1
  3133  000FAE  6E02               	movwf	Readspi@dat,c
  3134  000FB0                     l1758:
  3135                           
  3136                           ;USER_C/lcd.c: 130:         dat = dat << 1;
  3137  000FB0  5002               	movf	Readspi@dat,w,c
  3138  000FB2  2402               	addwf	Readspi@dat,w,c
  3139  000FB4  6E02               	movwf	Readspi@dat,c
  3140                           
  3141                           ;USER_C/lcd.c: 131:     }
  3142  000FB6  2A01               	incf	Readspi@i,f,c
  3143  000FB8  0E07               	movlw	7
  3144  000FBA  6401               	cpfsgt	Readspi@i,c
  3145  000FBC  D7E9               	goto	l820
  3146                           
  3147                           ;USER_C/lcd.c: 132:     return (dat);
  3148  000FBE  5002               	movf	Readspi@dat,w,c
  3149  000FC0  0012               	return		;funcret
  3150  000FC2                     __end_of_Readspi:
  3151                           	opt callstack 0
  3152                           
  3153 ;; *************** function _abs *****************
  3154 ;; Defined at:
  3155 ;;		line 1 in file "D:\XC8\pic\sources\c99\common\abs.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  a               2    0[COMRAM] int 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2    0[COMRAM] int 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3169 ;;      Params:         2       0       0       0       0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3171 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3172 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3173 ;;Total ram usage:        4 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    4
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_LCD_Draw_Two_Dot
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text23
  3184  000ED4                     __ptext23:
  3185                           	opt callstack 0
  3186  000ED4                     _abs:
  3187                           	opt callstack 25
  3188                           
  3189                           ;incstack = 0
  3190  000ED4  BE02               	btfsc	abs@a+1,7,c
  3191  000ED6  D005               	goto	u1090
  3192  000ED8  5002               	movf	abs@a+1,w,c
  3193  000EDA  E114               	bnz	l1585
  3194  000EDC  0401               	decf	abs@a,w,c
  3195  000EDE  B0D8               	btfsc	status,0,c
  3196  000EE0  D011               	goto	l1585
  3197  000EE2                     u1090:
  3198  000EE2  0060  F004  F003   	movff	abs@a,??_abs
  3199  000EE8  0060  F008  F004   	movff	abs@a+1,??_abs+1
  3200  000EEE  1E03               	comf	??_abs,f,c
  3201  000EF0  1E04               	comf	??_abs+1,f,c
  3202  000EF2  4A03               	infsnz	??_abs,f,c
  3203  000EF4  2A04               	incf	??_abs+1,f,c
  3204  000EF6  0060  F00C  F001   	movff	??_abs,?_abs
  3205  000EFC  0060  F010  F002   	movff	??_abs+1,?_abs+1
  3206  000F02  0012               	return	
  3207  000F04                     l1585:
  3208  000F04  0060  F004  F001   	movff	abs@a,?_abs
  3209  000F0A  0060  F008  F002   	movff	abs@a+1,?_abs+1
  3210  000F10  0012               	return		;funcret
  3211  000F12                     __end_of_abs:
  3212                           	opt callstack 0
  3213                           
  3214 ;; *************** function _LCDInit *****************
  3215 ;; Defined at:
  3216 ;;		line 12 in file "USER_C/lcd.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3233 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3234 ;;Total ram usage:        1 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    6
  3237 ;; This function calls:
  3238 ;;		_sendCom
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text24
  3245  000DB4                     __ptext24:
  3246                           	opt callstack 0
  3247  000DB4                     _LCDInit:
  3248                           	opt callstack 24
  3249                           
  3250                           ;incstack = 0
  3251                           ;USER_C/lcd.c: 13:     do { LATBbits.LATB5 = 0; } while(0);
  3252  000DB4  9ABB               	bcf	16315,5,c	;volatile
  3253                           
  3254                           ;USER_C/lcd.c: 14:     _delay((unsigned long)((10)*(1000000/4000.0)));
  3255  000DB6  0E04               	movlw	4
  3256  000DB8  6E07               	movwf	??_LCDInit& (0+255),c
  3257  000DBA  0E3E               	movlw	62
  3258  000DBC                     u1317:
  3259  000DBC  2EE8               	decfsz	wreg,f,c
  3260  000DBE  D7FE               	bra	u1317
  3261  000DC0  2E07               	decfsz	??_LCDInit& (0+255),f,c
  3262  000DC2  D7FC               	bra	u1317
  3263  000DC4  8ABB               	bsf	16315,5,c	;volatile
  3264                           
  3265                           ;USER_C/lcd.c: 16:     _delay((unsigned long)((100)*(1000000/4000.0)));
  3266  000DC6  0E21               	movlw	33
  3267  000DC8  6E07               	movwf	??_LCDInit& (0+255),c
  3268  000DCA  0E76               	movlw	118
  3269  000DCC                     u1327:
  3270  000DCC  2EE8               	decfsz	wreg,f,c
  3271  000DCE  D7FE               	bra	u1327
  3272  000DD0  2E07               	decfsz	??_LCDInit& (0+255),f,c
  3273  000DD2  D7FC               	bra	u1327
  3274  000DD4  D000               	nop2	
  3275  000DD6  8ABA               	bsf	16314,5,c	;volatile
  3276  000DD8  98BC               	bcf	16316,4,c	;volatile
  3277  000DDA  96BC               	bcf	16316,3,c	;volatile
  3278                           
  3279                           ;USER_C/lcd.c: 20:     sendCom(0x30);
  3280  000DDC  0E30               	movlw	48
  3281  000DDE  EC49  F008         	call	_sendCom
  3282                           
  3283                           ;USER_C/lcd.c: 21:     sendCom(0x0c);
  3284  000DE2  0E0C               	movlw	12
  3285  000DE4  EC49  F008         	call	_sendCom
  3286                           
  3287                           ;USER_C/lcd.c: 24:     sendCom(0x01);
  3288  000DE8  0E01               	movlw	1
  3289  000DEA  EC49  F008         	call	_sendCom
  3290                           
  3291                           ;USER_C/lcd.c: 26:     sendCom(0x02);
  3292  000DEE  0E02               	movlw	2
  3293  000DF0  EC49  F008         	call	_sendCom
  3294                           
  3295                           ;USER_C/lcd.c: 27:     sendCom(0x06);
  3296  000DF4  0E06               	movlw	6
  3297  000DF6  EC49  F008         	call	_sendCom
  3298                           
  3299                           ;USER_C/lcd.c: 28:     sendCom(0x0c);
  3300  000DFA  0E0C               	movlw	12
  3301  000DFC  EC49  F008         	call	_sendCom
  3302                           
  3303                           ;USER_C/lcd.c: 29:     sendCom(0x14);
  3304  000E00  0E14               	movlw	20
  3305  000E02  EC49  F008         	call	_sendCom
  3306  000E06  0012               	return		;funcret
  3307  000E08                     __end_of_LCDInit:
  3308                           	opt callstack 0
  3309                           
  3310 ;; *************** function _sendCom *****************
  3311 ;; Defined at:
  3312 ;;		line 52 in file "USER_C/lcd.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  com             1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  com             1    5[COMRAM] unsigned char 
  3317 ;;  coml            1    4[COMRAM] unsigned char 
  3318 ;;  comh            1    3[COMRAM] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0
  3329 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3330 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3331 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3332 ;;Total ram usage:        4 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    5
  3335 ;; This function calls:
  3336 ;;		_Spi8b
  3337 ;; This function is called by:
  3338 ;;		_display_char
  3339 ;;		_LCDInit
  3340 ;;		_position
  3341 ;;		_Draw_point
  3342 ;;		_display_3232
  3343 ;;		_display_1632
  3344 ;;		_display_12864
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text25
  3349  001092                     __ptext25:
  3350                           	opt callstack 0
  3351  001092                     _sendCom:
  3352                           	opt callstack 24
  3353                           
  3354                           ;incstack = 0
  3355                           ;sendCom@com stored from wreg
  3356  001092  6E06               	movwf	sendCom@com,c
  3357                           
  3358                           ;USER_C/lcd.c: 54:     unsigned char comh, coml;;USER_C/lcd.c: 55:     comh = com & 0xf0
      +                          ;
  3359  001094  5006               	movf	sendCom@com,w,c
  3360  001096  0BF0               	andlw	240
  3361  001098  6E04               	movwf	sendCom@comh,c
  3362                           
  3363                           ;USER_C/lcd.c: 56:     coml = ((com & 0x0f) << 4);
  3364  00109A  0060  F018  F003   	movff	sendCom@com,??_sendCom
  3365  0010A0  0E0F               	movlw	15
  3366  0010A2  1603               	andwf	??_sendCom,f,c
  3367  0010A4  3803               	swapf	??_sendCom,w,c
  3368  0010A6  0BF0               	andlw	240
  3369  0010A8  6E05               	movwf	sendCom@coml,c
  3370                           
  3371                           ;USER_C/lcd.c: 59:     Spi8b(0xf8);
  3372  0010AA  0EF8               	movlw	248
  3373  0010AC  ECE1  F007         	call	_Spi8b
  3374                           
  3375                           ;USER_C/lcd.c: 61:     Spi8b(comh);
  3376  0010B0  5004               	movf	sendCom@comh,w,c
  3377  0010B2  ECE1  F007         	call	_Spi8b
  3378                           
  3379                           ;USER_C/lcd.c: 63:     Spi8b(coml);
  3380  0010B6  5005               	movf	sendCom@coml,w,c
  3381  0010B8  ECE1  F007         	call	_Spi8b
  3382  0010BC  0012               	return		;funcret
  3383  0010BE                     __end_of_sendCom:
  3384                           	opt callstack 0
  3385                           
  3386 ;; *************** function _Spi8b *****************
  3387 ;; Defined at:
  3388 ;;		line 32 in file "USER_C/lcd.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  dat             1    wreg     unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  dat             1    0[COMRAM] unsigned char 
  3393 ;;  i               1    1[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0
  3404 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3406 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3407 ;;Total ram usage:        2 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    4
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_sendCom
  3414 ;;		_sendDat
  3415 ;;		_LCD_read_arm
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text26
  3420  000FC2                     __ptext26:
  3421                           	opt callstack 0
  3422  000FC2                     _Spi8b:
  3423                           	opt callstack 25
  3424                           
  3425                           ;incstack = 0
  3426                           ;Spi8b@dat stored from wreg
  3427  000FC2  6E01               	movwf	Spi8b@dat,c
  3428                           
  3429                           ;USER_C/lcd.c: 33:     char i = 0;
  3430  000FC4  0E00               	movlw	0
  3431  000FC6  6E02               	movwf	Spi8b@i,c
  3432                           
  3433                           ;USER_C/lcd.c: 35:     for (i = 0; i < 8; i++) {
  3434  000FC8  0E00               	movlw	0
  3435  000FCA  6E02               	movwf	Spi8b@i,c
  3436  000FCC                     l784:
  3437                           
  3438                           ;USER_C/lcd.c: 37:         if ((dat & 0x80) == 0x80) {
  3439  000FCC  AE01               	btfss	Spi8b@dat,7,c
  3440  000FCE  D002               	goto	l790
  3441                           
  3442                           ;USER_C/lcd.c: 38:             do { LATCbits.LATC4 = 1; } while(0);
  3443  000FD0  88BC               	bsf	16316,4,c	;volatile
  3444  000FD2  D001               	goto	l792
  3445  000FD4                     l790:
  3446  000FD4  98BC               	bcf	16316,4,c	;volatile
  3447  000FD6                     l792:
  3448  000FD6  86BC               	bsf	16316,3,c	;volatile
  3449                           
  3450                           ;USER_C/lcd.c: 43:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3451  000FD8  0EA6               	movlw	166
  3452  000FDA                     u1337:
  3453  000FDA  2EE8               	decfsz	wreg,f,c
  3454  000FDC  D7FE               	bra	u1337
  3455  000FDE  D000               	nop2	
  3456  000FE0  96BC               	bcf	16316,3,c	;volatile
  3457                           
  3458                           ;USER_C/lcd.c: 45:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3459  000FE2  0EA6               	movlw	166
  3460  000FE4                     u1347:
  3461  000FE4  2EE8               	decfsz	wreg,f,c
  3462  000FE6  D7FE               	bra	u1347
  3463  000FE8  D000               	nop2	
  3464                           
  3465                           ;USER_C/lcd.c: 46:         dat = dat << 1;
  3466  000FEA  5001               	movf	Spi8b@dat,w,c
  3467  000FEC  2401               	addwf	Spi8b@dat,w,c
  3468  000FEE  6E01               	movwf	Spi8b@dat,c
  3469                           
  3470                           ;USER_C/lcd.c: 47:     }
  3471  000FF0  2A02               	incf	Spi8b@i,f,c
  3472  000FF2  0E07               	movlw	7
  3473  000FF4  6402               	cpfsgt	Spi8b@i,c
  3474  000FF6  D7EA               	goto	l784
  3475  000FF8  0012               	return	
  3476  000FFA                     __end_of_Spi8b:
  3477                           	opt callstack 0
  3478                           
  3479 ;; *************** function _INTERRUPT_InterruptManager *****************
  3480 ;; Defined at:
  3481 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3495 ;;      Params:         0       0       0       0       0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3499 ;;Total ram usage:        0 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    3
  3502 ;; This function calls:
  3503 ;;		_ECAN_ISR_ECAN_RXB0I
  3504 ;;		_INT0_ISR
  3505 ;;		_INT1_ISR
  3506 ;;		_INT2_ISR
  3507 ;; This function is called by:
  3508 ;;		Interrupt level 2
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text27
  3513  000FFA                     __ptext27:
  3514                           	opt callstack 0
  3515  000FFA                     _INTERRUPT_InterruptManager:
  3516                           	opt callstack 22
  3517                           
  3518                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE1bits.INT0IE == 1 && PIR1bits.IN
      +                          T0IF == 1)
  3519                           
  3520                           ;incstack = 0
  3521  000FFA  0139               	movlb	57	; () banked
  3522  000FFC  B191               	btfsc	145,0,b	;volatile
  3523                           
  3524                           ; BSR set to: 57
  3525  000FFE  A1A1               	btfss	161,0,b	;volatile
  3526  001000  D003               	goto	i2l473
  3527                           
  3528                           ; BSR set to: 57
  3529                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
  3530  001002  EC06  F009         	call	_INT0_ISR	;wreg free
  3531                           
  3532                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  3533  001006  0011               	retfie		f
  3534  001008                     i2l473:
  3535                           
  3536                           ; BSR set to: 57
  3537  001008  BF94               	btfsc	148,7,b	;volatile
  3538                           
  3539                           ; BSR set to: 57
  3540  00100A  AFA4               	btfss	164,7,b	;volatile
  3541  00100C  D003               	goto	i2l475
  3542                           
  3543                           ; BSR set to: 57
  3544                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         INT1_ISR();
  3545  00100E  EC01  F009         	call	_INT1_ISR	;wreg free
  3546                           
  3547                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  3548  001012  0011               	retfie		f
  3549  001014                     i2l475:
  3550                           
  3551                           ; BSR set to: 57
  3552  001014  B195               	btfsc	149,0,b	;volatile
  3553                           
  3554                           ; BSR set to: 57
  3555  001016  A1A5               	btfss	165,0,b	;volatile
  3556  001018  D003               	goto	i2l477
  3557                           
  3558                           ; BSR set to: 57
  3559                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         ECAN_ISR_ECAN_RXB0I();
  3560  00101A  EC0B  F009         	call	_ECAN_ISR_ECAN_RXB0I	;wreg free
  3561                           
  3562                           ;mcc_generated_files/interrupt_manager.c: 72:     }
  3563  00101E  0011               	retfie		f
  3564  001020                     i2l477:
  3565                           
  3566                           ; BSR set to: 57
  3567  001020  AD98               	btfss	152,6,b	;volatile
  3568  001022  0011               	retfie		f
  3569                           
  3570                           ; BSR set to: 57
  3571  001024  ADA8               	btfss	168,6,b	;volatile
  3572  001026  0011               	retfie		f
  3573                           
  3574                           ; BSR set to: 57
  3575                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         INT2_ISR();
  3576  001028  ECFC  F008         	call	_INT2_ISR	;wreg free
  3577                           
  3578                           ;mcc_generated_files/interrupt_manager.c: 76:     }
  3579  00102C  0011               	retfie		f
  3580  00102E                     __end_of_INTERRUPT_InterruptManager:
  3581                           	opt callstack 0
  3582                           
  3583 ;; *************** function _INT2_ISR *****************
  3584 ;; Defined at:
  3585 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3602 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    2
  3606 ;; This function calls:
  3607 ;;		_INT2_CallBack
  3608 ;; This function is called by:
  3609 ;;		_INTERRUPT_InterruptManager
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text28
  3614  0011F8                     __ptext28:
  3615                           	opt callstack 0
  3616  0011F8                     _INT2_ISR:
  3617                           	opt callstack 22
  3618                           
  3619                           ;mcc_generated_files/ext_int.c: 88:     (PIR8bits.INT2IF = 0);
  3620                           
  3621                           ;incstack = 0
  3622  0011F8  0139               	movlb	57	; () banked
  3623  0011FA  9DA8               	bcf	168,6,b	;volatile
  3624                           
  3625                           ; BSR set to: 57
  3626                           ;mcc_generated_files/ext_int.c: 91:     INT2_CallBack();
  3627  0011FC  EC97  F008         	call	_INT2_CallBack	;wreg free
  3628  001200  0012               	return		;funcret
  3629  001202                     __end_of_INT2_ISR:
  3630                           	opt callstack 0
  3631                           
  3632 ;; *************** function _INT2_CallBack *****************
  3633 ;; Defined at:
  3634 ;;		line 95 in file "mcc_generated_files/ext_int.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3648 ;;      Params:         0       0       0       0       0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3651 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    1
  3655 ;; This function calls:
  3656 ;;		Absolute function
  3657 ;;		_INT2_DefaultInterruptHandler
  3658 ;; This function is called by:
  3659 ;;		_INT2_ISR
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text29
  3664  00112E                     __ptext29:
  3665                           	opt callstack 0
  3666  00112E                     _INT2_CallBack:
  3667                           	opt callstack 22
  3668                           
  3669                           ;mcc_generated_files/ext_int.c: 98:     if(INT2_InterruptHandler)
  3670                           
  3671                           ;incstack = 0
  3672  00112E  5037               	movf	_INT2_InterruptHandler,w,c
  3673  001130  1038               	iorwf	_INT2_InterruptHandler+1,w,c
  3674  001132  B4D8               	btfsc	status,2,c
  3675  001134  0012               	return	
  3676                           
  3677                           ;mcc_generated_files/ext_int.c: 99:     {;mcc_generated_files/ext_int.c: 100:         IN
      +                          T2_InterruptHandler();
  3678  001136  D801               	call	i2u25_48
  3679  001138  0012               	return	
  3680  00113A                     i2u25_48:
  3681  00113A  0005               	push	
  3682  00113C  6EFA               	movwf	pclath,c
  3683  00113E  5037               	movf	_INT2_InterruptHandler,w,c
  3684  001140  6EFD               	movwf	tosl,c
  3685  001142  5038               	movf	_INT2_InterruptHandler+1,w,c
  3686  001144  6EFE               	movwf	tosh,c
  3687  001146  50F8               	movf	tblptru,w,c
  3688  001148  6EFF               	movwf	tosu,c
  3689  00114A  50FA               	movf	pclath,w,c
  3690  00114C  0012               	return		;indir
  3691  00114E                     __end_of_INT2_CallBack:
  3692                           	opt callstack 0
  3693                           
  3694 ;; *************** function _INT2_DefaultInterruptHandler *****************
  3695 ;; Defined at:
  3696 ;;		line 108 in file "mcc_generated_files/ext_int.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		None
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_EXT_INT_Initialize
  3720 ;;		_INT2_CallBack
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text30
  3725  001220                     __ptext30:
  3726                           	opt callstack 0
  3727  001220                     _INT2_DefaultInterruptHandler:
  3728                           	opt callstack 22
  3729                           
  3730                           ;incstack = 0
  3731  001220  0012               	return		;funcret
  3732  001222                     __end_of_INT2_DefaultInterruptHandler:
  3733                           	opt callstack 0
  3734                           
  3735 ;; *************** function _INT1_ISR *****************
  3736 ;; Defined at:
  3737 ;;		line 60 in file "mcc_generated_files/ext_int.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      void 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3751 ;;      Params:         0       0       0       0       0       0       0       0       0
  3752 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3754 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3755 ;;Total ram usage:        0 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    2
  3758 ;; This function calls:
  3759 ;;		_INT1_CallBack
  3760 ;; This function is called by:
  3761 ;;		_INTERRUPT_InterruptManager
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text31
  3766  001202                     __ptext31:
  3767                           	opt callstack 0
  3768  001202                     _INT1_ISR:
  3769                           	opt callstack 22
  3770                           
  3771                           ;mcc_generated_files/ext_int.c: 62:     (PIR4bits.INT1IF = 0);
  3772                           
  3773                           ;incstack = 0
  3774  001202  0139               	movlb	57	; () banked
  3775  001204  9FA4               	bcf	164,7,b	;volatile
  3776                           
  3777                           ; BSR set to: 57
  3778                           ;mcc_generated_files/ext_int.c: 65:     INT1_CallBack();
  3779  001206  ECA7  F008         	call	_INT1_CallBack	;wreg free
  3780  00120A  0012               	return		;funcret
  3781  00120C                     __end_of_INT1_ISR:
  3782                           	opt callstack 0
  3783                           
  3784 ;; *************** function _INT1_CallBack *****************
  3785 ;; Defined at:
  3786 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3800 ;;      Params:         0       0       0       0       0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3803 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    1
  3807 ;; This function calls:
  3808 ;;		Absolute function
  3809 ;;		_INT1_DefaultInterruptHandler
  3810 ;; This function is called by:
  3811 ;;		_INT1_ISR
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text32
  3816  00114E                     __ptext32:
  3817                           	opt callstack 0
  3818  00114E                     _INT1_CallBack:
  3819                           	opt callstack 22
  3820                           
  3821                           ;mcc_generated_files/ext_int.c: 72:     if(INT1_InterruptHandler)
  3822                           
  3823                           ;incstack = 0
  3824  00114E  5039               	movf	_INT1_InterruptHandler,w,c
  3825  001150  103A               	iorwf	_INT1_InterruptHandler+1,w,c
  3826  001152  B4D8               	btfsc	status,2,c
  3827  001154  0012               	return	
  3828                           
  3829                           ;mcc_generated_files/ext_int.c: 73:     {;mcc_generated_files/ext_int.c: 74:         INT
      +                          1_InterruptHandler();
  3830  001156  D801               	call	i2u23_48
  3831  001158  0012               	return	
  3832  00115A                     i2u23_48:
  3833  00115A  0005               	push	
  3834  00115C  6EFA               	movwf	pclath,c
  3835  00115E  5039               	movf	_INT1_InterruptHandler,w,c
  3836  001160  6EFD               	movwf	tosl,c
  3837  001162  503A               	movf	_INT1_InterruptHandler+1,w,c
  3838  001164  6EFE               	movwf	tosh,c
  3839  001166  50F8               	movf	tblptru,w,c
  3840  001168  6EFF               	movwf	tosu,c
  3841  00116A  50FA               	movf	pclath,w,c
  3842  00116C  0012               	return		;indir
  3843  00116E                     __end_of_INT1_CallBack:
  3844                           	opt callstack 0
  3845                           
  3846 ;; *************** function _INT1_DefaultInterruptHandler *****************
  3847 ;; Defined at:
  3848 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		None
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_EXT_INT_Initialize
  3872 ;;		_INT1_CallBack
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text33
  3877  001222                     __ptext33:
  3878                           	opt callstack 0
  3879  001222                     _INT1_DefaultInterruptHandler:
  3880                           	opt callstack 22
  3881                           
  3882                           ;incstack = 0
  3883  001222  0012               	return		;funcret
  3884  001224                     __end_of_INT1_DefaultInterruptHandler:
  3885                           	opt callstack 0
  3886                           
  3887 ;; *************** function _INT0_ISR *****************
  3888 ;; Defined at:
  3889 ;;		line 34 in file "mcc_generated_files/ext_int.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3903 ;;      Params:         0       0       0       0       0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    2
  3910 ;; This function calls:
  3911 ;;		_INT0_CallBack
  3912 ;; This function is called by:
  3913 ;;		_INTERRUPT_InterruptManager
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text34
  3918  00120C                     __ptext34:
  3919                           	opt callstack 0
  3920  00120C                     _INT0_ISR:
  3921                           	opt callstack 22
  3922                           
  3923                           ;mcc_generated_files/ext_int.c: 36:     (PIR1bits.INT0IF = 0);
  3924                           
  3925                           ;incstack = 0
  3926  00120C  0139               	movlb	57	; () banked
  3927  00120E  91A1               	bcf	161,0,b	;volatile
  3928                           
  3929                           ; BSR set to: 57
  3930                           ;mcc_generated_files/ext_int.c: 39:     INT0_CallBack();
  3931  001210  ECB7  F008         	call	_INT0_CallBack	;wreg free
  3932  001214  0012               	return		;funcret
  3933  001216                     __end_of_INT0_ISR:
  3934                           	opt callstack 0
  3935                           
  3936 ;; *************** function _INT0_CallBack *****************
  3937 ;; Defined at:
  3938 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;		None
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;		None
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3952 ;;      Params:         0       0       0       0       0       0       0       0       0
  3953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3956 ;;Total ram usage:        0 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    1
  3959 ;; This function calls:
  3960 ;;		Absolute function
  3961 ;;		_INT0_DefaultInterruptHandler
  3962 ;; This function is called by:
  3963 ;;		_INT0_ISR
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text35
  3968  00116E                     __ptext35:
  3969                           	opt callstack 0
  3970  00116E                     _INT0_CallBack:
  3971                           	opt callstack 22
  3972                           
  3973                           ;mcc_generated_files/ext_int.c: 46:     if(INT0_InterruptHandler)
  3974                           
  3975                           ;incstack = 0
  3976  00116E  503B               	movf	_INT0_InterruptHandler,w,c
  3977  001170  103C               	iorwf	_INT0_InterruptHandler+1,w,c
  3978  001172  B4D8               	btfsc	status,2,c
  3979  001174  0012               	return	
  3980                           
  3981                           ;mcc_generated_files/ext_int.c: 47:     {;mcc_generated_files/ext_int.c: 48:         INT
      +                          0_InterruptHandler();
  3982  001176  D801               	call	i2u21_48
  3983  001178  0012               	return	
  3984  00117A                     i2u21_48:
  3985  00117A  0005               	push	
  3986  00117C  6EFA               	movwf	pclath,c
  3987  00117E  503B               	movf	_INT0_InterruptHandler,w,c
  3988  001180  6EFD               	movwf	tosl,c
  3989  001182  503C               	movf	_INT0_InterruptHandler+1,w,c
  3990  001184  6EFE               	movwf	tosh,c
  3991  001186  50F8               	movf	tblptru,w,c
  3992  001188  6EFF               	movwf	tosu,c
  3993  00118A  50FA               	movf	pclath,w,c
  3994  00118C  0012               	return		;indir
  3995  00118E                     __end_of_INT0_CallBack:
  3996                           	opt callstack 0
  3997                           
  3998 ;; *************** function _INT0_DefaultInterruptHandler *****************
  3999 ;; Defined at:
  4000 ;;		line 56 in file "mcc_generated_files/ext_int.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		None
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4014 ;;      Params:         0       0       0       0       0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_EXT_INT_Initialize
  4024 ;;		_INT0_CallBack
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text36
  4029  001224                     __ptext36:
  4030                           	opt callstack 0
  4031  001224                     _INT0_DefaultInterruptHandler:
  4032                           	opt callstack 22
  4033                           
  4034                           ;incstack = 0
  4035  001224  0012               	return		;funcret
  4036  001226                     __end_of_INT0_DefaultInterruptHandler:
  4037                           	opt callstack 0
  4038                           
  4039 ;; *************** function _ECAN_ISR_ECAN_RXB0I *****************
  4040 ;; Defined at:
  4041 ;;		line 62 in file "mcc_generated_files/ecan.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		None
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4055 ;;      Params:         0       0       0       0       0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_INTERRUPT_InterruptManager
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text37
  4069  001216                     __ptext37:
  4070                           	opt callstack 0
  4071  001216                     _ECAN_ISR_ECAN_RXB0I:
  4072                           	opt callstack 24
  4073                           
  4074                           ;mcc_generated_files/ecan.c: 66:     PIR5bits.RXB0IF = 0;
  4075                           
  4076                           ;incstack = 0
  4077  001216  0139               	movlb	57	; () banked
  4078  001218  91A5               	bcf	165,0,b	;volatile
  4079                           
  4080                           ; BSR set to: 57
  4081  00121A  0012               	return		;funcret
  4082  00121C                     __end_of_ECAN_ISR_ECAN_RXB0I:
  4083                           	opt callstack 0
  4084                           
  4085                           ;
  4086                           ; Interrupt Vector Table @ 0x8
  4087                           ;
  4088                           
  4089                           	psect	ivt0x8
  4090  000008                     __pivt0x8:
  4091                           	opt callstack 0
  4092  000008                     ivt0x8_base:
  4093                           	opt callstack 0
  4094                           
  4095                           ; high-priority vector
  4096  000008  EFFD  F007         	goto	_INTERRUPT_InterruptManager
  4097  000018                     	org	16
  4098                           
  4099                           ; low-priority vector
  4100  000018  00FF               	reset	
  4101                           
  4102                           	psect	text38
  4103  000000                     __ptext38:
  4104                           	opt callstack 0
  4105                           
  4106                           	psect	rparam
  4107  0000                     tosu	equ	0x3FFF
  4108                           tosh	equ	0x3FFE
  4109                           tosl	equ	0x3FFD
  4110                           stkptr	equ	0x3FFC
  4111                           pclatu	equ	0x3FFB
  4112                           pclath	equ	0x3FFA
  4113                           pcl	equ	0x3FF9
  4114                           tblptru	equ	0x3FF8
  4115                           tblptrh	equ	0x3FF7
  4116                           tblptrl	equ	0x3FF6
  4117                           tablat	equ	0x3FF5
  4118                           prodh	equ	0x3FF4
  4119                           prodl	equ	0x3FF3
  4120                           indf0	equ	0x3FEF
  4121                           postinc0	equ	0x3FEE
  4122                           postdec0	equ	0x3FED
  4123                           preinc0	equ	0x3FEC
  4124                           plusw0	equ	0x3FEB
  4125                           fsr0h	equ	0x3FEA
  4126                           fsr0l	equ	0x3FE9
  4127                           wreg	equ	0x3FE8
  4128                           indf1	equ	0x3FE7
  4129                           postinc1	equ	0x3FE6
  4130                           postdec1	equ	0x3FE5
  4131                           preinc1	equ	0x3FE4
  4132                           plusw1	equ	0x3FE3
  4133                           fsr1h	equ	0x3FE2
  4134                           fsr1l	equ	0x3FE1
  4135                           bsr	equ	0x3FE0
  4136                           indf2	equ	0x3FDF
  4137                           postinc2	equ	0x3FDE
  4138                           postdec2	equ	0x3FDD
  4139                           preinc2	equ	0x3FDC
  4140                           plusw2	equ	0x3FDB
  4141                           fsr2h	equ	0x3FDA
  4142                           fsr2l	equ	0x3FD9
  4143                           status	equ	0x3FD8


Data Sizes:
    Strings     16
    Constant    84
    Data        0
    BSS         9
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      60
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LcdString@p	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    display_char@p	PTR unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Draw_Two_Dot
    _position->_sendCom
    _display_char->_sendCom
    _display_char->_sendDat
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LcdString->_sendDat
    _LCD_Draw_Two_Dot->_v_Lcd12864DrawLineX_f
    _LCD_Draw_Two_Dot->_v_Lcd12864DrawLineY_f
    _v_Lcd12864DrawLineY_f->_Draw_point
    _v_Lcd12864DrawLineX_f->_Draw_point
    _Draw_point->_LCD_read_arm
    _Draw_point->_sendCom
    _Draw_point->_sendDat
    _sendDat->_Spi8b
    _LCD_read_arm->_Readspi
    _LCD_read_arm->_Spi8b
    _LCDInit->_sendCom
    _sendCom->_Spi8b

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9439
                                             43 COMRAM     2     2      0
                            _LCDInit
                   _LCD_Draw_Two_Dot
                          _LcdString
                  _SYSTEM_Initialize
                       _display_char
                            _ledtest
                           _position
                            _sendDat
 ---------------------------------------------------------------------------------
 (1) _position                                             3     2      1     474
                                              6 COMRAM     3     2      1
                            _sendCom
 ---------------------------------------------------------------------------------
 (1) _ledtest                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_char                                        12     4      8     681
                                              6 COMRAM    12     4      8
                            _sendCom
                            _sendDat
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ECAN_Initialize
                 _EXT_INT_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LcdString                                            2     0      2     241
                                              6 COMRAM     2     0      2
                            _sendDat
 ---------------------------------------------------------------------------------
 (1) _LCD_Draw_Two_Dot                                    22    18      4    7509
                                             21 COMRAM    22    18      4
                         _Draw_point
                                _abs
              _v_Lcd12864DrawLineX_f
              _v_Lcd12864DrawLineY_f
 ---------------------------------------------------------------------------------
 (2) _v_Lcd12864DrawLineY_f                                5     2      3    1977
                                             16 COMRAM     5     2      3
                         _Draw_point
 ---------------------------------------------------------------------------------
 (2) _v_Lcd12864DrawLineX_f                                5     2      3    1977
                                             16 COMRAM     5     2      3
                         _Draw_point
 ---------------------------------------------------------------------------------
 (3) _Draw_point                                          10     8      2    1525
                                              6 COMRAM    10     8      2
                       _LCD_read_arm
                            _sendCom
                            _sendDat
 ---------------------------------------------------------------------------------
 (1) _sendDat                                              4     4      0     120
                                              2 COMRAM     4     4      0
                              _Spi8b
 ---------------------------------------------------------------------------------
 (4) _LCD_read_arm                                         4     4      0     180
                                              2 COMRAM     4     4      0
                            _Readspi
                              _Spi8b
 ---------------------------------------------------------------------------------
 (5) _Readspi                                              2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     218
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0     120
                                              6 COMRAM     1     1      0
                            _sendCom
 ---------------------------------------------------------------------------------
 (2) _sendCom                                              4     4      0     120
                                              2 COMRAM     4     4      0
                              _Spi8b
 ---------------------------------------------------------------------------------
 (2) _Spi8b                                                2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                _ECAN_ISR_ECAN_RXB0I
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (7) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ECAN_ISR_ECAN_RXB0I                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDInit
     _sendCom
       _Spi8b
   _LCD_Draw_Two_Dot
     _Draw_point
       _LCD_read_arm
         _Readspi
         _Spi8b
       _sendCom
         _Spi8b
       _sendDat
         _Spi8b
     _abs
     _v_Lcd12864DrawLineX_f
       _Draw_point
         _LCD_read_arm
           _Readspi
           _Spi8b
         _sendCom
           _Spi8b
         _sendDat
           _Spi8b
     _v_Lcd12864DrawLineY_f
       _Draw_point
         _LCD_read_arm
           _Readspi
           _Spi8b
         _sendCom
           _Spi8b
         _sendDat
           _Spi8b
   _LcdString
     _sendDat
       _Spi8b
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _display_char
     _sendCom
       _Spi8b
     _sendDat
       _Spi8b
   _ledtest
   _position
     _sendCom
       _Spi8b
   _sendDat
     _Spi8b

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_ISR_ECAN_RXB0I
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      3C       1       63.2%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C       3        0.0%
DATA                 0      0      3C      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Oct 08 15:34:03 2019

                     _ECAN_ISR_ECAN_RXB0I 1216                               __CFG_CP$OFF 000000  
                 LCD_Draw_Two_Dot@delta_x 0028                   LCD_Draw_Two_Dot@delta_y 002A  
                                      _C0 0831                                        _C1 082D  
                                      _C2 0829                                        _C3 0825  
                                      l61 095A                                        l54 08C6  
                                      l65 09C4                                        l59 08FE  
                                      _S1 080D                                        _S2 0809  
                                      _S3 0805                                        _S4 0801  
                __size_of_ECAN_Initialize 00B8                             ?_display_char 0007  
                                     l820 0F90                                       l805 0E62  
                                     l806 0E70                                       l807 0E7E  
                                     l843 0B7E                                       l790 0FD4  
                                     l792 0FD6                                       l784 0FCC  
                                     u270 10CA                                       u994 0A86  
                                     u995 0A82                ??_INT0_SetInterruptHandler 0003  
                                     _abs 0ED4                   __size_of_PMD_Initialize 0024  
                LCD_Draw_Two_Dot@distance 0025                                       tosl 003FFD  
                                     wreg 003FE8                             _INT0_CallBack 116E  
                           __CFG_BBEN$OFF 000000                      ?_ECAN_ISR_ECAN_RXB0I 0001  
                         __end_of_LCDInit 0E08                              __CFG_LVP$OFF 000000  
                           _INT1_CallBack 114E                              __CFG_ZCD$OFF 000000  
                                    ?_abs 0001                                      l3010 0D66  
                                    l3102 1030                                      l3040 08DC  
                                    l3016 0D98                                      l3106 1048  
                                    l3036 08C8                                      l3028 08A4  
                                    l3070 09E4                                      l3054 0966  
                                    l3072 09E8                                      l3048 0900  
                                    l3058 0982                                      l3154 0C4E  
                                    l1902 0C2E                                      l1585 0F04  
                                    l3098 0E8C                                      l1758 0FB0  
                                    l2920 0AAE                                      l2930 0B18  
                                    l2932 0B34                                      l2916 0A74  
                                    l2924 0ACA                                      l2918 0A92  
                                    l2926 0AEC                                      l2928 0AFA  
                                    l2936 0B50                                      l2938 0B72  
                                    l2970 0F6C                                      l2962 0F44  
                                    l1898 0B8A                                      l2974 0F80  
                                    l2958 0F30                                      l2896 0A32  
                                    l2898 0A3C                                      STR_1 085E  
                                    STR_2 0855                                      u1004 0AA4  
                                    u1005 0AA0                                      u1014 0AC0  
                                    u1110 089E                                      u1015 0ABC  
                                    u1024 0B0C                                      u1025 0B08  
                                    u1034 0B2A                                      u1130 08D6  
                                    u1035 0B26                                      u1044 0B46  
                                    u1045 0B42                                      u1090 0EE2  
                                    u1307 0FA0                                      u1317 0DBC  
                                    _LATA 003FBA                                      _LATB 003FBB  
                                    u1327 0DCC                                      _LATC 003FBC  
                                    u1337 0FDA                                      u1347 0FE4  
                                    u1267 0C58                                      u1277 0E26  
                                    u1287 0E48                                      u1297 0F96  
                                    _PMD0 0039C0                                      _PMD1 0039C1  
                                    _PMD2 0039C2                                      _PMD3 0039C3  
                                    _PMD4 0039C4                                      _PMD5 0039C5  
                                    _PMD6 0039C6                                      _PMD7 0039C7  
                                    _WPUA 003A41                                      _WPUB 003A51  
                                    _WPUC 003A61                                      _WPUE 003A81  
                           _INT2_CallBack 112E                             __CFG_FCMEN$ON 000000  
                                    abs@a 0001                                      _half 081D  
                                    _main 0C3E         __size_of_INT2_SetInterruptHandler 000E  
               ?_INT2_SetInterruptHandler 0001                                      prodl 003FF3  
                                    start 001A                             __CFG_CSWEN$ON 000000  
                            ___param_bank 000000                  __end_of_LCD_Draw_Two_Dot 0A0A  
                         __end_of_Readspi 0FC2                                     ??_abs 0003  
          __size_of_v_Lcd12864DrawLineX_f 003C            __size_of_v_Lcd12864DrawLineY_f 003C  
           __end_of_v_Lcd12864DrawLineX_f 0F8A             __end_of_v_Lcd12864DrawLineY_f 0F4E  
                        __end_of_INT0_ISR 1216                          __end_of_INT1_ISR 120C  
                        __end_of_INT2_ISR 1202            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 11C4                            ??_display_char 000F  
                                   ?_main 0001                             __CFG_WDTE$OFF 000000  
                          __CFG_DEBUG$OFF 000000                            LCD_read_arm@a1 0004  
                          LCD_read_arm@a2 0005                            LCD_read_arm@a3 0006  
                                   i2l473 1008                                     i2l475 1014  
                                   i2l477 1020                                     _OSCEN 0039DD  
                                   _TRISA 003FC2                                     _TRISB 003FC3  
                          ?_INT0_CallBack 0001                                     _TRISC 003FC4  
                              Readspi@dat 0002                                     _Spi8b 0FC2  
                       ??_I2C1_Initialize 0001                             ?_LCD_read_arm 0001  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            ?_INT1_CallBack 0001  
                         __end_of_pio2_1t 0815                     ??_ECAN_ISR_ECAN_RXB0I 0001  
                         __end_of_ledtest 11F8                                _Draw_point 0A0A  
          ??_INT1_DefaultInterruptHandler 0001                        __CFG_MCLRE$EXTMCLR 000000  
                         __end_of_invpio2 081D                                     _toint 0821  
                         __end_of_sendDat 0E54                           __end_of_sendCom 10BE  
                          ?_INT2_CallBack 0001                  _INT1_SetInterruptHandler 11D2  
                                   pclath 003FFA                v_Lcd12864DrawLineX_f@Color 0013  
                                   tablat 003FF5                v_Lcd12864DrawLineY_f@Color 0013  
                                   status 003FD8                           __initialization 110C  
                            __end_of_half 0821                              __end_of_main 0CD0  
                          __CFG_SAFEN$OFF 000000               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 002C                            __CFG_PR1WAY$ON 000000  
                           __activetblptr 000002                                 ??_LCDInit 0007  
                 display_char@char_length 000B                        __size_of_LcdString 0032  
                          ??_LCD_read_arm 0003                         ??_ECAN_Initialize 0001  
                                  ?_Spi8b 0001                                    _CANCON 003F8F  
                                  _CIOCON 003700                                    _ANSELA 003A40  
                                  _ANSELB 003A50                                    _ANSELC 003A60  
                                  _RC0PPS 003A10                                    _RC1PPS 003A11  
                                  _RB4PPS 003A0C                                    _ODCONA 003A42  
                                  _ODCONB 003A52                                    _ODCONC 003A62  
                          __CFG_WDTCCS$SC 000000                                    _INLVLA 003A44  
                                  _INLVLB 003A54                                    _INLVLC 003A64  
                                  _INLVLE 003A84                                    _OSCFRQ 0039DF  
                                  _RXB0D0 003F86                                    _RXB0D1 003F87  
                                  _RXB0D2 003F88                                    _RXB0D3 003F89  
                                  _RXB0D4 003F8A                                    _RXB1D0 0037F6  
                                  _RXB0D5 003F8B                                    _RXB1D1 0037F7  
                                  _RXB0D6 003F8C                                    _RXB1D2 0037F8  
                                  _RXB0D7 003F8D                                    _RXB1D3 0037F9  
                                  _RXB1D4 0037FA                                    _RXB1D5 0037FB  
                                  _RXB1D6 0037FC                                    _RXB1D7 0037FD  
                                  _TXB0D0 0037E6                                    _TXB0D1 0037E7  
                                  _TXB0D2 0037E8                                    _TXB0D3 0037E9  
                                  _TXB0D4 0037EA                                    _TXB1D0 0037D6  
                                  _TXB0D5 0037EB                                    _TXB1D1 0037D7  
                                  _TXB0D6 0037EC                                    _TXB1D2 0037D8  
                                  _TXB0D7 0037ED                                    _TXB1D3 0037D9  
                                  _TXB1D4 0037DA                                    _TXB2D0 0037C6  
                                  _TXB1D5 0037DB                                    _TXB2D1 0037C7  
                                  _TXB1D6 0037DC                                    _TXB2D2 0037C8  
                                  _TXB1D7 0037DD                                    _TXB2D3 0037C9  
                                  _TXB2D4 0037CA                                    _TXB2D5 0037CB  
                                  _TXB2D6 0037CC                                    _TXB2D7 0037CD  
                                  _c1pio2 0851                                    _c2pio2 084D  
                                  Spi8b@i 0002                                    _c3pio2 0849  
                                  _c4pio2 0845                                 ??_Readspi 0001  
                          __CFG_XINST$OFF 000000                 __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                                  _s1pio2 0841                                    _s2pio2 083D  
                                  _s3pio2 0839                                    _s4pio2 0835  
                          __CFG_STVREN$ON 000000                                    _pio2_1 0815  
                                  clear_0 1112                           ??_INT0_CallBack 0001  
                               ??_ledtest 0001                            _PMD_Initialize 10E8  
    __end_of_INT2_DefaultInterruptHandler 1222     __size_of_INT2_DefaultInterruptHandler 0002  
            _INT2_DefaultInterruptHandler 1220                             display_char@i 0012  
                           display_char@p 000D                             display_char@x 0009  
                           display_char@y 0007                           ??_INT1_CallBack 0001  
                               ??_sendDat 0003                                 ??_sendCom 0003  
                            __mediumconst 0000                                    tblptrh 003FF7  
                                  tblptrl 003FF6                                    tblptru 003FF8  
                        __end_of_position 0E94                           ??_INT2_CallBack 0001  
                             ?_Draw_point 0007  INT2_SetInterruptHandler@InterruptHandler 0001  
INT1_SetInterruptHandler@InterruptHandler 0001  INT0_SetInterruptHandler@InterruptHandler 0001  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 118E  
                              __accesstop 0060                   __end_of__initialization 1124  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                               ?_INT2_ISR 0001                      __end_of_display_char 0DB4  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
               v_Lcd12864DrawLineX_f@Temp 0014                         __end_of_LcdString 1060  
               v_Lcd12864DrawLineY_f@Temp 0015                            __pcstackCOMRAM 0001  
                           __end_of_Spi8b 0FFA                       ??_SYSTEM_Initialize 0003  
                           __end_of_toint 0825                                __end_of_C0 0835  
                              __end_of_C1 0831                                __end_of_C2 082D  
                              __end_of_C3 0829                                __end_of_S1 0811  
                              __end_of_S2 080D                                __end_of_S3 0809  
                              __end_of_S4 0805                    __end_of_PMD_Initialize 110C  
             __size_of_EXT_INT_Initialize 0040          __end_of_INT2_SetInterruptHandler 11D2  
                                 ??_Spi8b 0001             ?_INT2_DefaultInterruptHandler 0001  
               __end_of_SYSTEM_Initialize 11AC                           __CFG_IVT1WAY$ON 000000  
                             sendDat@dath 0004                               sendDat@datl 0005  
                             sendCom@comh 0004                               sendCom@coml 0005  
                   _INT0_InterruptHandler 003B                                ??_INT0_ISR 0001  
                              ??_INT1_ISR 0001                           __CFG_MVECEN$OFF 000000  
                              ??_INT2_ISR 0001                                __pnvCOMRAM 0037  
                                 IVTBASEH 003FD6                                   IVTBASEL 003FD5  
                                 IVTBASEU 003FD7                      __end_of_LCD_read_arm 1092  
                                 _I2C1CLK 003D7B                                   _I2C1CNT 003D6C  
                                 _I2C1ERR 003D76                                   _I2C1PIR 003D79  
                                 _I2C1RXB 003D6A                                   _I2C1TXB 003D6B  
                         __CFG_PPS1WAY$ON 000000                         ?_LCD_Draw_Two_Dot 0016  
                     __size_of_Draw_point 017C                           _I2C1_Initialize 10BE  
                                 _ECANCON 003F91                                   _CANSTAT 003F8E  
                      ??_LCD_Draw_Two_Dot 001A                           ?_PMD_Initialize 0001  
                                 _BRGCON1 003703                                   _BRGCON2 003704  
                                 _BRGCON3 003705                ??_INT1_SetInterruptHandler 0003  
                                 _LCDInit 0DB4                                   _INT0PPS 003AC0  
                     __CFG_PWRTS$PWRT_OFF 000000                                   _INT1PPS 003AC1  
                                 _INT2PPS 003AC2                                   _OSCCON1 0039D9  
                                 _OSCCON3 0039DB                                   i2u21_48 117A  
                                 i2u23_48 115A                                   i2u25_48 113A  
                                 _RXB0DLC 003F85                                   _RXB1DLC 0037F5  
                                 _OSCTUNE 0039DE                                   _TXB0DLC 0037E5  
                                 _SLRCONA 003A43                                   _SLRCONB 003A53  
                                 _SLRCONC 003A63                                   _TXB1DLC 0037D5  
                                 _TXB2DLC 0037C5                      LCD_Draw_Two_Dot@EndX 0017  
                    LCD_Draw_Two_Dot@EndY 0018                      LCD_Draw_Two_Dot@incx 0023  
                    LCD_Draw_Two_Dot@incy 0024         __size_of_INT0_SetInterruptHandler 000E  
               ?_INT0_SetInterruptHandler 0001                                   _Readspi 0F8A  
                                 __Hparam 0000                                   __Lparam 0000  
                               ?_position 0007                           _ECAN_Initialize 0B86  
                            __psmallconst 0800                                   __pcinit 110C  
                                 __ramtop 0800                                   __ptext0 0C3E  
                                 __ptext1 0E54                                   __ptext2 11EE  
                                 __ptext3 0D48                                   __ptext4 118E  
                                 __ptext5 10E8                                   __ptext6 0CD0  
                                 __ptext7 11AC                                   __ptext8 121C  
                                 __ptext9 10BE                     _v_Lcd12864DrawLineX_f 0F4E  
                   _v_Lcd12864DrawLineY_f 0F12               __end_of_ECAN_ISR_ECAN_RXB0I 121C  
                                 _pio2_1t 0811                           __CFG_WRTAPP$OFF 000000  
                                 _ledtest 11EE                     _OSCILLATOR_Initialize 11AC  
                            __size_of_abs 003E                                   _invpio2 0819  
                                 _sendDat 0E08                                   _sendCom 1092  
                ??_PIN_MANAGER_Initialize 0001                           __CFG_WRTSAF$OFF 000000  
                             _I2C1PIRbits 003D79                __size_of_SYSTEM_Initialize 001E  
                   __size_of_display_char 006C                      end_of_initialization 1124  
                _INT2_SetInterruptHandler 11C4            ??_INT2_DefaultInterruptHandler 0001  
                        ___rem_pio2f@F530 0032                             __Lmediumconst 0000  
                 __end_of_I2C1_Initialize 10E8                                   postinc0 003FEE  
                              ??_position 0008                     __CFG_WDTCPS$WDTCPS_31 000000  
                   _INT1_InterruptHandler 0039                                 _PORTCbits 003FCC  
                            _display_char 0D48                    LCD_Draw_Two_Dot@StartX 0027  
                  LCD_Draw_Two_Dot@StartY 0016                              ??_Draw_point 0009  
                        __CFG_FEXTOSC$OFF 000000                     __size_of_LCD_read_arm 0032  
                 __end_of_ECAN_Initialize 0C3E                         __size_of_INT0_ISR 000A  
                       __size_of_INT1_ISR 000A                         __size_of_INT2_ISR 000A  
                          __end_of_c1pio2 0855                            __end_of_c2pio2 0851  
                          __end_of_c3pio2 084D                            __end_of_c4pio2 0849  
            __end_of_INTERRUPT_Initialize 1220                            __end_of_s1pio2 0845  
                          __end_of_s2pio2 0841                            __end_of_s3pio2 083D  
                          __end_of_s4pio2 0839      __end_of_INT0_DefaultInterruptHandler 1226  
   __size_of_INT0_DefaultInterruptHandler 0002              _INT0_DefaultInterruptHandler 1224  
                               _LcdString 102E                        __end_of_Draw_point 0B86  
                  ?_v_Lcd12864DrawLineX_f 0011                    ?_v_Lcd12864DrawLineY_f 0011  
                          __end_of_pio2_1 0819                    ?_OSCILLATOR_Initialize 0001  
                             position@pos 0008                     __end_of_INT0_CallBack 118E  
                     start_initialization 110C           __size_of_PIN_MANAGER_Initialize 0078  
                             __end_of_abs 0F12                     __end_of_INT1_CallBack 116E  
                            _LCD_read_arm 1060                                ivt0x8_base 0008  
                   __end_of_INT2_CallBack 114E                          ?_I2C1_Initialize 0001  
                        __CFG_LPBOREN$OFF 000000                          ??_PMD_Initialize 0001  
                              ?_LcdString 0007                __end_of_EXT_INT_Initialize 0ED4  
           ?_INT0_DefaultInterruptHandler 0001                                  ?_LCDInit 0001  
                             __pbssCOMRAM 002E          __end_of_INT0_SetInterruptHandler 11EE  
               __size_of_LCD_Draw_Two_Dot 01A4                     _INT2_InterruptHandler 0037  
                              sendDat@dat 0006                                sendCom@com 0006  
                        ?_ECAN_Initialize 0001                                  ?_Readspi 0001  
                  _PIN_MANAGER_Initialize 0CD0                         LCD_Draw_Two_Dot@t 001D  
                       LCD_Draw_Two_Dot@x 001F                         LCD_Draw_Two_Dot@y 0021  
                                _I2C1ADB1 003D6E                                  _I2C1CON0 003D73  
                                _I2C1CON1 003D74                                  _I2C1CON2 003D75  
            ??_INTERRUPT_InterruptManager 0001                         __size_of_position 0040  
                  __CFG_BBSIZE$BBSIZE_512 000000                                 fabsf@F463 002E  
                             __smallconst 0800                                  ?_ledtest 0001  
              ??_INT2_SetInterruptHandler 0003                               _COMSTATbits 003F90  
                      Draw_point@ReadOldH 000E                        Draw_point@ReadOldL 000F  
                                ?_sendDat 0001                                  ?_sendCom 0001  
                               _lastError 0036                                  _CANRXPPS 003AED  
                          __size_of_Spi8b 0038                        Draw_point@Tier_bit 0010  
                    _INTERRUPT_Initialize 121C                                _I2C1SDAPPS 003AE4  
                              _I2C1SCLPPS 003AE3                                  _INT0_ISR 120C  
                                _INT1_ISR 1202                                  _INT2_ISR 11F8  
                                _LATAbits 003FBA                                  _LATBbits 003FBB  
                                _LATCbits 003FBC         __size_of_INT1_SetInterruptHandler 000E  
               ?_INT1_SetInterruptHandler 0001                                  _PIE1bits 003991  
                                _PIE4bits 003994                                  _PIE5bits 003995  
                                _PIE8bits 003998                       __CFG_BORV$VBOR_2P45 000000  
     __size_of_INTERRUPT_InterruptManager 0034                             _I2C1STAT0bits 003D77  
                           _I2C1STAT1bits 003D78                                  _PIR1bits 0039A1  
                                _PIR4bits 0039A4                                  _PIR5bits 0039A5  
                                _PIR8bits 0039A8                                  _RXB0EIDH 003F83  
                                _RXB0EIDL 003F84                                  _RXB1EIDH 0037F3  
                                _RXB1EIDL 0037F4                                  _RXB0SIDH 003F81  
                                _RXB0SIDL 003F82                                  _RXF0EIDH 0037A2  
                                _RXB1SIDH 0037F1                                  _RXF0EIDL 0037A3  
                                _RXB1SIDL 0037F2                                  _RXF1EIDH 0037A6  
                                _RXF1EIDL 0037A7                                  _RXF2EIDH 0037AA  
                                _RXF2EIDL 0037AB                                  _RXF3EIDH 0037AE  
                                _RXF3EIDL 0037AF                                  _RXF4EIDH 0037B2  
                                _RXF4EIDL 0037B3                                  _RXF5EIDH 0037B6  
                                _RXF5EIDL 0037B7                                  _RXF0SIDH 0037A0  
                                _RXF0SIDL 0037A1                                  _RXF1SIDH 0037A4  
                                _TXB0EIDH 0037E3                                  _RXF1SIDL 0037A5  
                                _TXB0EIDL 0037E4                                  _RXF2SIDH 0037A8  
                                _TXB1EIDH 0037D3                                  _RXF2SIDL 0037A9  
                                _TXB1EIDL 0037D4                                  _RXF3SIDH 0037AC  
                                _TXB2EIDH 0037C3                                  _RXF3SIDL 0037AD  
                                _TXB2EIDL 0037C4                                  _RXF4SIDH 0037B0  
                                _RXF4SIDL 0037B1                                  _RXF5SIDH 0037B4  
                                _RXF5SIDL 0037B5                                  _RXM0EIDH 0037BA  
                                _RXM0EIDL 0037BB                                  _RXM1EIDH 0037BE  
                                _TXB0SIDH 0037E1                                  _RXM1EIDL 0037BF  
                                _TXB0SIDL 0037E2                                  _TXB1SIDH 0037D1  
                                _TXB1SIDL 0037D2                                  _TXB2SIDH 0037C1  
                                _TXB2SIDL 0037C2                                  _RXM0SIDH 0037B8  
                                _RXM0SIDL 0037B9                                  _RXM1SIDH 0037BC  
                                _RXM1SIDL 0037BD                               ??_LcdString 0009  
                   LCD_Draw_Two_Dot@Color 0019                          __size_of_LCDInit 0054  
          ??_INT0_DefaultInterruptHandler 0001              __size_of_ECAN_ISR_ECAN_RXB0I 0006  
                                Readspi@i 0001                               _INTCON0bits 003FD2  
                   ?_INTERRUPT_Initialize 0001                                  Spi8b@dat 0001  
                _INT0_SetInterruptHandler 11E0                                  __Hrparam 0000  
                        __size_of_Readspi 0038                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                   ??_v_Lcd12864DrawLineX_f 0014  
                 ??_v_Lcd12864DrawLineY_f 0014                   ??_OSCILLATOR_Initialize 0001  
                        __size_of_ledtest 000A                              _I2C1CON0bits 003D73  
                                __pivt0x8 0008                          __size_of_sendDat 004C  
                        __size_of_sendCom 002C                           Draw_point@Color 0008  
                                __ptext10 0E94                                  __ptext11 11C4  
                                __ptext20 0E08                                  __ptext12 11D2  
                                __ptext21 1060                                  __ptext13 11E0  
                                __ptext30 1220                                  __ptext22 0F8A  
                                __ptext14 0B86                                  __ptext31 1202  
                                __ptext23 0ED4                                  __ptext15 102E  
                                __ptext32 114E                                  __ptext24 0DB4  
                                __ptext16 0866                                  __ptext33 1222  
                                __ptext25 1092                                  __ptext17 0F12  
                                __ptext34 120C                                  __ptext26 0FC2  
                                __ptext18 0F4E                                  __ptext35 116E  
                                __ptext27 0FFA                                  __ptext19 0A0A  
                                __ptext36 1224                                  __ptext28 11F8  
                                __ptext37 1216                                  __ptext29 112E  
                                __ptext38 0000                          _LCD_Draw_Two_Dot 0866  
                           __size_of_main 0092                      __CFG_WDTCWS$WDTCWS_7 000000  
                                _position 0E54        __end_of_INTERRUPT_InterruptManager 102E  
              _INTERRUPT_InterruptManager 0FFA      __end_of_INT1_DefaultInterruptHandler 1224  
   __size_of_INT1_DefaultInterruptHandler 0002              _INT1_DefaultInterruptHandler 1222  
                               position@x 0009                                 position@y 0007  
                             _RXB0CONbits 003F80                               _RXB1CONbits 0037F0  
                  ??_INTERRUPT_Initialize 0001                        _EXT_INT_Initialize 0E94  
                                intlevel2 0000                   v_Lcd12864DrawLineX_f@X0 0015  
                 v_Lcd12864DrawLineX_f@X1 0011                   v_Lcd12864DrawLineY_f@Y0 0011  
                 v_Lcd12864DrawLineY_f@Y1 0012                            Draw_point@Tier 000D  
                 ?_PIN_MANAGER_Initialize 0001                         __CFG_CLKOUTEN$OFF 000000  
                     ?_EXT_INT_Initialize 0001                               _TXB0CONbits 0037E0  
                             _TXB1CONbits 0037D0                               _TXB2CONbits 0037C0  
                  __size_of_INT0_CallBack 0020                    __size_of_INT1_CallBack 0020  
                  __size_of_INT2_CallBack 0020                  __size_of_I2C1_Initialize 002A  
                    ??_EXT_INT_Initialize 0003             ?_INT1_DefaultInterruptHandler 0001  
                  v_Lcd12864DrawLineX_f@Y 0012                    v_Lcd12864DrawLineY_f@X 0014  
                           Draw_point@Row 000C                                LcdString@p 0007  
        __end_of_INT1_SetInterruptHandler 11E0            __end_of_PIN_MANAGER_Initialize 0D48  
                             Draw_point@X 000B                               Draw_point@Y 0007  
